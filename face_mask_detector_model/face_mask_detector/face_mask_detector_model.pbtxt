node {
  name: "face_model/input_node"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Conv1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1_pad/Pad"
  op: "Pad"
  input: "face_model/input_node"
  input: "Conv1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Conv1/kernel/Initializer/random_uniform/max"
  input: "Conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Conv1/kernel/Initializer/random_uniform/mul"
  input: "Conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv1/kernel"
    }
  }
}
node {
  name: "Conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv1/kernel"
}
node {
  name: "Conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Conv1/kernel"
  input: "Conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/Conv2D"
  op: "Conv2D"
  input: "Conv1_pad/Pad"
  input: "Conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bn_Conv1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/gamma"
    }
  }
}
node {
  name: "bn_Conv1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/gamma"
}
node {
  name: "bn_Conv1/gamma/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/gamma"
  input: "bn_Conv1/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_Conv1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/beta"
    }
  }
}
node {
  name: "bn_Conv1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/beta"
}
node {
  name: "bn_Conv1/beta/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/beta"
  input: "bn_Conv1/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn_Conv1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/moving_mean"
    }
  }
}
node {
  name: "bn_Conv1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_mean"
}
node {
  name: "bn_Conv1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "bn_Conv1/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bn_Conv1/moving_variance"
    }
  }
}
node {
  name: "bn_Conv1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_variance"
}
node {
  name: "bn_Conv1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "bn_Conv1/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/switch_t"
  op: "Identity"
  input: "bn_Conv1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/switch_f"
  op: "Identity"
  input: "bn_Conv1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "bn_Conv1/gamma"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "bn_Conv1/beta"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Const"
  op: "Const"
  input: "^bn_Conv1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Const_1"
  op: "Const"
  input: "^bn_Conv1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "bn_Conv1/cond/FusedBatchNormV3/Switch:1"
  input: "bn_Conv1/cond/ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_1"
  input: "bn_Conv1/cond/Const"
  input: "bn_Conv1/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "Conv1/Conv2D"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/Conv2D"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "bn_Conv1/gamma"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/gamma"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "bn_Conv1/beta"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/beta"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "bn_Conv1/moving_mean"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "bn_Conv1/moving_variance"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/Switch"
  input: "bn_Conv1/cond/ReadVariableOp_2"
  input: "bn_Conv1/cond/ReadVariableOp_3"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "bn_Conv1/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "bn_Conv1/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "Conv1/Conv2D"
  input: "bn_Conv1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/Conv2D"
      }
    }
  }
}
node {
  name: "bn_Conv1/cond/Merge"
  op: "Merge"
  input: "bn_Conv1/cond/FusedBatchNormV3_1"
  input: "bn_Conv1/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/Merge_1"
  op: "Merge"
  input: "bn_Conv1/cond/FusedBatchNormV3_1:1"
  input: "bn_Conv1/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond/Merge_2"
  op: "Merge"
  input: "bn_Conv1/cond/FusedBatchNormV3_1:2"
  input: "bn_Conv1/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/switch_t"
  op: "Identity"
  input: "bn_Conv1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/switch_f"
  op: "Identity"
  input: "bn_Conv1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Const"
  op: "Const"
  input: "^bn_Conv1/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Const_1"
  op: "Const"
  input: "^bn_Conv1/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/cond_1/Merge"
  op: "Merge"
  input: "bn_Conv1/cond_1/Const_1"
  input: "bn_Conv1/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/sub"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg/sub/x"
  input: "bn_Conv1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg/ReadVariableOp"
  input: "bn_Conv1/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/mul"
  op: "Mul"
  input: "bn_Conv1/AssignMovingAvg/sub_1"
  input: "bn_Conv1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "bn_Conv1/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "^bn_Conv1/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg_1/sub/x"
  input: "bn_Conv1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "bn_Conv1/AssignMovingAvg_1/ReadVariableOp"
  input: "bn_Conv1/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "bn_Conv1/AssignMovingAvg_1/sub_1"
  input: "bn_Conv1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "bn_Conv1/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bn_Conv1/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "^bn_Conv1/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn_Conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1_relu/Relu6"
  op: "Relu6"
  input: "bn_Conv1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "expanded_conv_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Conv1_relu/Relu6"
  input: "expanded_conv_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/gamma"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/gamma"
}
node {
  name: "expanded_conv_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "expanded_conv_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/beta"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/beta"
}
node {
  name: "expanded_conv_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "expanded_conv_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "expanded_conv_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "expanded_conv_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/beta"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Const"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_1"
  input: "expanded_conv_depthwise_BN/cond/Const"
  input: "expanded_conv_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise/depthwise"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/beta"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_2"
  input: "expanded_conv_depthwise_BN/cond/ReadVariableOp_3"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "expanded_conv_depthwise/depthwise"
  input: "expanded_conv_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "expanded_conv_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "expanded_conv_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^expanded_conv_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "expanded_conv_depthwise_BN/cond_1/Const_1"
  input: "expanded_conv_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/sub/x"
  input: "expanded_conv_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/sub_1"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "^expanded_conv_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "expanded_conv_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "expanded_conv_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "^expanded_conv_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_depthwise_relu/Relu6"
  op: "Relu6"
  input: "expanded_conv_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/max"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/mul"
  input: "expanded_conv_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
}
node {
  name: "expanded_conv_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project/kernel"
    }
  }
}
node {
  name: "expanded_conv_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project/kernel"
}
node {
  name: "expanded_conv_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project/kernel"
  input: "expanded_conv_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "expanded_conv_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project/Conv2D"
  op: "Conv2D"
  input: "expanded_conv_depthwise_relu/Relu6"
  input: "expanded_conv_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/gamma"
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/gamma"
}
node {
  name: "expanded_conv_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "expanded_conv_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/beta"
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/beta"
}
node {
  name: "expanded_conv_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "expanded_conv_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/moving_mean"
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_mean"
}
node {
  name: "expanded_conv_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "expanded_conv_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "expanded_conv_project_BN/moving_variance"
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_variance"
}
node {
  name: "expanded_conv_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "expanded_conv_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/switch_t"
  op: "Identity"
  input: "expanded_conv_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/switch_f"
  op: "Identity"
  input: "expanded_conv_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/gamma"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/beta"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Const"
  op: "Const"
  input: "^expanded_conv_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Const_1"
  op: "Const"
  input: "^expanded_conv_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "expanded_conv_project_BN/cond/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_1"
  input: "expanded_conv_project_BN/cond/Const"
  input: "expanded_conv_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "expanded_conv_project/Conv2D"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/Conv2D"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/gamma"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/gamma"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/beta"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/beta"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/moving_mean"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "expanded_conv_project_BN/moving_variance"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_2"
  input: "expanded_conv_project_BN/cond/ReadVariableOp_3"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "expanded_conv_project/Conv2D"
  input: "expanded_conv_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project/Conv2D"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Merge"
  op: "Merge"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Merge_1"
  op: "Merge"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1:1"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond/Merge_2"
  op: "Merge"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3_1:2"
  input: "expanded_conv_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "expanded_conv_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "expanded_conv_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Const"
  op: "Const"
  input: "^expanded_conv_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^expanded_conv_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/cond_1/Merge"
  op: "Merge"
  input: "expanded_conv_project_BN/cond_1/Const_1"
  input: "expanded_conv_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg/sub/x"
  input: "expanded_conv_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "expanded_conv_project_BN/AssignMovingAvg/sub_1"
  input: "expanded_conv_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "expanded_conv_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "^expanded_conv_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/sub/x"
  input: "expanded_conv_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "expanded_conv_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/sub_1"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "expanded_conv_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "expanded_conv_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "^expanded_conv_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@expanded_conv_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_1_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_1_expand/kernel/Initializer/random_uniform/max"
  input: "block_1_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_1_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_1_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_1_expand/kernel/Initializer/random_uniform/mul"
  input: "block_1_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
}
node {
  name: "block_1_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand/kernel"
    }
  }
}
node {
  name: "block_1_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand/kernel"
}
node {
  name: "block_1_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand/kernel"
  input: "block_1_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand/Conv2D"
  op: "Conv2D"
  input: "expanded_conv_project_BN/cond/Merge"
  input: "block_1_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/gamma"
    }
  }
}
node {
  name: "block_1_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/gamma"
}
node {
  name: "block_1_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "block_1_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/beta"
    }
  }
}
node {
  name: "block_1_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/beta"
}
node {
  name: "block_1_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/beta"
  input: "block_1_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_mean"
}
node {
  name: "block_1_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "block_1_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_variance"
}
node {
  name: "block_1_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "block_1_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_1_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_1_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_expand_BN/gamma"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_expand_BN/beta"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Const"
  op: "Const"
  input: "^block_1_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_1_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_1_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_1_expand_BN/cond/ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_1"
  input: "block_1_expand_BN/cond/Const"
  input: "block_1_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_1_expand/Conv2D"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_1_expand_BN/gamma"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_1_expand_BN/beta"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_expand_BN/moving_mean"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_expand_BN/moving_variance"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_1_expand_BN/cond/ReadVariableOp_2"
  input: "block_1_expand_BN/cond/ReadVariableOp_3"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_1_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_1_expand/Conv2D"
  input: "block_1_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_1_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_1_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_1_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_1_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_1_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_1_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_1_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_1_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_1_expand_BN/cond_1/Const_1"
  input: "block_1_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg/sub/x"
  input: "block_1_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_1_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_1_expand_BN/AssignMovingAvg/sub_1"
  input: "block_1_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "block_1_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "^block_1_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_1_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_1_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_1_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_1_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_1_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "block_1_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "^block_1_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_expand_relu/Relu6"
  op: "Relu6"
  input: "block_1_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_pad/Pad"
  op: "Pad"
  input: "block_1_expand_relu/Relu6"
  input: "block_1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise/depthwise_kernel"
}
node {
  name: "block_1_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "block_1_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_1_pad/Pad"
  input: "block_1_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/gamma"
}
node {
  name: "block_1_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "block_1_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/beta"
}
node {
  name: "block_1_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "block_1_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_mean"
}
node {
  name: "block_1_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "block_1_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_variance"
}
node {
  name: "block_1_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "block_1_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_1_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_1_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/gamma"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/beta"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_1_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_1_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_1_depthwise_BN/cond/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_1_depthwise_BN/cond/Const"
  input: "block_1_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_1_depthwise/depthwise"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/gamma"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/beta"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/moving_mean"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_depthwise_BN/moving_variance"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_1_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_1_depthwise/depthwise"
  input: "block_1_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_1_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_1_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_1_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_1_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_1_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_1_depthwise_BN/cond_1/Const_1"
  input: "block_1_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_1_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_1_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_1_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "block_1_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "^block_1_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_1_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_1_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "block_1_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "^block_1_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_1_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22360679507255554
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22360679507255554
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_1_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_1_project/kernel/Initializer/random_uniform/max"
  input: "block_1_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_1_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_1_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
}
node {
  name: "block_1_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_1_project/kernel/Initializer/random_uniform/mul"
  input: "block_1_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
}
node {
  name: "block_1_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project/kernel"
    }
  }
}
node {
  name: "block_1_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project/kernel"
}
node {
  name: "block_1_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_1_project/kernel"
  input: "block_1_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_1_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project/Conv2D"
  op: "Conv2D"
  input: "block_1_depthwise_relu/Relu6"
  input: "block_1_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/gamma"
    }
  }
}
node {
  name: "block_1_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/gamma"
}
node {
  name: "block_1_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/gamma"
  input: "block_1_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/beta"
    }
  }
}
node {
  name: "block_1_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/beta"
}
node {
  name: "block_1_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/beta"
  input: "block_1_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_mean"
}
node {
  name: "block_1_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "block_1_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_1_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_variance"
}
node {
  name: "block_1_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "block_1_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_1_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_1_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_project_BN/gamma"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_project_BN/beta"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/Const"
  op: "Const"
  input: "^block_1_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_1_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_1_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_1_project_BN/cond/ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_1"
  input: "block_1_project_BN/cond/Const"
  input: "block_1_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_1_project/Conv2D"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_1_project_BN/gamma"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_1_project_BN/beta"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_1_project_BN/moving_mean"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_1_project_BN/moving_variance"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_1_project_BN/cond/ReadVariableOp_2"
  input: "block_1_project_BN/cond/ReadVariableOp_3"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_1_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_1_project/Conv2D"
  input: "block_1_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond/Merge"
  op: "Merge"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1"
  input: "block_1_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_1_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_1_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_1_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_1_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_1_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_1_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_1_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_1_project_BN/cond_1/Const_1"
  input: "block_1_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg/sub/x"
  input: "block_1_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_1_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_1_project_BN/AssignMovingAvg/sub_1"
  input: "block_1_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "block_1_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "^block_1_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_1_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_1_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_1_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_1_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_1_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "block_1_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_1_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "^block_1_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_1_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_2_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_2_expand/kernel/Initializer/random_uniform/max"
  input: "block_2_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_2_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_2_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_2_expand/kernel/Initializer/random_uniform/mul"
  input: "block_2_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
}
node {
  name: "block_2_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand/kernel"
    }
  }
}
node {
  name: "block_2_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand/kernel"
}
node {
  name: "block_2_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand/kernel"
  input: "block_2_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand/Conv2D"
  op: "Conv2D"
  input: "block_1_project_BN/cond/Merge"
  input: "block_2_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/gamma"
    }
  }
}
node {
  name: "block_2_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/gamma"
}
node {
  name: "block_2_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "block_2_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/beta"
    }
  }
}
node {
  name: "block_2_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/beta"
}
node {
  name: "block_2_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/beta"
  input: "block_2_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_mean"
}
node {
  name: "block_2_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "block_2_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_variance"
}
node {
  name: "block_2_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "block_2_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_2_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_2_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_expand_BN/gamma"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_expand_BN/beta"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Const"
  op: "Const"
  input: "^block_2_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_2_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_2_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_2_expand_BN/cond/ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_1"
  input: "block_2_expand_BN/cond/Const"
  input: "block_2_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_2_expand/Conv2D"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_2_expand_BN/gamma"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_2_expand_BN/beta"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_expand_BN/moving_mean"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_expand_BN/moving_variance"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_2_expand_BN/cond/ReadVariableOp_2"
  input: "block_2_expand_BN/cond/ReadVariableOp_3"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_2_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_2_expand/Conv2D"
  input: "block_2_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_2_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_2_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_2_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_2_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_2_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_2_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_2_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_2_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_2_expand_BN/cond_1/Const_1"
  input: "block_2_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg/sub/x"
  input: "block_2_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_2_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_2_expand_BN/AssignMovingAvg/sub_1"
  input: "block_2_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "block_2_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "^block_2_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_2_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_2_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_2_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_2_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_2_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "block_2_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "^block_2_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_expand_relu/Relu6"
  op: "Relu6"
  input: "block_2_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise/depthwise_kernel"
}
node {
  name: "block_2_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "block_2_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_2_expand_relu/Relu6"
  input: "block_2_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/gamma"
}
node {
  name: "block_2_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "block_2_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/beta"
}
node {
  name: "block_2_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "block_2_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_mean"
}
node {
  name: "block_2_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "block_2_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_variance"
}
node {
  name: "block_2_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "block_2_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_2_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_2_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/gamma"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/beta"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_2_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_2_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_2_depthwise_BN/cond/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_2_depthwise_BN/cond/Const"
  input: "block_2_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_2_depthwise/depthwise"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/gamma"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/beta"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/moving_mean"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_depthwise_BN/moving_variance"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_2_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_2_depthwise/depthwise"
  input: "block_2_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_2_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_2_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_2_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_2_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_2_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_2_depthwise_BN/cond_1/Const_1"
  input: "block_2_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_2_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_2_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_2_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "block_2_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "^block_2_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_2_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_2_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "block_2_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "^block_2_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_2_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_2_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_2_project/kernel/Initializer/random_uniform/max"
  input: "block_2_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_2_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_2_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
}
node {
  name: "block_2_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_2_project/kernel/Initializer/random_uniform/mul"
  input: "block_2_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
}
node {
  name: "block_2_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project/kernel"
    }
  }
}
node {
  name: "block_2_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project/kernel"
}
node {
  name: "block_2_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_2_project/kernel"
  input: "block_2_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_2_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project/Conv2D"
  op: "Conv2D"
  input: "block_2_depthwise_relu/Relu6"
  input: "block_2_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/gamma"
    }
  }
}
node {
  name: "block_2_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/gamma"
}
node {
  name: "block_2_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/gamma"
  input: "block_2_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/beta"
    }
  }
}
node {
  name: "block_2_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/beta"
}
node {
  name: "block_2_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/beta"
  input: "block_2_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_mean"
}
node {
  name: "block_2_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "block_2_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_2_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_variance"
}
node {
  name: "block_2_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "block_2_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_2_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_2_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_project_BN/gamma"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_project_BN/beta"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/Const"
  op: "Const"
  input: "^block_2_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_2_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_2_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_2_project_BN/cond/ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_1"
  input: "block_2_project_BN/cond/Const"
  input: "block_2_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_2_project/Conv2D"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_2_project_BN/gamma"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_2_project_BN/beta"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_2_project_BN/moving_mean"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_2_project_BN/moving_variance"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_2_project_BN/cond/ReadVariableOp_2"
  input: "block_2_project_BN/cond/ReadVariableOp_3"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_2_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_2_project/Conv2D"
  input: "block_2_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond/Merge"
  op: "Merge"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1"
  input: "block_2_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_2_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_2_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_2_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_2_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_2_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_2_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_2_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_2_project_BN/cond_1/Const_1"
  input: "block_2_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg/sub/x"
  input: "block_2_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_2_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_2_project_BN/AssignMovingAvg/sub_1"
  input: "block_2_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "block_2_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "^block_2_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_2_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_2_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_2_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_2_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_2_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "block_2_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "^block_2_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_2_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_2_add/add"
  op: "AddV2"
  input: "block_1_project_BN/cond/Merge"
  input: "block_2_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_3_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_3_expand/kernel/Initializer/random_uniform/max"
  input: "block_3_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_3_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_3_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_3_expand/kernel/Initializer/random_uniform/mul"
  input: "block_3_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
}
node {
  name: "block_3_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand/kernel"
    }
  }
}
node {
  name: "block_3_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand/kernel"
}
node {
  name: "block_3_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand/kernel"
  input: "block_3_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand/Conv2D"
  op: "Conv2D"
  input: "block_2_add/add"
  input: "block_3_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/gamma"
    }
  }
}
node {
  name: "block_3_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/gamma"
}
node {
  name: "block_3_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "block_3_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/beta"
    }
  }
}
node {
  name: "block_3_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/beta"
}
node {
  name: "block_3_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/beta"
  input: "block_3_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_mean"
}
node {
  name: "block_3_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "block_3_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_variance"
}
node {
  name: "block_3_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "block_3_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_3_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_3_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_expand_BN/gamma"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_expand_BN/beta"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Const"
  op: "Const"
  input: "^block_3_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_3_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_3_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_3_expand_BN/cond/ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_1"
  input: "block_3_expand_BN/cond/Const"
  input: "block_3_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_3_expand/Conv2D"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_3_expand_BN/gamma"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_3_expand_BN/beta"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_expand_BN/moving_mean"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_expand_BN/moving_variance"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_3_expand_BN/cond/ReadVariableOp_2"
  input: "block_3_expand_BN/cond/ReadVariableOp_3"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_3_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_3_expand/Conv2D"
  input: "block_3_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_3_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_3_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_3_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_3_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_3_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_3_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_3_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_3_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_3_expand_BN/cond_1/Const_1"
  input: "block_3_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg/sub/x"
  input: "block_3_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_3_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_3_expand_BN/AssignMovingAvg/sub_1"
  input: "block_3_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "block_3_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "^block_3_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_3_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_3_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_3_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_3_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_3_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "block_3_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "^block_3_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_expand_relu/Relu6"
  op: "Relu6"
  input: "block_3_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_pad/Pad"
  op: "Pad"
  input: "block_3_expand_relu/Relu6"
  input: "block_3_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise/depthwise_kernel"
}
node {
  name: "block_3_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "block_3_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_3_pad/Pad"
  input: "block_3_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/gamma"
}
node {
  name: "block_3_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "block_3_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/beta"
}
node {
  name: "block_3_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "block_3_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_mean"
}
node {
  name: "block_3_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "block_3_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_variance"
}
node {
  name: "block_3_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "block_3_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_3_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_3_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/gamma"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/beta"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_3_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_3_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_3_depthwise_BN/cond/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_3_depthwise_BN/cond/Const"
  input: "block_3_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_3_depthwise/depthwise"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/gamma"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/beta"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/moving_mean"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_depthwise_BN/moving_variance"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_3_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_3_depthwise/depthwise"
  input: "block_3_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_3_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_3_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_3_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_3_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_3_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_3_depthwise_BN/cond_1/Const_1"
  input: "block_3_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_3_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_3_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_3_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "block_3_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "^block_3_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_3_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_3_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "block_3_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "^block_3_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_3_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18463723361492157
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18463723361492157
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_3_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_3_project/kernel/Initializer/random_uniform/max"
  input: "block_3_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_3_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_3_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
}
node {
  name: "block_3_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_3_project/kernel/Initializer/random_uniform/mul"
  input: "block_3_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
}
node {
  name: "block_3_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project/kernel"
    }
  }
}
node {
  name: "block_3_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project/kernel"
}
node {
  name: "block_3_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_3_project/kernel"
  input: "block_3_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_3_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project/Conv2D"
  op: "Conv2D"
  input: "block_3_depthwise_relu/Relu6"
  input: "block_3_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/gamma"
    }
  }
}
node {
  name: "block_3_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/gamma"
}
node {
  name: "block_3_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/gamma"
  input: "block_3_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/beta"
    }
  }
}
node {
  name: "block_3_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/beta"
}
node {
  name: "block_3_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/beta"
  input: "block_3_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_mean"
}
node {
  name: "block_3_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "block_3_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_3_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_variance"
}
node {
  name: "block_3_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "block_3_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_3_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_3_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_project_BN/gamma"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_project_BN/beta"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/Const"
  op: "Const"
  input: "^block_3_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_3_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_3_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_3_project_BN/cond/ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_1"
  input: "block_3_project_BN/cond/Const"
  input: "block_3_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_3_project/Conv2D"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_3_project_BN/gamma"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_3_project_BN/beta"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_3_project_BN/moving_mean"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_3_project_BN/moving_variance"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_3_project_BN/cond/ReadVariableOp_2"
  input: "block_3_project_BN/cond/ReadVariableOp_3"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_3_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_3_project/Conv2D"
  input: "block_3_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond/Merge"
  op: "Merge"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1"
  input: "block_3_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_3_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_3_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_3_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_3_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_3_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_3_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_3_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_3_project_BN/cond_1/Const_1"
  input: "block_3_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg/sub/x"
  input: "block_3_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_3_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_3_project_BN/AssignMovingAvg/sub_1"
  input: "block_3_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "block_3_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "^block_3_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_3_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_3_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_3_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_3_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_3_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "block_3_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_3_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "^block_3_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_3_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_4_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_4_expand/kernel/Initializer/random_uniform/max"
  input: "block_4_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_4_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_4_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_4_expand/kernel/Initializer/random_uniform/mul"
  input: "block_4_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
}
node {
  name: "block_4_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand/kernel"
    }
  }
}
node {
  name: "block_4_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand/kernel"
}
node {
  name: "block_4_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand/kernel"
  input: "block_4_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand/Conv2D"
  op: "Conv2D"
  input: "block_3_project_BN/cond/Merge"
  input: "block_4_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/gamma"
    }
  }
}
node {
  name: "block_4_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/gamma"
}
node {
  name: "block_4_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "block_4_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/beta"
    }
  }
}
node {
  name: "block_4_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/beta"
}
node {
  name: "block_4_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/beta"
  input: "block_4_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_mean"
}
node {
  name: "block_4_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "block_4_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_variance"
}
node {
  name: "block_4_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "block_4_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_4_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_4_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_expand_BN/gamma"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_expand_BN/beta"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Const"
  op: "Const"
  input: "^block_4_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_4_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_4_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_4_expand_BN/cond/ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_1"
  input: "block_4_expand_BN/cond/Const"
  input: "block_4_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_4_expand/Conv2D"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_4_expand_BN/gamma"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_4_expand_BN/beta"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_expand_BN/moving_mean"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_expand_BN/moving_variance"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_4_expand_BN/cond/ReadVariableOp_2"
  input: "block_4_expand_BN/cond/ReadVariableOp_3"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_4_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_4_expand/Conv2D"
  input: "block_4_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_4_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_4_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_4_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_4_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_4_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_4_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_4_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_4_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_4_expand_BN/cond_1/Const_1"
  input: "block_4_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg/sub/x"
  input: "block_4_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_4_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_4_expand_BN/AssignMovingAvg/sub_1"
  input: "block_4_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "block_4_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "^block_4_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_4_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_4_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_4_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_4_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_4_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "block_4_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "^block_4_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_expand_relu/Relu6"
  op: "Relu6"
  input: "block_4_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise/depthwise_kernel"
}
node {
  name: "block_4_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "block_4_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_4_expand_relu/Relu6"
  input: "block_4_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/gamma"
}
node {
  name: "block_4_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "block_4_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/beta"
}
node {
  name: "block_4_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "block_4_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_mean"
}
node {
  name: "block_4_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "block_4_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_variance"
}
node {
  name: "block_4_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "block_4_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_4_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_4_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/gamma"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/beta"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_4_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_4_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_4_depthwise_BN/cond/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_4_depthwise_BN/cond/Const"
  input: "block_4_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_4_depthwise/depthwise"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/gamma"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/beta"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/moving_mean"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_depthwise_BN/moving_variance"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_4_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_4_depthwise/depthwise"
  input: "block_4_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_4_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_4_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_4_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_4_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_4_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_4_depthwise_BN/cond_1/Const_1"
  input: "block_4_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_4_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_4_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_4_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "block_4_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "^block_4_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_4_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_4_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "block_4_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "^block_4_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_4_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_4_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_4_project/kernel/Initializer/random_uniform/max"
  input: "block_4_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_4_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_4_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
}
node {
  name: "block_4_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_4_project/kernel/Initializer/random_uniform/mul"
  input: "block_4_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
}
node {
  name: "block_4_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project/kernel"
    }
  }
}
node {
  name: "block_4_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project/kernel"
}
node {
  name: "block_4_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_4_project/kernel"
  input: "block_4_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_4_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project/Conv2D"
  op: "Conv2D"
  input: "block_4_depthwise_relu/Relu6"
  input: "block_4_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/gamma"
    }
  }
}
node {
  name: "block_4_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/gamma"
}
node {
  name: "block_4_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/gamma"
  input: "block_4_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/beta"
    }
  }
}
node {
  name: "block_4_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/beta"
}
node {
  name: "block_4_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/beta"
  input: "block_4_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_mean"
}
node {
  name: "block_4_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "block_4_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_4_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_variance"
}
node {
  name: "block_4_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "block_4_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_4_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_4_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_project_BN/gamma"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_project_BN/beta"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/Const"
  op: "Const"
  input: "^block_4_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_4_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_4_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_4_project_BN/cond/ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_1"
  input: "block_4_project_BN/cond/Const"
  input: "block_4_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_4_project/Conv2D"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_4_project_BN/gamma"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_4_project_BN/beta"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_4_project_BN/moving_mean"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_4_project_BN/moving_variance"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_4_project_BN/cond/ReadVariableOp_2"
  input: "block_4_project_BN/cond/ReadVariableOp_3"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_4_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_4_project/Conv2D"
  input: "block_4_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond/Merge"
  op: "Merge"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1"
  input: "block_4_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_4_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_4_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_4_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_4_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_4_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_4_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_4_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_4_project_BN/cond_1/Const_1"
  input: "block_4_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg/sub/x"
  input: "block_4_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_4_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_4_project_BN/AssignMovingAvg/sub_1"
  input: "block_4_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "block_4_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "^block_4_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_4_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_4_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_4_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_4_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_4_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "block_4_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "^block_4_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_4_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_4_add/add"
  op: "AddV2"
  input: "block_3_project_BN/cond/Merge"
  input: "block_4_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_5_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_5_expand/kernel/Initializer/random_uniform/max"
  input: "block_5_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_5_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_5_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_5_expand/kernel/Initializer/random_uniform/mul"
  input: "block_5_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
}
node {
  name: "block_5_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand/kernel"
    }
  }
}
node {
  name: "block_5_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand/kernel"
}
node {
  name: "block_5_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand/kernel"
  input: "block_5_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand/Conv2D"
  op: "Conv2D"
  input: "block_4_add/add"
  input: "block_5_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/gamma"
    }
  }
}
node {
  name: "block_5_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/gamma"
}
node {
  name: "block_5_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "block_5_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/beta"
    }
  }
}
node {
  name: "block_5_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/beta"
}
node {
  name: "block_5_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/beta"
  input: "block_5_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_mean"
}
node {
  name: "block_5_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "block_5_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_variance"
}
node {
  name: "block_5_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "block_5_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_5_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_5_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_expand_BN/gamma"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_expand_BN/beta"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Const"
  op: "Const"
  input: "^block_5_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_5_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_5_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_5_expand_BN/cond/ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_1"
  input: "block_5_expand_BN/cond/Const"
  input: "block_5_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_5_expand/Conv2D"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_5_expand_BN/gamma"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_5_expand_BN/beta"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_expand_BN/moving_mean"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_expand_BN/moving_variance"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_5_expand_BN/cond/ReadVariableOp_2"
  input: "block_5_expand_BN/cond/ReadVariableOp_3"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_5_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_5_expand/Conv2D"
  input: "block_5_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_5_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_5_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_5_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_5_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_5_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_5_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_5_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_5_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_5_expand_BN/cond_1/Const_1"
  input: "block_5_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg/sub/x"
  input: "block_5_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_5_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_5_expand_BN/AssignMovingAvg/sub_1"
  input: "block_5_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "block_5_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "^block_5_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_5_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_5_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_5_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_5_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_5_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "block_5_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "^block_5_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_expand_relu/Relu6"
  op: "Relu6"
  input: "block_5_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise/depthwise_kernel"
}
node {
  name: "block_5_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "block_5_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_5_expand_relu/Relu6"
  input: "block_5_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/gamma"
}
node {
  name: "block_5_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "block_5_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/beta"
}
node {
  name: "block_5_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "block_5_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_mean"
}
node {
  name: "block_5_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "block_5_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_variance"
}
node {
  name: "block_5_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "block_5_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_5_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_5_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/gamma"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/beta"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_5_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_5_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_5_depthwise_BN/cond/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_5_depthwise_BN/cond/Const"
  input: "block_5_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_5_depthwise/depthwise"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/gamma"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/beta"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/moving_mean"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_depthwise_BN/moving_variance"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_5_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_5_depthwise/depthwise"
  input: "block_5_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_5_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_5_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_5_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_5_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_5_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_5_depthwise_BN/cond_1/Const_1"
  input: "block_5_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_5_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_5_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_5_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "block_5_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "^block_5_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_5_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_5_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "block_5_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "^block_5_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_5_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_5_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_5_project/kernel/Initializer/random_uniform/max"
  input: "block_5_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_5_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_5_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
}
node {
  name: "block_5_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_5_project/kernel/Initializer/random_uniform/mul"
  input: "block_5_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
}
node {
  name: "block_5_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project/kernel"
    }
  }
}
node {
  name: "block_5_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project/kernel"
}
node {
  name: "block_5_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_5_project/kernel"
  input: "block_5_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_5_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project/Conv2D"
  op: "Conv2D"
  input: "block_5_depthwise_relu/Relu6"
  input: "block_5_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/gamma"
    }
  }
}
node {
  name: "block_5_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/gamma"
}
node {
  name: "block_5_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/gamma"
  input: "block_5_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/beta"
    }
  }
}
node {
  name: "block_5_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/beta"
}
node {
  name: "block_5_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/beta"
  input: "block_5_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_mean"
}
node {
  name: "block_5_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "block_5_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_5_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_variance"
}
node {
  name: "block_5_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "block_5_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_5_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_5_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_project_BN/gamma"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_project_BN/beta"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/Const"
  op: "Const"
  input: "^block_5_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_5_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_5_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_5_project_BN/cond/ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_1"
  input: "block_5_project_BN/cond/Const"
  input: "block_5_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_5_project/Conv2D"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_5_project_BN/gamma"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_5_project_BN/beta"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_5_project_BN/moving_mean"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_5_project_BN/moving_variance"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_5_project_BN/cond/ReadVariableOp_2"
  input: "block_5_project_BN/cond/ReadVariableOp_3"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_5_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_5_project/Conv2D"
  input: "block_5_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond/Merge"
  op: "Merge"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1"
  input: "block_5_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_5_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_5_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_5_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_5_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_5_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_5_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_5_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_5_project_BN/cond_1/Const_1"
  input: "block_5_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg/sub/x"
  input: "block_5_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_5_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_5_project_BN/AssignMovingAvg/sub_1"
  input: "block_5_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "block_5_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "^block_5_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_5_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_5_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_5_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_5_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_5_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "block_5_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "^block_5_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_5_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_5_add/add"
  op: "AddV2"
  input: "block_4_add/add"
  input: "block_5_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_6_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_6_expand/kernel/Initializer/random_uniform/max"
  input: "block_6_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_6_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_6_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_6_expand/kernel/Initializer/random_uniform/mul"
  input: "block_6_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
}
node {
  name: "block_6_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand/kernel"
    }
  }
}
node {
  name: "block_6_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand/kernel"
}
node {
  name: "block_6_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand/kernel"
  input: "block_6_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand/Conv2D"
  op: "Conv2D"
  input: "block_5_add/add"
  input: "block_6_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/gamma"
    }
  }
}
node {
  name: "block_6_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/gamma"
}
node {
  name: "block_6_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "block_6_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/beta"
    }
  }
}
node {
  name: "block_6_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/beta"
}
node {
  name: "block_6_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/beta"
  input: "block_6_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_mean"
}
node {
  name: "block_6_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "block_6_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_variance"
}
node {
  name: "block_6_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "block_6_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_6_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_6_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_expand_BN/gamma"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_expand_BN/beta"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Const"
  op: "Const"
  input: "^block_6_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_6_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_6_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_6_expand_BN/cond/ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_1"
  input: "block_6_expand_BN/cond/Const"
  input: "block_6_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_6_expand/Conv2D"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_6_expand_BN/gamma"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_6_expand_BN/beta"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_expand_BN/moving_mean"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_expand_BN/moving_variance"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_6_expand_BN/cond/ReadVariableOp_2"
  input: "block_6_expand_BN/cond/ReadVariableOp_3"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_6_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_6_expand/Conv2D"
  input: "block_6_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_6_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_6_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_6_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_6_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_6_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_6_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_6_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_6_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_6_expand_BN/cond_1/Const_1"
  input: "block_6_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg/sub/x"
  input: "block_6_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_6_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_6_expand_BN/AssignMovingAvg/sub_1"
  input: "block_6_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "block_6_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "^block_6_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_6_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_6_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_6_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_6_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_6_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "block_6_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "^block_6_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_expand_relu/Relu6"
  op: "Relu6"
  input: "block_6_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_pad/Pad"
  op: "Pad"
  input: "block_6_expand_relu/Relu6"
  input: "block_6_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise/depthwise_kernel"
}
node {
  name: "block_6_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "block_6_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_6_pad/Pad"
  input: "block_6_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/gamma"
}
node {
  name: "block_6_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "block_6_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/beta"
}
node {
  name: "block_6_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "block_6_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_mean"
}
node {
  name: "block_6_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "block_6_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_variance"
}
node {
  name: "block_6_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "block_6_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_6_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_6_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/gamma"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/beta"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_6_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_6_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_6_depthwise_BN/cond/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_6_depthwise_BN/cond/Const"
  input: "block_6_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_6_depthwise/depthwise"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/gamma"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/beta"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/moving_mean"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_depthwise_BN/moving_variance"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_6_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_6_depthwise/depthwise"
  input: "block_6_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_6_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_6_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_6_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_6_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_6_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_6_depthwise_BN/cond_1/Const_1"
  input: "block_6_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_6_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_6_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_6_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "block_6_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "^block_6_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_6_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_6_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "block_6_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "^block_6_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_6_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_6_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_6_project/kernel/Initializer/random_uniform/max"
  input: "block_6_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_6_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_6_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
}
node {
  name: "block_6_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_6_project/kernel/Initializer/random_uniform/mul"
  input: "block_6_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
}
node {
  name: "block_6_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project/kernel"
    }
  }
}
node {
  name: "block_6_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project/kernel"
}
node {
  name: "block_6_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_6_project/kernel"
  input: "block_6_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_6_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project/Conv2D"
  op: "Conv2D"
  input: "block_6_depthwise_relu/Relu6"
  input: "block_6_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/gamma"
    }
  }
}
node {
  name: "block_6_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/gamma"
}
node {
  name: "block_6_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/gamma"
  input: "block_6_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/beta"
    }
  }
}
node {
  name: "block_6_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/beta"
}
node {
  name: "block_6_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/beta"
  input: "block_6_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_mean"
}
node {
  name: "block_6_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "block_6_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_6_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_variance"
}
node {
  name: "block_6_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "block_6_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_6_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_6_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_project_BN/gamma"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_project_BN/beta"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/Const"
  op: "Const"
  input: "^block_6_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_6_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_6_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_6_project_BN/cond/ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_1"
  input: "block_6_project_BN/cond/Const"
  input: "block_6_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_6_project/Conv2D"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_6_project_BN/gamma"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_6_project_BN/beta"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_6_project_BN/moving_mean"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_6_project_BN/moving_variance"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_6_project_BN/cond/ReadVariableOp_2"
  input: "block_6_project_BN/cond/ReadVariableOp_3"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_6_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_6_project/Conv2D"
  input: "block_6_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond/Merge"
  op: "Merge"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1"
  input: "block_6_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_6_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_6_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_6_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_6_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_6_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_6_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_6_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_6_project_BN/cond_1/Const_1"
  input: "block_6_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg/sub/x"
  input: "block_6_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_6_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_6_project_BN/AssignMovingAvg/sub_1"
  input: "block_6_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "block_6_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "^block_6_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_6_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_6_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_6_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_6_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_6_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "block_6_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_6_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "^block_6_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_6_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_7_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_7_expand/kernel/Initializer/random_uniform/max"
  input: "block_7_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_7_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_7_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_7_expand/kernel/Initializer/random_uniform/mul"
  input: "block_7_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
}
node {
  name: "block_7_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand/kernel"
    }
  }
}
node {
  name: "block_7_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand/kernel"
}
node {
  name: "block_7_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand/kernel"
  input: "block_7_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand/Conv2D"
  op: "Conv2D"
  input: "block_6_project_BN/cond/Merge"
  input: "block_7_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/gamma"
    }
  }
}
node {
  name: "block_7_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/gamma"
}
node {
  name: "block_7_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "block_7_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/beta"
    }
  }
}
node {
  name: "block_7_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/beta"
}
node {
  name: "block_7_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/beta"
  input: "block_7_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_mean"
}
node {
  name: "block_7_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "block_7_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_variance"
}
node {
  name: "block_7_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "block_7_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_7_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_7_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_expand_BN/gamma"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_expand_BN/beta"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Const"
  op: "Const"
  input: "^block_7_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_7_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_7_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_7_expand_BN/cond/ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_1"
  input: "block_7_expand_BN/cond/Const"
  input: "block_7_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_7_expand/Conv2D"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_7_expand_BN/gamma"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_7_expand_BN/beta"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_expand_BN/moving_mean"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_expand_BN/moving_variance"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_7_expand_BN/cond/ReadVariableOp_2"
  input: "block_7_expand_BN/cond/ReadVariableOp_3"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_7_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_7_expand/Conv2D"
  input: "block_7_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_7_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_7_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_7_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_7_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_7_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_7_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_7_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_7_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_7_expand_BN/cond_1/Const_1"
  input: "block_7_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg/sub/x"
  input: "block_7_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_7_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_7_expand_BN/AssignMovingAvg/sub_1"
  input: "block_7_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "block_7_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "^block_7_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_7_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_7_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_7_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_7_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_7_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "block_7_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "^block_7_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_expand_relu/Relu6"
  op: "Relu6"
  input: "block_7_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise/depthwise_kernel"
}
node {
  name: "block_7_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "block_7_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_7_expand_relu/Relu6"
  input: "block_7_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/gamma"
}
node {
  name: "block_7_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "block_7_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/beta"
}
node {
  name: "block_7_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "block_7_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_mean"
}
node {
  name: "block_7_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "block_7_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_variance"
}
node {
  name: "block_7_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "block_7_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_7_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_7_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/gamma"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/beta"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_7_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_7_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_7_depthwise_BN/cond/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_7_depthwise_BN/cond/Const"
  input: "block_7_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_7_depthwise/depthwise"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/gamma"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/beta"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/moving_mean"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_depthwise_BN/moving_variance"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_7_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_7_depthwise/depthwise"
  input: "block_7_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_7_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_7_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_7_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_7_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_7_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_7_depthwise_BN/cond_1/Const_1"
  input: "block_7_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_7_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_7_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_7_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "block_7_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "^block_7_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_7_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_7_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "block_7_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "^block_7_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_7_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_7_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_7_project/kernel/Initializer/random_uniform/max"
  input: "block_7_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_7_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_7_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
}
node {
  name: "block_7_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_7_project/kernel/Initializer/random_uniform/mul"
  input: "block_7_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
}
node {
  name: "block_7_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project/kernel"
    }
  }
}
node {
  name: "block_7_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project/kernel"
}
node {
  name: "block_7_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_7_project/kernel"
  input: "block_7_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_7_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project/Conv2D"
  op: "Conv2D"
  input: "block_7_depthwise_relu/Relu6"
  input: "block_7_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/gamma"
    }
  }
}
node {
  name: "block_7_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/gamma"
}
node {
  name: "block_7_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/gamma"
  input: "block_7_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/beta"
    }
  }
}
node {
  name: "block_7_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/beta"
}
node {
  name: "block_7_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/beta"
  input: "block_7_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_mean"
}
node {
  name: "block_7_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "block_7_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_7_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_variance"
}
node {
  name: "block_7_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "block_7_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_7_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_7_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_project_BN/gamma"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_project_BN/beta"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/Const"
  op: "Const"
  input: "^block_7_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_7_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_7_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_7_project_BN/cond/ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_1"
  input: "block_7_project_BN/cond/Const"
  input: "block_7_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_7_project/Conv2D"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_7_project_BN/gamma"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_7_project_BN/beta"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_7_project_BN/moving_mean"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_7_project_BN/moving_variance"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_7_project_BN/cond/ReadVariableOp_2"
  input: "block_7_project_BN/cond/ReadVariableOp_3"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_7_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_7_project/Conv2D"
  input: "block_7_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond/Merge"
  op: "Merge"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1"
  input: "block_7_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_7_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_7_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_7_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_7_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_7_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_7_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_7_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_7_project_BN/cond_1/Const_1"
  input: "block_7_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg/sub/x"
  input: "block_7_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_7_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_7_project_BN/AssignMovingAvg/sub_1"
  input: "block_7_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "block_7_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "^block_7_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_7_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_7_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_7_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_7_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_7_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "block_7_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "^block_7_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_7_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_7_add/add"
  op: "AddV2"
  input: "block_6_project_BN/cond/Merge"
  input: "block_7_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_8_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_8_expand/kernel/Initializer/random_uniform/max"
  input: "block_8_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_8_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_8_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_8_expand/kernel/Initializer/random_uniform/mul"
  input: "block_8_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
}
node {
  name: "block_8_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand/kernel"
    }
  }
}
node {
  name: "block_8_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand/kernel"
}
node {
  name: "block_8_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand/kernel"
  input: "block_8_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand/Conv2D"
  op: "Conv2D"
  input: "block_7_add/add"
  input: "block_8_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/gamma"
    }
  }
}
node {
  name: "block_8_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/gamma"
}
node {
  name: "block_8_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "block_8_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/beta"
    }
  }
}
node {
  name: "block_8_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/beta"
}
node {
  name: "block_8_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/beta"
  input: "block_8_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_mean"
}
node {
  name: "block_8_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "block_8_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_variance"
}
node {
  name: "block_8_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "block_8_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_8_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_8_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_expand_BN/gamma"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_expand_BN/beta"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Const"
  op: "Const"
  input: "^block_8_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_8_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_8_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_8_expand_BN/cond/ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_1"
  input: "block_8_expand_BN/cond/Const"
  input: "block_8_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_8_expand/Conv2D"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_8_expand_BN/gamma"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_8_expand_BN/beta"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_expand_BN/moving_mean"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_expand_BN/moving_variance"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_8_expand_BN/cond/ReadVariableOp_2"
  input: "block_8_expand_BN/cond/ReadVariableOp_3"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_8_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_8_expand/Conv2D"
  input: "block_8_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_8_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_8_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_8_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_8_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_8_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_8_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_8_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_8_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_8_expand_BN/cond_1/Const_1"
  input: "block_8_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg/sub/x"
  input: "block_8_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_8_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_8_expand_BN/AssignMovingAvg/sub_1"
  input: "block_8_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "block_8_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "^block_8_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_8_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_8_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_8_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_8_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_8_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "block_8_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "^block_8_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_expand_relu/Relu6"
  op: "Relu6"
  input: "block_8_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise/depthwise_kernel"
}
node {
  name: "block_8_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "block_8_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_8_expand_relu/Relu6"
  input: "block_8_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/gamma"
}
node {
  name: "block_8_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "block_8_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/beta"
}
node {
  name: "block_8_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "block_8_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_mean"
}
node {
  name: "block_8_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "block_8_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_variance"
}
node {
  name: "block_8_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "block_8_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_8_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_8_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/gamma"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/beta"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_8_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_8_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_8_depthwise_BN/cond/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_8_depthwise_BN/cond/Const"
  input: "block_8_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_8_depthwise/depthwise"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/gamma"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/beta"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/moving_mean"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_depthwise_BN/moving_variance"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_8_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_8_depthwise/depthwise"
  input: "block_8_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_8_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_8_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_8_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_8_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_8_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_8_depthwise_BN/cond_1/Const_1"
  input: "block_8_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_8_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_8_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_8_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "block_8_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "^block_8_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_8_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_8_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "block_8_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "^block_8_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_8_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_8_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_8_project/kernel/Initializer/random_uniform/max"
  input: "block_8_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_8_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_8_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
}
node {
  name: "block_8_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_8_project/kernel/Initializer/random_uniform/mul"
  input: "block_8_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
}
node {
  name: "block_8_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project/kernel"
    }
  }
}
node {
  name: "block_8_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project/kernel"
}
node {
  name: "block_8_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_8_project/kernel"
  input: "block_8_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_8_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project/Conv2D"
  op: "Conv2D"
  input: "block_8_depthwise_relu/Relu6"
  input: "block_8_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/gamma"
    }
  }
}
node {
  name: "block_8_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/gamma"
}
node {
  name: "block_8_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/gamma"
  input: "block_8_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/beta"
    }
  }
}
node {
  name: "block_8_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/beta"
}
node {
  name: "block_8_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/beta"
  input: "block_8_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_mean"
}
node {
  name: "block_8_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "block_8_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_8_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_variance"
}
node {
  name: "block_8_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "block_8_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_8_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_8_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_project_BN/gamma"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_project_BN/beta"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/Const"
  op: "Const"
  input: "^block_8_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_8_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_8_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_8_project_BN/cond/ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_1"
  input: "block_8_project_BN/cond/Const"
  input: "block_8_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_8_project/Conv2D"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_8_project_BN/gamma"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_8_project_BN/beta"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_8_project_BN/moving_mean"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_8_project_BN/moving_variance"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_8_project_BN/cond/ReadVariableOp_2"
  input: "block_8_project_BN/cond/ReadVariableOp_3"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_8_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_8_project/Conv2D"
  input: "block_8_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond/Merge"
  op: "Merge"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1"
  input: "block_8_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_8_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_8_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_8_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_8_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_8_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_8_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_8_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_8_project_BN/cond_1/Const_1"
  input: "block_8_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg/sub/x"
  input: "block_8_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_8_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_8_project_BN/AssignMovingAvg/sub_1"
  input: "block_8_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "block_8_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "^block_8_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_8_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_8_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_8_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_8_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_8_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "block_8_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "^block_8_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_8_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_8_add/add"
  op: "AddV2"
  input: "block_7_add/add"
  input: "block_8_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_9_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_9_expand/kernel/Initializer/random_uniform/max"
  input: "block_9_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_9_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_9_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_9_expand/kernel/Initializer/random_uniform/mul"
  input: "block_9_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
}
node {
  name: "block_9_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand/kernel"
    }
  }
}
node {
  name: "block_9_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand/kernel"
}
node {
  name: "block_9_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand/kernel"
  input: "block_9_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand/Conv2D"
  op: "Conv2D"
  input: "block_8_add/add"
  input: "block_9_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/gamma"
    }
  }
}
node {
  name: "block_9_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/gamma"
}
node {
  name: "block_9_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "block_9_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/beta"
    }
  }
}
node {
  name: "block_9_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/beta"
}
node {
  name: "block_9_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/beta"
  input: "block_9_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_mean"
}
node {
  name: "block_9_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "block_9_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_variance"
}
node {
  name: "block_9_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "block_9_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_9_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_9_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_expand_BN/gamma"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_expand_BN/beta"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Const"
  op: "Const"
  input: "^block_9_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_9_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_9_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_9_expand_BN/cond/ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_1"
  input: "block_9_expand_BN/cond/Const"
  input: "block_9_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_9_expand/Conv2D"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_9_expand_BN/gamma"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_9_expand_BN/beta"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_expand_BN/moving_mean"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_expand_BN/moving_variance"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_9_expand_BN/cond/ReadVariableOp_2"
  input: "block_9_expand_BN/cond/ReadVariableOp_3"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_9_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_9_expand/Conv2D"
  input: "block_9_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_9_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_9_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_9_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_9_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_9_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_9_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_9_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_9_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_9_expand_BN/cond_1/Const_1"
  input: "block_9_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg/sub/x"
  input: "block_9_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_9_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_9_expand_BN/AssignMovingAvg/sub_1"
  input: "block_9_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "block_9_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "^block_9_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_9_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_9_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_9_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_9_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_9_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "block_9_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "^block_9_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_expand_relu/Relu6"
  op: "Relu6"
  input: "block_9_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise/depthwise_kernel"
}
node {
  name: "block_9_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "block_9_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_9_expand_relu/Relu6"
  input: "block_9_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/gamma"
}
node {
  name: "block_9_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "block_9_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/beta"
}
node {
  name: "block_9_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "block_9_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_mean"
}
node {
  name: "block_9_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "block_9_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_variance"
}
node {
  name: "block_9_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "block_9_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_9_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_9_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/gamma"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/beta"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_9_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_9_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_9_depthwise_BN/cond/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_9_depthwise_BN/cond/Const"
  input: "block_9_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_9_depthwise/depthwise"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/gamma"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/beta"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/moving_mean"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_depthwise_BN/moving_variance"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_9_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_9_depthwise/depthwise"
  input: "block_9_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_9_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_9_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_9_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_9_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_9_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_9_depthwise_BN/cond_1/Const_1"
  input: "block_9_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_9_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_9_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_9_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "block_9_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "^block_9_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_9_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_9_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "block_9_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "^block_9_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_9_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_9_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_9_project/kernel/Initializer/random_uniform/max"
  input: "block_9_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_9_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_9_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
}
node {
  name: "block_9_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_9_project/kernel/Initializer/random_uniform/mul"
  input: "block_9_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
}
node {
  name: "block_9_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project/kernel"
    }
  }
}
node {
  name: "block_9_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project/kernel"
}
node {
  name: "block_9_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_9_project/kernel"
  input: "block_9_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_9_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project/Conv2D"
  op: "Conv2D"
  input: "block_9_depthwise_relu/Relu6"
  input: "block_9_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/gamma"
    }
  }
}
node {
  name: "block_9_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/gamma"
}
node {
  name: "block_9_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/gamma"
  input: "block_9_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/beta"
    }
  }
}
node {
  name: "block_9_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/beta"
}
node {
  name: "block_9_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/beta"
  input: "block_9_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_mean"
}
node {
  name: "block_9_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "block_9_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_9_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_variance"
}
node {
  name: "block_9_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "block_9_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_9_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_9_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_project_BN/gamma"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_project_BN/beta"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/Const"
  op: "Const"
  input: "^block_9_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_9_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_9_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_9_project_BN/cond/ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_1"
  input: "block_9_project_BN/cond/Const"
  input: "block_9_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_9_project/Conv2D"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_9_project_BN/gamma"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_9_project_BN/beta"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_9_project_BN/moving_mean"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_9_project_BN/moving_variance"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_9_project_BN/cond/ReadVariableOp_2"
  input: "block_9_project_BN/cond/ReadVariableOp_3"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_9_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_9_project/Conv2D"
  input: "block_9_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond/Merge"
  op: "Merge"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1"
  input: "block_9_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_9_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_9_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_9_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_9_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_9_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_9_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_9_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_9_project_BN/cond_1/Const_1"
  input: "block_9_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg/sub/x"
  input: "block_9_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_9_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_9_project_BN/AssignMovingAvg/sub_1"
  input: "block_9_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "block_9_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "^block_9_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_9_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_9_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_9_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_9_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_9_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "block_9_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "^block_9_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_9_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_9_add/add"
  op: "AddV2"
  input: "block_8_add/add"
  input: "block_9_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_10_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_10_expand/kernel/Initializer/random_uniform/max"
  input: "block_10_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_10_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_10_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_10_expand/kernel/Initializer/random_uniform/mul"
  input: "block_10_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
}
node {
  name: "block_10_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand/kernel"
    }
  }
}
node {
  name: "block_10_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand/kernel"
}
node {
  name: "block_10_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand/kernel"
  input: "block_10_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand/Conv2D"
  op: "Conv2D"
  input: "block_9_add/add"
  input: "block_10_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/gamma"
    }
  }
}
node {
  name: "block_10_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/gamma"
}
node {
  name: "block_10_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "block_10_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/beta"
    }
  }
}
node {
  name: "block_10_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/beta"
}
node {
  name: "block_10_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/beta"
  input: "block_10_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_mean"
}
node {
  name: "block_10_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "block_10_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_variance"
}
node {
  name: "block_10_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "block_10_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_10_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_10_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_expand_BN/gamma"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_expand_BN/beta"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Const"
  op: "Const"
  input: "^block_10_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_10_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_10_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_10_expand_BN/cond/ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_1"
  input: "block_10_expand_BN/cond/Const"
  input: "block_10_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_10_expand/Conv2D"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_10_expand_BN/gamma"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_10_expand_BN/beta"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_expand_BN/moving_mean"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_expand_BN/moving_variance"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_10_expand_BN/cond/ReadVariableOp_2"
  input: "block_10_expand_BN/cond/ReadVariableOp_3"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_10_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_10_expand/Conv2D"
  input: "block_10_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_10_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_10_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_10_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_10_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_10_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_10_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_10_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_10_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_10_expand_BN/cond_1/Const_1"
  input: "block_10_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg/sub/x"
  input: "block_10_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_10_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_10_expand_BN/AssignMovingAvg/sub_1"
  input: "block_10_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "block_10_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "^block_10_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_10_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_10_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_10_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_10_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_10_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "block_10_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "^block_10_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_expand_relu/Relu6"
  op: "Relu6"
  input: "block_10_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise/depthwise_kernel"
}
node {
  name: "block_10_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "block_10_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_10_expand_relu/Relu6"
  input: "block_10_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/gamma"
}
node {
  name: "block_10_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "block_10_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/beta"
}
node {
  name: "block_10_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "block_10_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_mean"
}
node {
  name: "block_10_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "block_10_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_variance"
}
node {
  name: "block_10_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "block_10_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_10_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_10_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/gamma"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/beta"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_10_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_10_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_10_depthwise_BN/cond/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_10_depthwise_BN/cond/Const"
  input: "block_10_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_10_depthwise/depthwise"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/gamma"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/beta"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/moving_mean"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_depthwise_BN/moving_variance"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_10_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_10_depthwise/depthwise"
  input: "block_10_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_10_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_10_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_10_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_10_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_10_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_10_depthwise_BN/cond_1/Const_1"
  input: "block_10_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_10_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_10_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_10_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "block_10_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "^block_10_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_10_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_10_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "block_10_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "^block_10_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_10_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11180339753627777
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_10_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_10_project/kernel/Initializer/random_uniform/max"
  input: "block_10_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_10_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_10_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
}
node {
  name: "block_10_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_10_project/kernel/Initializer/random_uniform/mul"
  input: "block_10_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
}
node {
  name: "block_10_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project/kernel"
    }
  }
}
node {
  name: "block_10_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project/kernel"
}
node {
  name: "block_10_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_10_project/kernel"
  input: "block_10_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_10_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project/Conv2D"
  op: "Conv2D"
  input: "block_10_depthwise_relu/Relu6"
  input: "block_10_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/gamma"
    }
  }
}
node {
  name: "block_10_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/gamma"
}
node {
  name: "block_10_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/gamma"
  input: "block_10_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/beta"
    }
  }
}
node {
  name: "block_10_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/beta"
}
node {
  name: "block_10_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/beta"
  input: "block_10_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_mean"
}
node {
  name: "block_10_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "block_10_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_10_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_variance"
}
node {
  name: "block_10_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "block_10_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_10_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_10_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_project_BN/gamma"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_project_BN/beta"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/Const"
  op: "Const"
  input: "^block_10_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_10_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_10_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_10_project_BN/cond/ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_1"
  input: "block_10_project_BN/cond/Const"
  input: "block_10_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_10_project/Conv2D"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_10_project_BN/gamma"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_10_project_BN/beta"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_10_project_BN/moving_mean"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_10_project_BN/moving_variance"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_10_project_BN/cond/ReadVariableOp_2"
  input: "block_10_project_BN/cond/ReadVariableOp_3"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_10_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_10_project/Conv2D"
  input: "block_10_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond/Merge"
  op: "Merge"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1"
  input: "block_10_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_10_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_10_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_10_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_10_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_10_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_10_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_10_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_10_project_BN/cond_1/Const_1"
  input: "block_10_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg/sub/x"
  input: "block_10_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_10_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_10_project_BN/AssignMovingAvg/sub_1"
  input: "block_10_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "block_10_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "^block_10_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_10_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_10_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_10_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_10_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_10_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "block_10_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_10_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "^block_10_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_10_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_11_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_11_expand/kernel/Initializer/random_uniform/max"
  input: "block_11_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_11_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_11_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_11_expand/kernel/Initializer/random_uniform/mul"
  input: "block_11_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
}
node {
  name: "block_11_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand/kernel"
    }
  }
}
node {
  name: "block_11_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand/kernel"
}
node {
  name: "block_11_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand/kernel"
  input: "block_11_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand/Conv2D"
  op: "Conv2D"
  input: "block_10_project_BN/cond/Merge"
  input: "block_11_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/gamma"
    }
  }
}
node {
  name: "block_11_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/gamma"
}
node {
  name: "block_11_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "block_11_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/beta"
    }
  }
}
node {
  name: "block_11_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/beta"
}
node {
  name: "block_11_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/beta"
  input: "block_11_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_mean"
}
node {
  name: "block_11_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "block_11_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_variance"
}
node {
  name: "block_11_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "block_11_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_11_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_11_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_expand_BN/gamma"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_expand_BN/beta"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Const"
  op: "Const"
  input: "^block_11_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_11_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_11_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_11_expand_BN/cond/ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_1"
  input: "block_11_expand_BN/cond/Const"
  input: "block_11_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_11_expand/Conv2D"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_11_expand_BN/gamma"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_11_expand_BN/beta"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_expand_BN/moving_mean"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_expand_BN/moving_variance"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_11_expand_BN/cond/ReadVariableOp_2"
  input: "block_11_expand_BN/cond/ReadVariableOp_3"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_11_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_11_expand/Conv2D"
  input: "block_11_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_11_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_11_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_11_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_11_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_11_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_11_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_11_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_11_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_11_expand_BN/cond_1/Const_1"
  input: "block_11_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg/sub/x"
  input: "block_11_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_11_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_11_expand_BN/AssignMovingAvg/sub_1"
  input: "block_11_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "block_11_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "^block_11_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_11_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_11_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_11_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_11_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_11_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "block_11_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "^block_11_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_expand_relu/Relu6"
  op: "Relu6"
  input: "block_11_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise/depthwise_kernel"
}
node {
  name: "block_11_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "block_11_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_11_expand_relu/Relu6"
  input: "block_11_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/gamma"
}
node {
  name: "block_11_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "block_11_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/beta"
}
node {
  name: "block_11_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "block_11_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_mean"
}
node {
  name: "block_11_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "block_11_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_variance"
}
node {
  name: "block_11_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "block_11_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_11_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_11_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/gamma"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/beta"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_11_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_11_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_11_depthwise_BN/cond/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_11_depthwise_BN/cond/Const"
  input: "block_11_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_11_depthwise/depthwise"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/gamma"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/beta"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/moving_mean"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_depthwise_BN/moving_variance"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_11_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_11_depthwise/depthwise"
  input: "block_11_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_11_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_11_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_11_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_11_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_11_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_11_depthwise_BN/cond_1/Const_1"
  input: "block_11_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_11_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_11_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_11_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "block_11_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "^block_11_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_11_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_11_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "block_11_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "^block_11_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_11_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_11_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_11_project/kernel/Initializer/random_uniform/max"
  input: "block_11_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_11_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_11_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
}
node {
  name: "block_11_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_11_project/kernel/Initializer/random_uniform/mul"
  input: "block_11_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
}
node {
  name: "block_11_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project/kernel"
    }
  }
}
node {
  name: "block_11_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project/kernel"
}
node {
  name: "block_11_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_11_project/kernel"
  input: "block_11_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_11_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project/Conv2D"
  op: "Conv2D"
  input: "block_11_depthwise_relu/Relu6"
  input: "block_11_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/gamma"
    }
  }
}
node {
  name: "block_11_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/gamma"
}
node {
  name: "block_11_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/gamma"
  input: "block_11_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/beta"
    }
  }
}
node {
  name: "block_11_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/beta"
}
node {
  name: "block_11_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/beta"
  input: "block_11_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_mean"
}
node {
  name: "block_11_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "block_11_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_11_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_variance"
}
node {
  name: "block_11_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "block_11_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_11_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_11_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_project_BN/gamma"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_project_BN/beta"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/Const"
  op: "Const"
  input: "^block_11_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_11_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_11_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_11_project_BN/cond/ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_1"
  input: "block_11_project_BN/cond/Const"
  input: "block_11_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_11_project/Conv2D"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_11_project_BN/gamma"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_11_project_BN/beta"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_11_project_BN/moving_mean"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_11_project_BN/moving_variance"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_11_project_BN/cond/ReadVariableOp_2"
  input: "block_11_project_BN/cond/ReadVariableOp_3"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_11_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_11_project/Conv2D"
  input: "block_11_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond/Merge"
  op: "Merge"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1"
  input: "block_11_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_11_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_11_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_11_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_11_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_11_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_11_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_11_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_11_project_BN/cond_1/Const_1"
  input: "block_11_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg/sub/x"
  input: "block_11_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_11_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_11_project_BN/AssignMovingAvg/sub_1"
  input: "block_11_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "block_11_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "^block_11_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_11_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_11_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_11_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_11_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_11_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "block_11_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "^block_11_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_11_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_11_add/add"
  op: "AddV2"
  input: "block_10_project_BN/cond/Merge"
  input: "block_11_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_12_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_12_expand/kernel/Initializer/random_uniform/max"
  input: "block_12_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_12_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_12_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_12_expand/kernel/Initializer/random_uniform/mul"
  input: "block_12_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
}
node {
  name: "block_12_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand/kernel"
    }
  }
}
node {
  name: "block_12_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand/kernel"
}
node {
  name: "block_12_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand/kernel"
  input: "block_12_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand/Conv2D"
  op: "Conv2D"
  input: "block_11_add/add"
  input: "block_12_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/gamma"
    }
  }
}
node {
  name: "block_12_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/gamma"
}
node {
  name: "block_12_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "block_12_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/beta"
    }
  }
}
node {
  name: "block_12_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/beta"
}
node {
  name: "block_12_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/beta"
  input: "block_12_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_mean"
}
node {
  name: "block_12_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "block_12_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_variance"
}
node {
  name: "block_12_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "block_12_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_12_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_12_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_expand_BN/gamma"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_expand_BN/beta"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Const"
  op: "Const"
  input: "^block_12_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_12_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_12_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_12_expand_BN/cond/ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_1"
  input: "block_12_expand_BN/cond/Const"
  input: "block_12_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_12_expand/Conv2D"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_12_expand_BN/gamma"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_12_expand_BN/beta"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_expand_BN/moving_mean"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_expand_BN/moving_variance"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_12_expand_BN/cond/ReadVariableOp_2"
  input: "block_12_expand_BN/cond/ReadVariableOp_3"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_12_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_12_expand/Conv2D"
  input: "block_12_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_12_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_12_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_12_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_12_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_12_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_12_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_12_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_12_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_12_expand_BN/cond_1/Const_1"
  input: "block_12_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg/sub/x"
  input: "block_12_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_12_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_12_expand_BN/AssignMovingAvg/sub_1"
  input: "block_12_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "block_12_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "^block_12_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_12_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_12_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_12_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_12_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_12_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "block_12_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "^block_12_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_expand_relu/Relu6"
  op: "Relu6"
  input: "block_12_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise/depthwise_kernel"
}
node {
  name: "block_12_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "block_12_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_12_expand_relu/Relu6"
  input: "block_12_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/gamma"
}
node {
  name: "block_12_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "block_12_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/beta"
}
node {
  name: "block_12_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "block_12_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_mean"
}
node {
  name: "block_12_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "block_12_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_variance"
}
node {
  name: "block_12_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "block_12_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_12_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_12_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/gamma"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/beta"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_12_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_12_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_12_depthwise_BN/cond/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_12_depthwise_BN/cond/Const"
  input: "block_12_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_12_depthwise/depthwise"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/gamma"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/beta"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/moving_mean"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_depthwise_BN/moving_variance"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_12_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_12_depthwise/depthwise"
  input: "block_12_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_12_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_12_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_12_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_12_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_12_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_12_depthwise_BN/cond_1/Const_1"
  input: "block_12_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_12_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_12_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_12_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "block_12_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "^block_12_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_12_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_12_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "block_12_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "^block_12_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_12_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_12_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_12_project/kernel/Initializer/random_uniform/max"
  input: "block_12_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_12_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_12_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
}
node {
  name: "block_12_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_12_project/kernel/Initializer/random_uniform/mul"
  input: "block_12_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
}
node {
  name: "block_12_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project/kernel"
    }
  }
}
node {
  name: "block_12_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project/kernel"
}
node {
  name: "block_12_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_12_project/kernel"
  input: "block_12_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_12_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project/Conv2D"
  op: "Conv2D"
  input: "block_12_depthwise_relu/Relu6"
  input: "block_12_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/gamma"
    }
  }
}
node {
  name: "block_12_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/gamma"
}
node {
  name: "block_12_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/gamma"
  input: "block_12_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/beta"
    }
  }
}
node {
  name: "block_12_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/beta"
}
node {
  name: "block_12_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/beta"
  input: "block_12_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_mean"
}
node {
  name: "block_12_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "block_12_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_12_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_variance"
}
node {
  name: "block_12_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "block_12_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_12_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_12_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_project_BN/gamma"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_project_BN/beta"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/Const"
  op: "Const"
  input: "^block_12_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_12_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_12_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_12_project_BN/cond/ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_1"
  input: "block_12_project_BN/cond/Const"
  input: "block_12_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_12_project/Conv2D"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_12_project_BN/gamma"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_12_project_BN/beta"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_12_project_BN/moving_mean"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_12_project_BN/moving_variance"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_12_project_BN/cond/ReadVariableOp_2"
  input: "block_12_project_BN/cond/ReadVariableOp_3"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_12_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_12_project/Conv2D"
  input: "block_12_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond/Merge"
  op: "Merge"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1"
  input: "block_12_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_12_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_12_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_12_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_12_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_12_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_12_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_12_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_12_project_BN/cond_1/Const_1"
  input: "block_12_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg/sub/x"
  input: "block_12_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_12_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_12_project_BN/AssignMovingAvg/sub_1"
  input: "block_12_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "block_12_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "^block_12_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_12_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_12_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_12_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_12_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_12_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "block_12_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "^block_12_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_12_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_12_add/add"
  op: "AddV2"
  input: "block_11_add/add"
  input: "block_12_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_13_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_13_expand/kernel/Initializer/random_uniform/max"
  input: "block_13_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_13_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_13_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_13_expand/kernel/Initializer/random_uniform/mul"
  input: "block_13_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
}
node {
  name: "block_13_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand/kernel"
    }
  }
}
node {
  name: "block_13_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand/kernel"
}
node {
  name: "block_13_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand/kernel"
  input: "block_13_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand/Conv2D"
  op: "Conv2D"
  input: "block_12_add/add"
  input: "block_13_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/gamma"
    }
  }
}
node {
  name: "block_13_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/gamma"
}
node {
  name: "block_13_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "block_13_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/beta"
    }
  }
}
node {
  name: "block_13_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/beta"
}
node {
  name: "block_13_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/beta"
  input: "block_13_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_mean"
}
node {
  name: "block_13_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "block_13_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_variance"
}
node {
  name: "block_13_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "block_13_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_13_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_13_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_expand_BN/gamma"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_expand_BN/beta"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Const"
  op: "Const"
  input: "^block_13_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_13_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_13_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_13_expand_BN/cond/ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_1"
  input: "block_13_expand_BN/cond/Const"
  input: "block_13_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_13_expand/Conv2D"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_13_expand_BN/gamma"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_13_expand_BN/beta"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_expand_BN/moving_mean"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_expand_BN/moving_variance"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_13_expand_BN/cond/ReadVariableOp_2"
  input: "block_13_expand_BN/cond/ReadVariableOp_3"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_13_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_13_expand/Conv2D"
  input: "block_13_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_13_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_13_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_13_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_13_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_13_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_13_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_13_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_13_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_13_expand_BN/cond_1/Const_1"
  input: "block_13_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg/sub/x"
  input: "block_13_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_13_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_13_expand_BN/AssignMovingAvg/sub_1"
  input: "block_13_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "block_13_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "^block_13_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_13_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_13_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_13_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_13_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_13_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "block_13_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "^block_13_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_expand_relu/Relu6"
  op: "Relu6"
  input: "block_13_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_pad/Pad"
  op: "Pad"
  input: "block_13_expand_relu/Relu6"
  input: "block_13_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise/depthwise_kernel"
}
node {
  name: "block_13_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "block_13_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_13_pad/Pad"
  input: "block_13_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/gamma"
}
node {
  name: "block_13_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "block_13_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/beta"
}
node {
  name: "block_13_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "block_13_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_mean"
}
node {
  name: "block_13_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "block_13_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_variance"
}
node {
  name: "block_13_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "block_13_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_13_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_13_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/gamma"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/beta"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_13_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_13_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_13_depthwise_BN/cond/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_13_depthwise_BN/cond/Const"
  input: "block_13_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_13_depthwise/depthwise"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/gamma"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/beta"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/moving_mean"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_depthwise_BN/moving_variance"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_13_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_13_depthwise/depthwise"
  input: "block_13_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_13_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_13_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_13_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_13_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_13_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_13_depthwise_BN/cond_1/Const_1"
  input: "block_13_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_13_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_13_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_13_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "block_13_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "^block_13_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_13_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_13_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "block_13_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "^block_13_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_13_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0902893915772438
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0902893915772438
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_13_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_13_project/kernel/Initializer/random_uniform/max"
  input: "block_13_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_13_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_13_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
}
node {
  name: "block_13_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_13_project/kernel/Initializer/random_uniform/mul"
  input: "block_13_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
}
node {
  name: "block_13_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project/kernel"
    }
  }
}
node {
  name: "block_13_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project/kernel"
}
node {
  name: "block_13_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_13_project/kernel"
  input: "block_13_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_13_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project/Conv2D"
  op: "Conv2D"
  input: "block_13_depthwise_relu/Relu6"
  input: "block_13_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/gamma"
    }
  }
}
node {
  name: "block_13_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/gamma"
}
node {
  name: "block_13_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/gamma"
  input: "block_13_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/beta"
    }
  }
}
node {
  name: "block_13_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/beta"
}
node {
  name: "block_13_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/beta"
  input: "block_13_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_mean"
}
node {
  name: "block_13_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "block_13_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_13_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_variance"
}
node {
  name: "block_13_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "block_13_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_13_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_13_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_project_BN/gamma"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_project_BN/beta"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/Const"
  op: "Const"
  input: "^block_13_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_13_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_13_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_13_project_BN/cond/ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_1"
  input: "block_13_project_BN/cond/Const"
  input: "block_13_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_13_project/Conv2D"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_13_project_BN/gamma"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_13_project_BN/beta"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_13_project_BN/moving_mean"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_13_project_BN/moving_variance"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_13_project_BN/cond/ReadVariableOp_2"
  input: "block_13_project_BN/cond/ReadVariableOp_3"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_13_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_13_project/Conv2D"
  input: "block_13_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond/Merge"
  op: "Merge"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1"
  input: "block_13_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_13_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_13_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_13_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_13_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_13_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_13_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_13_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_13_project_BN/cond_1/Const_1"
  input: "block_13_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg/sub/x"
  input: "block_13_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_13_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_13_project_BN/AssignMovingAvg/sub_1"
  input: "block_13_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "block_13_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "^block_13_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_13_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_13_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_13_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_13_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_13_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "block_13_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_13_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "^block_13_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_13_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_14_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_14_expand/kernel/Initializer/random_uniform/max"
  input: "block_14_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_14_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_14_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_14_expand/kernel/Initializer/random_uniform/mul"
  input: "block_14_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
}
node {
  name: "block_14_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand/kernel"
    }
  }
}
node {
  name: "block_14_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand/kernel"
}
node {
  name: "block_14_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand/kernel"
  input: "block_14_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand/Conv2D"
  op: "Conv2D"
  input: "block_13_project_BN/cond/Merge"
  input: "block_14_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/gamma"
    }
  }
}
node {
  name: "block_14_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/gamma"
}
node {
  name: "block_14_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "block_14_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/beta"
    }
  }
}
node {
  name: "block_14_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/beta"
}
node {
  name: "block_14_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/beta"
  input: "block_14_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_mean"
}
node {
  name: "block_14_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "block_14_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_variance"
}
node {
  name: "block_14_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "block_14_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_14_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_14_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_expand_BN/gamma"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_expand_BN/beta"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Const"
  op: "Const"
  input: "^block_14_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_14_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_14_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_14_expand_BN/cond/ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_1"
  input: "block_14_expand_BN/cond/Const"
  input: "block_14_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_14_expand/Conv2D"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_14_expand_BN/gamma"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_14_expand_BN/beta"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_expand_BN/moving_mean"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_expand_BN/moving_variance"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_14_expand_BN/cond/ReadVariableOp_2"
  input: "block_14_expand_BN/cond/ReadVariableOp_3"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_14_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_14_expand/Conv2D"
  input: "block_14_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_14_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_14_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_14_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_14_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_14_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_14_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_14_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_14_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_14_expand_BN/cond_1/Const_1"
  input: "block_14_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg/sub/x"
  input: "block_14_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_14_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_14_expand_BN/AssignMovingAvg/sub_1"
  input: "block_14_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "block_14_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "^block_14_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_14_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_14_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_14_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_14_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_14_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "block_14_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "^block_14_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_expand_relu/Relu6"
  op: "Relu6"
  input: "block_14_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise/depthwise_kernel"
}
node {
  name: "block_14_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "block_14_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_14_expand_relu/Relu6"
  input: "block_14_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/gamma"
}
node {
  name: "block_14_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "block_14_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/beta"
}
node {
  name: "block_14_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "block_14_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_mean"
}
node {
  name: "block_14_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "block_14_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_variance"
}
node {
  name: "block_14_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "block_14_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_14_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_14_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/gamma"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/beta"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_14_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_14_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_14_depthwise_BN/cond/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_14_depthwise_BN/cond/Const"
  input: "block_14_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_14_depthwise/depthwise"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/gamma"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/beta"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/moving_mean"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_depthwise_BN/moving_variance"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_14_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_14_depthwise/depthwise"
  input: "block_14_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_14_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_14_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_14_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_14_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_14_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_14_depthwise_BN/cond_1/Const_1"
  input: "block_14_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_14_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_14_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_14_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "block_14_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "^block_14_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_14_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_14_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "block_14_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "^block_14_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_14_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_14_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_14_project/kernel/Initializer/random_uniform/max"
  input: "block_14_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_14_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_14_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
}
node {
  name: "block_14_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_14_project/kernel/Initializer/random_uniform/mul"
  input: "block_14_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
}
node {
  name: "block_14_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project/kernel"
    }
  }
}
node {
  name: "block_14_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project/kernel"
}
node {
  name: "block_14_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_14_project/kernel"
  input: "block_14_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_14_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project/Conv2D"
  op: "Conv2D"
  input: "block_14_depthwise_relu/Relu6"
  input: "block_14_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/gamma"
    }
  }
}
node {
  name: "block_14_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/gamma"
}
node {
  name: "block_14_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/gamma"
  input: "block_14_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/beta"
    }
  }
}
node {
  name: "block_14_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/beta"
}
node {
  name: "block_14_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/beta"
  input: "block_14_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_mean"
}
node {
  name: "block_14_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "block_14_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_14_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_variance"
}
node {
  name: "block_14_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "block_14_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_14_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_14_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_project_BN/gamma"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_project_BN/beta"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/Const"
  op: "Const"
  input: "^block_14_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_14_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_14_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_14_project_BN/cond/ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_1"
  input: "block_14_project_BN/cond/Const"
  input: "block_14_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_14_project/Conv2D"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_14_project_BN/gamma"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_14_project_BN/beta"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_14_project_BN/moving_mean"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_14_project_BN/moving_variance"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_14_project_BN/cond/ReadVariableOp_2"
  input: "block_14_project_BN/cond/ReadVariableOp_3"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_14_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_14_project/Conv2D"
  input: "block_14_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond/Merge"
  op: "Merge"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1"
  input: "block_14_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_14_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_14_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_14_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_14_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_14_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_14_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_14_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_14_project_BN/cond_1/Const_1"
  input: "block_14_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg/sub/x"
  input: "block_14_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_14_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_14_project_BN/AssignMovingAvg/sub_1"
  input: "block_14_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "block_14_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "^block_14_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_14_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_14_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_14_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_14_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_14_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "block_14_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "^block_14_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_14_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_14_add/add"
  op: "AddV2"
  input: "block_13_project_BN/cond/Merge"
  input: "block_14_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_15_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_15_expand/kernel/Initializer/random_uniform/max"
  input: "block_15_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_15_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_15_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_15_expand/kernel/Initializer/random_uniform/mul"
  input: "block_15_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
}
node {
  name: "block_15_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand/kernel"
    }
  }
}
node {
  name: "block_15_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand/kernel"
}
node {
  name: "block_15_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand/kernel"
  input: "block_15_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand/Conv2D"
  op: "Conv2D"
  input: "block_14_add/add"
  input: "block_15_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/gamma"
    }
  }
}
node {
  name: "block_15_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/gamma"
}
node {
  name: "block_15_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "block_15_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/beta"
    }
  }
}
node {
  name: "block_15_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/beta"
}
node {
  name: "block_15_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/beta"
  input: "block_15_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_mean"
}
node {
  name: "block_15_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "block_15_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_variance"
}
node {
  name: "block_15_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "block_15_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_15_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_15_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_expand_BN/gamma"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_expand_BN/beta"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Const"
  op: "Const"
  input: "^block_15_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_15_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_15_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_15_expand_BN/cond/ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_1"
  input: "block_15_expand_BN/cond/Const"
  input: "block_15_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_15_expand/Conv2D"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_15_expand_BN/gamma"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_15_expand_BN/beta"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_expand_BN/moving_mean"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_expand_BN/moving_variance"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_15_expand_BN/cond/ReadVariableOp_2"
  input: "block_15_expand_BN/cond/ReadVariableOp_3"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_15_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_15_expand/Conv2D"
  input: "block_15_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_15_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_15_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_15_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_15_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_15_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_15_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_15_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_15_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_15_expand_BN/cond_1/Const_1"
  input: "block_15_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg/sub/x"
  input: "block_15_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_15_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_15_expand_BN/AssignMovingAvg/sub_1"
  input: "block_15_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "block_15_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "^block_15_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_15_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_15_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_15_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_15_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_15_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "block_15_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "^block_15_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_expand_relu/Relu6"
  op: "Relu6"
  input: "block_15_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise/depthwise_kernel"
}
node {
  name: "block_15_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "block_15_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_15_expand_relu/Relu6"
  input: "block_15_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/gamma"
}
node {
  name: "block_15_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "block_15_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/beta"
}
node {
  name: "block_15_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "block_15_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_mean"
}
node {
  name: "block_15_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "block_15_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_variance"
}
node {
  name: "block_15_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "block_15_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_15_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_15_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/gamma"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/beta"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_15_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_15_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_15_depthwise_BN/cond/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_15_depthwise_BN/cond/Const"
  input: "block_15_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_15_depthwise/depthwise"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/gamma"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/beta"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/moving_mean"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_depthwise_BN/moving_variance"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_15_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_15_depthwise/depthwise"
  input: "block_15_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_15_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_15_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_15_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_15_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_15_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_15_depthwise_BN/cond_1/Const_1"
  input: "block_15_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_15_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_15_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_15_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "block_15_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "^block_15_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_15_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_15_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "block_15_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "^block_15_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_15_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_15_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_15_project/kernel/Initializer/random_uniform/max"
  input: "block_15_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_15_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_15_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
}
node {
  name: "block_15_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_15_project/kernel/Initializer/random_uniform/mul"
  input: "block_15_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
}
node {
  name: "block_15_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project/kernel"
    }
  }
}
node {
  name: "block_15_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project/kernel"
}
node {
  name: "block_15_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_15_project/kernel"
  input: "block_15_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_15_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project/Conv2D"
  op: "Conv2D"
  input: "block_15_depthwise_relu/Relu6"
  input: "block_15_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/gamma"
    }
  }
}
node {
  name: "block_15_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/gamma"
}
node {
  name: "block_15_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/gamma"
  input: "block_15_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/beta"
    }
  }
}
node {
  name: "block_15_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/beta"
}
node {
  name: "block_15_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/beta"
  input: "block_15_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_mean"
}
node {
  name: "block_15_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "block_15_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_15_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_variance"
}
node {
  name: "block_15_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "block_15_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_15_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_15_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_project_BN/gamma"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_project_BN/beta"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/Const"
  op: "Const"
  input: "^block_15_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_15_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_15_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_15_project_BN/cond/ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_1"
  input: "block_15_project_BN/cond/Const"
  input: "block_15_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_15_project/Conv2D"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_15_project_BN/gamma"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_15_project_BN/beta"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_15_project_BN/moving_mean"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_15_project_BN/moving_variance"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_15_project_BN/cond/ReadVariableOp_2"
  input: "block_15_project_BN/cond/ReadVariableOp_3"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_15_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_15_project/Conv2D"
  input: "block_15_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond/Merge"
  op: "Merge"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1"
  input: "block_15_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_15_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_15_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_15_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_15_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_15_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_15_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_15_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_15_project_BN/cond_1/Const_1"
  input: "block_15_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg/sub/x"
  input: "block_15_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_15_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_15_project_BN/AssignMovingAvg/sub_1"
  input: "block_15_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "block_15_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "^block_15_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_15_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_15_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_15_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_15_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_15_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "block_15_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "^block_15_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_15_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_15_add/add"
  op: "AddV2"
  input: "block_14_add/add"
  input: "block_15_project_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_16_expand/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_16_expand/kernel/Initializer/random_uniform/max"
  input: "block_16_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_16_expand/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_16_expand/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_16_expand/kernel/Initializer/random_uniform/mul"
  input: "block_16_expand/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
}
node {
  name: "block_16_expand/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand/kernel"
    }
  }
}
node {
  name: "block_16_expand/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand/kernel"
}
node {
  name: "block_16_expand/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand/kernel"
  input: "block_16_expand/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_expand/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand/Conv2D"
  op: "Conv2D"
  input: "block_15_add/add"
  input: "block_16_expand/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_expand_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/gamma"
    }
  }
}
node {
  name: "block_16_expand_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/gamma"
}
node {
  name: "block_16_expand_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "block_16_expand_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/beta"
    }
  }
}
node {
  name: "block_16_expand_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/beta"
}
node {
  name: "block_16_expand_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/beta"
  input: "block_16_expand_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/moving_mean"
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_mean"
}
node {
  name: "block_16_expand_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "block_16_expand_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_expand_BN/moving_variance"
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_variance"
}
node {
  name: "block_16_expand_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "block_16_expand_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/switch_t"
  op: "Identity"
  input: "block_16_expand_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/switch_f"
  op: "Identity"
  input: "block_16_expand_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_expand_BN/gamma"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_expand_BN/beta"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Const"
  op: "Const"
  input: "^block_16_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Const_1"
  op: "Const"
  input: "^block_16_expand_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_16_expand_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_16_expand_BN/cond/ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_1"
  input: "block_16_expand_BN/cond/Const"
  input: "block_16_expand_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_16_expand/Conv2D"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_16_expand_BN/gamma"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_16_expand_BN/beta"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_expand_BN/moving_mean"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_expand_BN/moving_variance"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_16_expand_BN/cond/ReadVariableOp_2"
  input: "block_16_expand_BN/cond/ReadVariableOp_3"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_16_expand_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_16_expand/Conv2D"
  input: "block_16_expand_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Merge"
  op: "Merge"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1"
  input: "block_16_expand_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Merge_1"
  op: "Merge"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1:1"
  input: "block_16_expand_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond/Merge_2"
  op: "Merge"
  input: "block_16_expand_BN/cond/FusedBatchNormV3_1:2"
  input: "block_16_expand_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_16_expand_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_16_expand_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Const"
  op: "Const"
  input: "^block_16_expand_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_16_expand_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/cond_1/Merge"
  op: "Merge"
  input: "block_16_expand_BN/cond_1/Const_1"
  input: "block_16_expand_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg/sub/x"
  input: "block_16_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_16_expand_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_16_expand_BN/AssignMovingAvg/sub_1"
  input: "block_16_expand_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "block_16_expand_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "^block_16_expand_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg_1/sub/x"
  input: "block_16_expand_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_16_expand_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_16_expand_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_16_expand_BN/AssignMovingAvg_1/sub_1"
  input: "block_16_expand_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "block_16_expand_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "^block_16_expand_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_expand_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_expand_relu/Relu6"
  op: "Relu6"
  input: "block_16_expand_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/max"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/RandomUniform"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/mul"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise/depthwise_kernel"
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise/depthwise_kernel"
}
node {
  name: "block_16_depthwise/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "block_16_depthwise/depthwise_kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "block_16_expand_relu/Relu6"
  input: "block_16_depthwise/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/gamma"
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/gamma"
}
node {
  name: "block_16_depthwise_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "block_16_depthwise_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/beta"
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/beta"
}
node {
  name: "block_16_depthwise_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "block_16_depthwise_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/moving_mean"
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_mean"
}
node {
  name: "block_16_depthwise_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "block_16_depthwise_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_depthwise_BN/moving_variance"
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_variance"
}
node {
  name: "block_16_depthwise_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "block_16_depthwise_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/switch_t"
  op: "Identity"
  input: "block_16_depthwise_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/switch_f"
  op: "Identity"
  input: "block_16_depthwise_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/gamma"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/beta"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Const"
  op: "Const"
  input: "^block_16_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Const_1"
  op: "Const"
  input: "^block_16_depthwise_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_16_depthwise_BN/cond/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_1"
  input: "block_16_depthwise_BN/cond/Const"
  input: "block_16_depthwise_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_16_depthwise/depthwise"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/gamma"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/beta"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/moving_mean"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_depthwise_BN/moving_variance"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_2"
  input: "block_16_depthwise_BN/cond/ReadVariableOp_3"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_16_depthwise/depthwise"
  input: "block_16_depthwise_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise/depthwise"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Merge"
  op: "Merge"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Merge_1"
  op: "Merge"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1:1"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond/Merge_2"
  op: "Merge"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3_1:2"
  input: "block_16_depthwise_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_16_depthwise_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_16_depthwise_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Const"
  op: "Const"
  input: "^block_16_depthwise_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_16_depthwise_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/cond_1/Merge"
  op: "Merge"
  input: "block_16_depthwise_BN/cond_1/Const_1"
  input: "block_16_depthwise_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg/sub/x"
  input: "block_16_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_16_depthwise_BN/AssignMovingAvg/sub_1"
  input: "block_16_depthwise_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "block_16_depthwise_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "^block_16_depthwise_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/sub/x"
  input: "block_16_depthwise_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_16_depthwise_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/sub_1"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "block_16_depthwise_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "^block_16_depthwise_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_depthwise_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_depthwise_relu/Relu6"
  op: "Relu6"
  input: "block_16_depthwise_BN/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06846532225608826
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06846532225608826
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block_16_project/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block_16_project/kernel/Initializer/random_uniform/max"
  input: "block_16_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block_16_project/kernel/Initializer/random_uniform/RandomUniform"
  input: "block_16_project/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
}
node {
  name: "block_16_project/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block_16_project/kernel/Initializer/random_uniform/mul"
  input: "block_16_project/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
}
node {
  name: "block_16_project/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project/kernel"
    }
  }
}
node {
  name: "block_16_project/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project/kernel"
}
node {
  name: "block_16_project/kernel/Assign"
  op: "AssignVariableOp"
  input: "block_16_project/kernel"
  input: "block_16_project/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block_16_project/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project/Conv2D"
  op: "Conv2D"
  input: "block_16_depthwise_relu/Relu6"
  input: "block_16_project/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_project_BN/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/gamma"
    }
  }
}
node {
  name: "block_16_project_BN/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/gamma"
}
node {
  name: "block_16_project_BN/gamma/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/gamma"
  input: "block_16_project_BN/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/beta"
    }
  }
}
node {
  name: "block_16_project_BN/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/beta"
}
node {
  name: "block_16_project_BN/beta/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/beta"
  input: "block_16_project_BN/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/moving_mean"
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_mean"
}
node {
  name: "block_16_project_BN/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "block_16_project_BN/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block_16_project_BN/moving_variance"
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_variance"
}
node {
  name: "block_16_project_BN/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "block_16_project_BN/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/switch_t"
  op: "Identity"
  input: "block_16_project_BN/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/switch_f"
  op: "Identity"
  input: "block_16_project_BN/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_project_BN/gamma"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_project_BN/beta"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/Const"
  op: "Const"
  input: "^block_16_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/Const_1"
  op: "Const"
  input: "^block_16_project_BN/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "block_16_project_BN/cond/FusedBatchNormV3/Switch:1"
  input: "block_16_project_BN/cond/ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_1"
  input: "block_16_project_BN/cond/Const"
  input: "block_16_project_BN/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "block_16_project/Conv2D"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "block_16_project_BN/gamma"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/gamma"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "block_16_project_BN/beta"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/beta"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "block_16_project_BN/moving_mean"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "block_16_project_BN/moving_variance"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/Switch"
  input: "block_16_project_BN/cond/ReadVariableOp_2"
  input: "block_16_project_BN/cond/ReadVariableOp_3"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "block_16_project_BN/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "block_16_project/Conv2D"
  input: "block_16_project_BN/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project/Conv2D"
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond/Merge"
  op: "Merge"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1"
  input: "block_16_project_BN/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/Merge_1"
  op: "Merge"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1:1"
  input: "block_16_project_BN/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond/Merge_2"
  op: "Merge"
  input: "block_16_project_BN/cond/FusedBatchNormV3_1:2"
  input: "block_16_project_BN/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/switch_t"
  op: "Identity"
  input: "block_16_project_BN/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/switch_f"
  op: "Identity"
  input: "block_16_project_BN/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Const"
  op: "Const"
  input: "^block_16_project_BN/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Const_1"
  op: "Const"
  input: "^block_16_project_BN/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/cond_1/Merge"
  op: "Merge"
  input: "block_16_project_BN/cond_1/Const_1"
  input: "block_16_project_BN/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/sub"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg/sub/x"
  input: "block_16_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg/ReadVariableOp"
  input: "block_16_project_BN/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/mul"
  op: "Mul"
  input: "block_16_project_BN/AssignMovingAvg/sub_1"
  input: "block_16_project_BN/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "block_16_project_BN/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "^block_16_project_BN/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg_1/sub/x"
  input: "block_16_project_BN/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "block_16_project_BN/AssignMovingAvg_1/ReadVariableOp"
  input: "block_16_project_BN/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "block_16_project_BN/AssignMovingAvg_1/sub_1"
  input: "block_16_project_BN/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "block_16_project_BN/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block_16_project_BN/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "^block_16_project_BN/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block_16_project_BN/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06123724207282066
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06123724207282066
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Conv_1/kernel/Initializer/random_uniform/max"
  input: "Conv_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Conv_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Conv_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
}
node {
  name: "Conv_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Conv_1/kernel/Initializer/random_uniform/mul"
  input: "Conv_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
}
node {
  name: "Conv_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1/kernel"
    }
  }
}
node {
  name: "Conv_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1/kernel"
}
node {
  name: "Conv_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Conv_1/kernel"
  input: "Conv_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1/Conv2D"
  op: "Conv2D"
  input: "block_16_project_BN/cond/Merge"
  input: "Conv_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Initializer/ones"
  op: "Fill"
  input: "Conv_1_bn/gamma/Initializer/ones/shape_as_tensor"
  input: "Conv_1_bn/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/gamma"
    }
  }
}
node {
  name: "Conv_1_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/gamma"
}
node {
  name: "Conv_1_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/gamma"
  input: "Conv_1_bn/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/beta/Initializer/zeros"
  op: "Fill"
  input: "Conv_1_bn/beta/Initializer/zeros/shape_as_tensor"
  input: "Conv_1_bn/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/beta"
    }
  }
}
node {
  name: "Conv_1_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/beta"
}
node {
  name: "Conv_1_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/beta"
  input: "Conv_1_bn/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "Conv_1_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "Conv_1_bn/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/moving_mean"
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_mean"
}
node {
  name: "Conv_1_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "Conv_1_bn/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Initializer/ones"
  op: "Fill"
  input: "Conv_1_bn/moving_variance/Initializer/ones/shape_as_tensor"
  input: "Conv_1_bn/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Conv_1_bn/moving_variance"
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_variance"
}
node {
  name: "Conv_1_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "Conv_1_bn/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/switch_t"
  op: "Identity"
  input: "Conv_1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/switch_f"
  op: "Identity"
  input: "Conv_1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp/Switch"
  op: "Switch"
  input: "Conv_1_bn/gamma"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_1/Switch:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "Conv_1_bn/beta"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/Const"
  op: "Const"
  input: "^Conv_1_bn/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/Const_1"
  op: "Const"
  input: "^Conv_1_bn/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "Conv_1_bn/cond/FusedBatchNormV3/Switch:1"
  input: "Conv_1_bn/cond/ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_1"
  input: "Conv_1_bn/cond/Const"
  input: "Conv_1_bn/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3/Switch"
  op: "Switch"
  input: "Conv_1/Conv2D"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/Conv2D"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_2/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_2/Switch"
  op: "Switch"
  input: "Conv_1_bn/gamma"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/gamma"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/ReadVariableOp_3/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/ReadVariableOp_3/Switch"
  op: "Switch"
  input: "Conv_1_bn/beta"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/beta"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp/Switch"
  op: "Switch"
  input: "Conv_1_bn/moving_mean"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1/Switch"
  op: "Switch"
  input: "Conv_1_bn/moving_variance"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/Switch"
  input: "Conv_1_bn/cond/ReadVariableOp_2"
  input: "Conv_1_bn/cond/ReadVariableOp_3"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Conv_1_bn/cond/FusedBatchNormV3_1/Switch"
  op: "Switch"
  input: "Conv_1/Conv2D"
  input: "Conv_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/Conv2D"
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond/Merge"
  op: "Merge"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1"
  input: "Conv_1_bn/cond/FusedBatchNormV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/Merge_1"
  op: "Merge"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1:1"
  input: "Conv_1_bn/cond/FusedBatchNormV3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond/Merge_2"
  op: "Merge"
  input: "Conv_1_bn/cond/FusedBatchNormV3_1:2"
  input: "Conv_1_bn/cond/FusedBatchNormV3:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/switch_t"
  op: "Identity"
  input: "Conv_1_bn/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/switch_f"
  op: "Identity"
  input: "Conv_1_bn/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Const"
  op: "Const"
  input: "^Conv_1_bn/cond_1/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Const_1"
  op: "Const"
  input: "^Conv_1_bn/cond_1/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/cond_1/Merge"
  op: "Merge"
  input: "Conv_1_bn/cond_1/Const_1"
  input: "Conv_1_bn/cond_1/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg/sub/x"
  input: "Conv_1_bn/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg/ReadVariableOp"
  input: "Conv_1_bn/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "Conv_1_bn/AssignMovingAvg/sub_1"
  input: "Conv_1_bn/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "Conv_1_bn/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "^Conv_1_bn/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg_1/sub/x"
  input: "Conv_1_bn/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Conv_1_bn/AssignMovingAvg_1/ReadVariableOp"
  input: "Conv_1_bn/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Conv_1_bn/AssignMovingAvg_1/sub_1"
  input: "Conv_1_bn/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "Conv_1_bn/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv_1_bn/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "^Conv_1_bn/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "out_relu/Relu6"
  op: "Relu6"
  input: "Conv_1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "Conv1/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "Conv1/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "bn_Conv1/gamma"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bn_Conv1/gamma"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "bn_Conv1/beta"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bn_Conv1/beta"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "expanded_conv_project/kernel"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "expanded_conv_project/kernel"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "block_1_expand/kernel"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "block_1_expand/kernel"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/beta"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/beta"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "block_1_project/kernel"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "block_1_project/kernel"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "block_1_project_BN/gamma"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "block_1_project_BN/gamma"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "block_1_project_BN/beta"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "block_1_project_BN/beta"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "block_2_expand/kernel"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "block_2_expand/kernel"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/beta"
  input: "Placeholder_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/beta"
  input: "^AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "^AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "^AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "Placeholder_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "^AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "Placeholder_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "^AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "block_2_project/kernel"
  input: "Placeholder_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "block_2_project/kernel"
  input: "^AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "block_2_project_BN/gamma"
  input: "Placeholder_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "block_2_project_BN/gamma"
  input: "^AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "block_2_project_BN/beta"
  input: "Placeholder_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "block_2_project_BN/beta"
  input: "^AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "^AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "^AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "block_3_expand/kernel"
  input: "Placeholder_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "block_3_expand/kernel"
  input: "^AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "Placeholder_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "^AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/beta"
  input: "Placeholder_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/beta"
  input: "^AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "^AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "^AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "Placeholder_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "Placeholder_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "^AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "Placeholder_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "^AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "block_3_project/kernel"
  input: "Placeholder_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "block_3_project/kernel"
  input: "^AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "block_3_project_BN/gamma"
  input: "Placeholder_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "block_3_project_BN/gamma"
  input: "^AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "block_3_project_BN/beta"
  input: "Placeholder_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "block_3_project_BN/beta"
  input: "^AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "^AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "^AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "block_4_expand/kernel"
  input: "Placeholder_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "block_4_expand/kernel"
  input: "^AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "Placeholder_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "^AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/beta"
  input: "Placeholder_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/beta"
  input: "^AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "^AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "^AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "Placeholder_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "Placeholder_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "^AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "Placeholder_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "^AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "block_4_project/kernel"
  input: "Placeholder_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "block_4_project/kernel"
  input: "^AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "block_4_project_BN/gamma"
  input: "Placeholder_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "block_4_project_BN/gamma"
  input: "^AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "block_4_project_BN/beta"
  input: "Placeholder_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "block_4_project_BN/beta"
  input: "^AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "^AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "^AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "block_5_expand/kernel"
  input: "Placeholder_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "block_5_expand/kernel"
  input: "^AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "Placeholder_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "^AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/beta"
  input: "Placeholder_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/beta"
  input: "^AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "Placeholder_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "^AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "Placeholder_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "^AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "Placeholder_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "Placeholder_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "^AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "Placeholder_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "^AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "Placeholder_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "Placeholder_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "block_5_project/kernel"
  input: "Placeholder_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "block_5_project/kernel"
  input: "^AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "block_5_project_BN/gamma"
  input: "Placeholder_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "block_5_project_BN/gamma"
  input: "^AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "block_5_project_BN/beta"
  input: "Placeholder_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "block_5_project_BN/beta"
  input: "^AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "^AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "^AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "block_6_expand/kernel"
  input: "Placeholder_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "block_6_expand/kernel"
  input: "^AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "Placeholder_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "^AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/beta"
  input: "Placeholder_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/beta"
  input: "^AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "Placeholder_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "^AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "Placeholder_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "^AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "Placeholder_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "Placeholder_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "^AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "Placeholder_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "^AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "Placeholder_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "Placeholder_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "block_6_project/kernel"
  input: "Placeholder_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "block_6_project/kernel"
  input: "^AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "block_6_project_BN/gamma"
  input: "Placeholder_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "block_6_project_BN/gamma"
  input: "^AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "block_6_project_BN/beta"
  input: "Placeholder_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "block_6_project_BN/beta"
  input: "^AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "Placeholder_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "^AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "Placeholder_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "^AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "block_7_expand/kernel"
  input: "Placeholder_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "block_7_expand/kernel"
  input: "^AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "Placeholder_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "^AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/beta"
  input: "Placeholder_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/beta"
  input: "^AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "Placeholder_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "^AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "Placeholder_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "^AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "Placeholder_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "Placeholder_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "^AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "Placeholder_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "^AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "Placeholder_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "Placeholder_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "block_7_project/kernel"
  input: "Placeholder_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "block_7_project/kernel"
  input: "^AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "block_7_project_BN/gamma"
  input: "Placeholder_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "block_7_project_BN/gamma"
  input: "^AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "block_7_project_BN/beta"
  input: "Placeholder_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "block_7_project_BN/beta"
  input: "^AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "Placeholder_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "^AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "Placeholder_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "^AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "block_8_expand/kernel"
  input: "Placeholder_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "block_8_expand/kernel"
  input: "^AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "Placeholder_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "^AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/beta"
  input: "Placeholder_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/beta"
  input: "^AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "Placeholder_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "^AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "Placeholder_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "^AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "Placeholder_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "Placeholder_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "^AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "Placeholder_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "^AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "Placeholder_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "Placeholder_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "block_8_project/kernel"
  input: "Placeholder_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "block_8_project/kernel"
  input: "^AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "block_8_project_BN/gamma"
  input: "Placeholder_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "block_8_project_BN/gamma"
  input: "^AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "block_8_project_BN/beta"
  input: "Placeholder_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "block_8_project_BN/beta"
  input: "^AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "Placeholder_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "^AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "Placeholder_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "^AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "block_9_expand/kernel"
  input: "Placeholder_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "block_9_expand/kernel"
  input: "^AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "Placeholder_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "^AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/beta"
  input: "Placeholder_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/beta"
  input: "^AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "Placeholder_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "^AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "Placeholder_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "^AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "Placeholder_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "Placeholder_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "^AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "Placeholder_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "^AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "Placeholder_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "Placeholder_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "block_9_project/kernel"
  input: "Placeholder_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "block_9_project/kernel"
  input: "^AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "block_9_project_BN/gamma"
  input: "Placeholder_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "block_9_project_BN/gamma"
  input: "^AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "block_9_project_BN/beta"
  input: "Placeholder_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "block_9_project_BN/beta"
  input: "^AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "Placeholder_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "^AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "Placeholder_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "^AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_150"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "block_10_expand/kernel"
  input: "Placeholder_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "block_10_expand/kernel"
  input: "^AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_151"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "Placeholder_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "^AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_152"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/beta"
  input: "Placeholder_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/beta"
  input: "^AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_153"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "Placeholder_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "^AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_154"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "Placeholder_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "^AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_155"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "Placeholder_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_156"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "Placeholder_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "^AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_157"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "Placeholder_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "^AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_158"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "Placeholder_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_159"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "Placeholder_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_160"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "block_10_project/kernel"
  input: "Placeholder_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "block_10_project/kernel"
  input: "^AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_161"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "block_10_project_BN/gamma"
  input: "Placeholder_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "block_10_project_BN/gamma"
  input: "^AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_162"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "block_10_project_BN/beta"
  input: "Placeholder_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "block_10_project_BN/beta"
  input: "^AssignVariableOp_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_163"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "Placeholder_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "^AssignVariableOp_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_164"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "Placeholder_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "^AssignVariableOp_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_165"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "block_11_expand/kernel"
  input: "Placeholder_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "block_11_expand/kernel"
  input: "^AssignVariableOp_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_166"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "Placeholder_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "^AssignVariableOp_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_167"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/beta"
  input: "Placeholder_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/beta"
  input: "^AssignVariableOp_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_168"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "Placeholder_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "^AssignVariableOp_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_169"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "Placeholder_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "^AssignVariableOp_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_170"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "Placeholder_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_171"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "Placeholder_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "^AssignVariableOp_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_172"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "Placeholder_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "^AssignVariableOp_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_173"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "Placeholder_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_174"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "Placeholder_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_175"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "block_11_project/kernel"
  input: "Placeholder_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "block_11_project/kernel"
  input: "^AssignVariableOp_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_176"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "block_11_project_BN/gamma"
  input: "Placeholder_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "block_11_project_BN/gamma"
  input: "^AssignVariableOp_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_177"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "block_11_project_BN/beta"
  input: "Placeholder_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "block_11_project_BN/beta"
  input: "^AssignVariableOp_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_178"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "Placeholder_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "^AssignVariableOp_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_179"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "Placeholder_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "^AssignVariableOp_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_180"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "block_12_expand/kernel"
  input: "Placeholder_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "block_12_expand/kernel"
  input: "^AssignVariableOp_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_181"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "Placeholder_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "^AssignVariableOp_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_182"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/beta"
  input: "Placeholder_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/beta"
  input: "^AssignVariableOp_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_183"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "Placeholder_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "^AssignVariableOp_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_184"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "Placeholder_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "^AssignVariableOp_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_185"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "Placeholder_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_186"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "Placeholder_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "^AssignVariableOp_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_187"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "Placeholder_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "^AssignVariableOp_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_188"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "Placeholder_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_189"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "Placeholder_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_190"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "block_12_project/kernel"
  input: "Placeholder_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "block_12_project/kernel"
  input: "^AssignVariableOp_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_191"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "block_12_project_BN/gamma"
  input: "Placeholder_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "block_12_project_BN/gamma"
  input: "^AssignVariableOp_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_192"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "block_12_project_BN/beta"
  input: "Placeholder_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "block_12_project_BN/beta"
  input: "^AssignVariableOp_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_193"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "Placeholder_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "^AssignVariableOp_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_194"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "Placeholder_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "^AssignVariableOp_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_195"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "block_13_expand/kernel"
  input: "Placeholder_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "block_13_expand/kernel"
  input: "^AssignVariableOp_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_196"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "Placeholder_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "^AssignVariableOp_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_197"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/beta"
  input: "Placeholder_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/beta"
  input: "^AssignVariableOp_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_198"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "Placeholder_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "^AssignVariableOp_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_199"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "Placeholder_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "^AssignVariableOp_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_200"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "Placeholder_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_201"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "Placeholder_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "^AssignVariableOp_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_202"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "Placeholder_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "^AssignVariableOp_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_203"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "Placeholder_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_204"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "Placeholder_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_205"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "block_13_project/kernel"
  input: "Placeholder_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "block_13_project/kernel"
  input: "^AssignVariableOp_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_206"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "block_13_project_BN/gamma"
  input: "Placeholder_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "block_13_project_BN/gamma"
  input: "^AssignVariableOp_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_207"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "block_13_project_BN/beta"
  input: "Placeholder_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "block_13_project_BN/beta"
  input: "^AssignVariableOp_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_208"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "Placeholder_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "^AssignVariableOp_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_209"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "Placeholder_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "^AssignVariableOp_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_210"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "block_14_expand/kernel"
  input: "Placeholder_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "block_14_expand/kernel"
  input: "^AssignVariableOp_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_211"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "Placeholder_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "^AssignVariableOp_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_212"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/beta"
  input: "Placeholder_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/beta"
  input: "^AssignVariableOp_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_213"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "Placeholder_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "^AssignVariableOp_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_214"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "Placeholder_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "^AssignVariableOp_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_215"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "Placeholder_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_216"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "Placeholder_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "^AssignVariableOp_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_217"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "Placeholder_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "^AssignVariableOp_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_218"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "Placeholder_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_219"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "Placeholder_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_220"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "block_14_project/kernel"
  input: "Placeholder_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "block_14_project/kernel"
  input: "^AssignVariableOp_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_221"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "block_14_project_BN/gamma"
  input: "Placeholder_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "block_14_project_BN/gamma"
  input: "^AssignVariableOp_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_222"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "block_14_project_BN/beta"
  input: "Placeholder_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "block_14_project_BN/beta"
  input: "^AssignVariableOp_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_223"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "Placeholder_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "^AssignVariableOp_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_224"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "Placeholder_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "^AssignVariableOp_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_225"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "block_15_expand/kernel"
  input: "Placeholder_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "block_15_expand/kernel"
  input: "^AssignVariableOp_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_226"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "Placeholder_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "^AssignVariableOp_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_227"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/beta"
  input: "Placeholder_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_227"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/beta"
  input: "^AssignVariableOp_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_228"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "Placeholder_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_228"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "^AssignVariableOp_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_229"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "Placeholder_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_229"
  op: "ReadVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "^AssignVariableOp_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_230"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "Placeholder_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_230"
  op: "ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_231"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "Placeholder_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_231"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "^AssignVariableOp_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_232"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "Placeholder_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_232"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "^AssignVariableOp_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_233"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "Placeholder_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_233"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_234"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "Placeholder_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_234"
  op: "ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_235"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "block_15_project/kernel"
  input: "Placeholder_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_235"
  op: "ReadVariableOp"
  input: "block_15_project/kernel"
  input: "^AssignVariableOp_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_236"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "block_15_project_BN/gamma"
  input: "Placeholder_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_236"
  op: "ReadVariableOp"
  input: "block_15_project_BN/gamma"
  input: "^AssignVariableOp_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_237"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "block_15_project_BN/beta"
  input: "Placeholder_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_237"
  op: "ReadVariableOp"
  input: "block_15_project_BN/beta"
  input: "^AssignVariableOp_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_238"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "Placeholder_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_238"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "^AssignVariableOp_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_239"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "Placeholder_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_239"
  op: "ReadVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "^AssignVariableOp_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_240"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "block_16_expand/kernel"
  input: "Placeholder_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_240"
  op: "ReadVariableOp"
  input: "block_16_expand/kernel"
  input: "^AssignVariableOp_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_241"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "Placeholder_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_241"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "^AssignVariableOp_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_242"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/beta"
  input: "Placeholder_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_242"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/beta"
  input: "^AssignVariableOp_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_243"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "Placeholder_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_243"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "^AssignVariableOp_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_244"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "Placeholder_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_244"
  op: "ReadVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "^AssignVariableOp_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_245"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "Placeholder_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_245"
  op: "ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "^AssignVariableOp_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_246"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "Placeholder_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_246"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "^AssignVariableOp_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_247"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "Placeholder_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_247"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "^AssignVariableOp_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_248"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "Placeholder_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_248"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "^AssignVariableOp_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_249"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "Placeholder_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_249"
  op: "ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "^AssignVariableOp_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_250"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "block_16_project/kernel"
  input: "Placeholder_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_250"
  op: "ReadVariableOp"
  input: "block_16_project/kernel"
  input: "^AssignVariableOp_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_251"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "block_16_project_BN/gamma"
  input: "Placeholder_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_251"
  op: "ReadVariableOp"
  input: "block_16_project_BN/gamma"
  input: "^AssignVariableOp_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_252"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "block_16_project_BN/beta"
  input: "Placeholder_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_252"
  op: "ReadVariableOp"
  input: "block_16_project_BN/beta"
  input: "^AssignVariableOp_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_253"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "Placeholder_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_253"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "^AssignVariableOp_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_254"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "Placeholder_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_254"
  op: "ReadVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "^AssignVariableOp_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_255"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "Conv_1/kernel"
  input: "Placeholder_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_255"
  op: "ReadVariableOp"
  input: "Conv_1/kernel"
  input: "^AssignVariableOp_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_256"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "Conv_1_bn/gamma"
  input: "Placeholder_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_256"
  op: "ReadVariableOp"
  input: "Conv_1_bn/gamma"
  input: "^AssignVariableOp_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_257"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "Conv_1_bn/beta"
  input: "Placeholder_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_257"
  op: "ReadVariableOp"
  input: "Conv_1_bn/beta"
  input: "^AssignVariableOp_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_258"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "Placeholder_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_258"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "^AssignVariableOp_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_259"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "Placeholder_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_259"
  op: "ReadVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "^AssignVariableOp_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/gamma"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "block_9_expand/kernel"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "block_15_expand/kernel"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "block_11_expand/kernel"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "block_16_expand/kernel"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "block_14_project/kernel"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/gamma"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "block_10_expand/kernel"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/beta"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "block_12_expand/kernel"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "block_6_expand/kernel"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "block_15_project/kernel"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "block_13_expand/kernel"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/beta"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "block_8_project/kernel"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "block_11_project/kernel"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "block_2_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "block_5_expand/kernel"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_mean"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "block_8_expand/kernel"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "block_11_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "block_1_expand/kernel"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "block_3_expand/kernel"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "block_9_project/kernel"
}
node {
  name: "VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "block_8_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "block_9_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "bn_Conv1/moving_variance"
}
node {
  name: "VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "Conv_1/kernel"
}
node {
  name: "VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "Conv_1_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "block_16_project/kernel"
}
node {
  name: "VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "block_3_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "block_14_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "block_9_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "block_12_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "block_10_project/kernel"
}
node {
  name: "VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "block_3_project/kernel"
}
node {
  name: "VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "block_7_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "block_7_project/kernel"
}
node {
  name: "VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "block_14_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "block_14_expand/kernel"
}
node {
  name: "VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project/kernel"
}
node {
  name: "VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "block_4_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "block_6_project/kernel"
}
node {
  name: "VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "block_10_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "block_13_project/kernel"
}
node {
  name: "VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "block_1_project/kernel"
}
node {
  name: "VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_199"
  op: "VarIsInitializedOp"
  input: "block_7_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_200"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_201"
  op: "VarIsInitializedOp"
  input: "block_13_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_202"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_203"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_204"
  op: "VarIsInitializedOp"
  input: "Conv1/kernel"
}
node {
  name: "VarIsInitializedOp_205"
  op: "VarIsInitializedOp"
  input: "block_3_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_206"
  op: "VarIsInitializedOp"
  input: "block_4_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_207"
  op: "VarIsInitializedOp"
  input: "block_5_project/kernel"
}
node {
  name: "VarIsInitializedOp_208"
  op: "VarIsInitializedOp"
  input: "block_6_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_209"
  op: "VarIsInitializedOp"
  input: "block_8_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_210"
  op: "VarIsInitializedOp"
  input: "block_9_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_211"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_212"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_213"
  op: "VarIsInitializedOp"
  input: "block_12_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_214"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_215"
  op: "VarIsInitializedOp"
  input: "block_6_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_216"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_217"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_218"
  op: "VarIsInitializedOp"
  input: "block_15_project_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_219"
  op: "VarIsInitializedOp"
  input: "block_16_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_220"
  op: "VarIsInitializedOp"
  input: "block_1_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_221"
  op: "VarIsInitializedOp"
  input: "block_1_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_222"
  op: "VarIsInitializedOp"
  input: "block_4_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_223"
  op: "VarIsInitializedOp"
  input: "block_5_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_224"
  op: "VarIsInitializedOp"
  input: "block_6_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_225"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_226"
  op: "VarIsInitializedOp"
  input: "block_13_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_227"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_228"
  op: "VarIsInitializedOp"
  input: "block_15_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_229"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_230"
  op: "VarIsInitializedOp"
  input: "block_16_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_231"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/moving_variance"
}
node {
  name: "VarIsInitializedOp_232"
  op: "VarIsInitializedOp"
  input: "block_4_project/kernel"
}
node {
  name: "VarIsInitializedOp_233"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_234"
  op: "VarIsInitializedOp"
  input: "block_8_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_235"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_236"
  op: "VarIsInitializedOp"
  input: "block_11_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_237"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_238"
  op: "VarIsInitializedOp"
  input: "block_12_project/kernel"
}
node {
  name: "VarIsInitializedOp_239"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_240"
  op: "VarIsInitializedOp"
  input: "block_5_expand_BN/beta"
}
node {
  name: "VarIsInitializedOp_241"
  op: "VarIsInitializedOp"
  input: "block_2_depthwise_BN/beta"
}
node {
  name: "VarIsInitializedOp_242"
  op: "VarIsInitializedOp"
  input: "block_2_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_243"
  op: "VarIsInitializedOp"
  input: "block_4_expand/kernel"
}
node {
  name: "VarIsInitializedOp_244"
  op: "VarIsInitializedOp"
  input: "block_5_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_245"
  op: "VarIsInitializedOp"
  input: "block_7_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_246"
  op: "VarIsInitializedOp"
  input: "block_10_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_247"
  op: "VarIsInitializedOp"
  input: "block_10_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_248"
  op: "VarIsInitializedOp"
  input: "block_11_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_249"
  op: "VarIsInitializedOp"
  input: "block_13_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_250"
  op: "VarIsInitializedOp"
  input: "block_14_expand_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_251"
  op: "VarIsInitializedOp"
  input: "block_16_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_252"
  op: "VarIsInitializedOp"
  input: "expanded_conv_project_BN/moving_mean"
}
node {
  name: "VarIsInitializedOp_253"
  op: "VarIsInitializedOp"
  input: "block_1_project_BN/beta"
}
node {
  name: "VarIsInitializedOp_254"
  op: "VarIsInitializedOp"
  input: "block_2_project/kernel"
}
node {
  name: "VarIsInitializedOp_255"
  op: "VarIsInitializedOp"
  input: "block_3_project_BN/gamma"
}
node {
  name: "VarIsInitializedOp_256"
  op: "VarIsInitializedOp"
  input: "block_7_expand/kernel"
}
node {
  name: "VarIsInitializedOp_257"
  op: "VarIsInitializedOp"
  input: "block_12_depthwise_BN/gamma"
}
node {
  name: "VarIsInitializedOp_258"
  op: "VarIsInitializedOp"
  input: "block_15_expand_BN/gamma"
}
node {
  name: "VarIsInitializedOp_259"
  op: "VarIsInitializedOp"
  input: "block_2_expand/kernel"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Conv1/kernel/Assign"
  input: "^Conv_1/kernel/Assign"
  input: "^Conv_1_bn/beta/Assign"
  input: "^Conv_1_bn/gamma/Assign"
  input: "^Conv_1_bn/moving_mean/Assign"
  input: "^Conv_1_bn/moving_variance/Assign"
  input: "^block_10_depthwise/depthwise_kernel/Assign"
  input: "^block_10_depthwise_BN/beta/Assign"
  input: "^block_10_depthwise_BN/gamma/Assign"
  input: "^block_10_depthwise_BN/moving_mean/Assign"
  input: "^block_10_depthwise_BN/moving_variance/Assign"
  input: "^block_10_expand/kernel/Assign"
  input: "^block_10_expand_BN/beta/Assign"
  input: "^block_10_expand_BN/gamma/Assign"
  input: "^block_10_expand_BN/moving_mean/Assign"
  input: "^block_10_expand_BN/moving_variance/Assign"
  input: "^block_10_project/kernel/Assign"
  input: "^block_10_project_BN/beta/Assign"
  input: "^block_10_project_BN/gamma/Assign"
  input: "^block_10_project_BN/moving_mean/Assign"
  input: "^block_10_project_BN/moving_variance/Assign"
  input: "^block_11_depthwise/depthwise_kernel/Assign"
  input: "^block_11_depthwise_BN/beta/Assign"
  input: "^block_11_depthwise_BN/gamma/Assign"
  input: "^block_11_depthwise_BN/moving_mean/Assign"
  input: "^block_11_depthwise_BN/moving_variance/Assign"
  input: "^block_11_expand/kernel/Assign"
  input: "^block_11_expand_BN/beta/Assign"
  input: "^block_11_expand_BN/gamma/Assign"
  input: "^block_11_expand_BN/moving_mean/Assign"
  input: "^block_11_expand_BN/moving_variance/Assign"
  input: "^block_11_project/kernel/Assign"
  input: "^block_11_project_BN/beta/Assign"
  input: "^block_11_project_BN/gamma/Assign"
  input: "^block_11_project_BN/moving_mean/Assign"
  input: "^block_11_project_BN/moving_variance/Assign"
  input: "^block_12_depthwise/depthwise_kernel/Assign"
  input: "^block_12_depthwise_BN/beta/Assign"
  input: "^block_12_depthwise_BN/gamma/Assign"
  input: "^block_12_depthwise_BN/moving_mean/Assign"
  input: "^block_12_depthwise_BN/moving_variance/Assign"
  input: "^block_12_expand/kernel/Assign"
  input: "^block_12_expand_BN/beta/Assign"
  input: "^block_12_expand_BN/gamma/Assign"
  input: "^block_12_expand_BN/moving_mean/Assign"
  input: "^block_12_expand_BN/moving_variance/Assign"
  input: "^block_12_project/kernel/Assign"
  input: "^block_12_project_BN/beta/Assign"
  input: "^block_12_project_BN/gamma/Assign"
  input: "^block_12_project_BN/moving_mean/Assign"
  input: "^block_12_project_BN/moving_variance/Assign"
  input: "^block_13_depthwise/depthwise_kernel/Assign"
  input: "^block_13_depthwise_BN/beta/Assign"
  input: "^block_13_depthwise_BN/gamma/Assign"
  input: "^block_13_depthwise_BN/moving_mean/Assign"
  input: "^block_13_depthwise_BN/moving_variance/Assign"
  input: "^block_13_expand/kernel/Assign"
  input: "^block_13_expand_BN/beta/Assign"
  input: "^block_13_expand_BN/gamma/Assign"
  input: "^block_13_expand_BN/moving_mean/Assign"
  input: "^block_13_expand_BN/moving_variance/Assign"
  input: "^block_13_project/kernel/Assign"
  input: "^block_13_project_BN/beta/Assign"
  input: "^block_13_project_BN/gamma/Assign"
  input: "^block_13_project_BN/moving_mean/Assign"
  input: "^block_13_project_BN/moving_variance/Assign"
  input: "^block_14_depthwise/depthwise_kernel/Assign"
  input: "^block_14_depthwise_BN/beta/Assign"
  input: "^block_14_depthwise_BN/gamma/Assign"
  input: "^block_14_depthwise_BN/moving_mean/Assign"
  input: "^block_14_depthwise_BN/moving_variance/Assign"
  input: "^block_14_expand/kernel/Assign"
  input: "^block_14_expand_BN/beta/Assign"
  input: "^block_14_expand_BN/gamma/Assign"
  input: "^block_14_expand_BN/moving_mean/Assign"
  input: "^block_14_expand_BN/moving_variance/Assign"
  input: "^block_14_project/kernel/Assign"
  input: "^block_14_project_BN/beta/Assign"
  input: "^block_14_project_BN/gamma/Assign"
  input: "^block_14_project_BN/moving_mean/Assign"
  input: "^block_14_project_BN/moving_variance/Assign"
  input: "^block_15_depthwise/depthwise_kernel/Assign"
  input: "^block_15_depthwise_BN/beta/Assign"
  input: "^block_15_depthwise_BN/gamma/Assign"
  input: "^block_15_depthwise_BN/moving_mean/Assign"
  input: "^block_15_depthwise_BN/moving_variance/Assign"
  input: "^block_15_expand/kernel/Assign"
  input: "^block_15_expand_BN/beta/Assign"
  input: "^block_15_expand_BN/gamma/Assign"
  input: "^block_15_expand_BN/moving_mean/Assign"
  input: "^block_15_expand_BN/moving_variance/Assign"
  input: "^block_15_project/kernel/Assign"
  input: "^block_15_project_BN/beta/Assign"
  input: "^block_15_project_BN/gamma/Assign"
  input: "^block_15_project_BN/moving_mean/Assign"
  input: "^block_15_project_BN/moving_variance/Assign"
  input: "^block_16_depthwise/depthwise_kernel/Assign"
  input: "^block_16_depthwise_BN/beta/Assign"
  input: "^block_16_depthwise_BN/gamma/Assign"
  input: "^block_16_depthwise_BN/moving_mean/Assign"
  input: "^block_16_depthwise_BN/moving_variance/Assign"
  input: "^block_16_expand/kernel/Assign"
  input: "^block_16_expand_BN/beta/Assign"
  input: "^block_16_expand_BN/gamma/Assign"
  input: "^block_16_expand_BN/moving_mean/Assign"
  input: "^block_16_expand_BN/moving_variance/Assign"
  input: "^block_16_project/kernel/Assign"
  input: "^block_16_project_BN/beta/Assign"
  input: "^block_16_project_BN/gamma/Assign"
  input: "^block_16_project_BN/moving_mean/Assign"
  input: "^block_16_project_BN/moving_variance/Assign"
  input: "^block_1_depthwise/depthwise_kernel/Assign"
  input: "^block_1_depthwise_BN/beta/Assign"
  input: "^block_1_depthwise_BN/gamma/Assign"
  input: "^block_1_depthwise_BN/moving_mean/Assign"
  input: "^block_1_depthwise_BN/moving_variance/Assign"
  input: "^block_1_expand/kernel/Assign"
  input: "^block_1_expand_BN/beta/Assign"
  input: "^block_1_expand_BN/gamma/Assign"
  input: "^block_1_expand_BN/moving_mean/Assign"
  input: "^block_1_expand_BN/moving_variance/Assign"
  input: "^block_1_project/kernel/Assign"
  input: "^block_1_project_BN/beta/Assign"
  input: "^block_1_project_BN/gamma/Assign"
  input: "^block_1_project_BN/moving_mean/Assign"
  input: "^block_1_project_BN/moving_variance/Assign"
  input: "^block_2_depthwise/depthwise_kernel/Assign"
  input: "^block_2_depthwise_BN/beta/Assign"
  input: "^block_2_depthwise_BN/gamma/Assign"
  input: "^block_2_depthwise_BN/moving_mean/Assign"
  input: "^block_2_depthwise_BN/moving_variance/Assign"
  input: "^block_2_expand/kernel/Assign"
  input: "^block_2_expand_BN/beta/Assign"
  input: "^block_2_expand_BN/gamma/Assign"
  input: "^block_2_expand_BN/moving_mean/Assign"
  input: "^block_2_expand_BN/moving_variance/Assign"
  input: "^block_2_project/kernel/Assign"
  input: "^block_2_project_BN/beta/Assign"
  input: "^block_2_project_BN/gamma/Assign"
  input: "^block_2_project_BN/moving_mean/Assign"
  input: "^block_2_project_BN/moving_variance/Assign"
  input: "^block_3_depthwise/depthwise_kernel/Assign"
  input: "^block_3_depthwise_BN/beta/Assign"
  input: "^block_3_depthwise_BN/gamma/Assign"
  input: "^block_3_depthwise_BN/moving_mean/Assign"
  input: "^block_3_depthwise_BN/moving_variance/Assign"
  input: "^block_3_expand/kernel/Assign"
  input: "^block_3_expand_BN/beta/Assign"
  input: "^block_3_expand_BN/gamma/Assign"
  input: "^block_3_expand_BN/moving_mean/Assign"
  input: "^block_3_expand_BN/moving_variance/Assign"
  input: "^block_3_project/kernel/Assign"
  input: "^block_3_project_BN/beta/Assign"
  input: "^block_3_project_BN/gamma/Assign"
  input: "^block_3_project_BN/moving_mean/Assign"
  input: "^block_3_project_BN/moving_variance/Assign"
  input: "^block_4_depthwise/depthwise_kernel/Assign"
  input: "^block_4_depthwise_BN/beta/Assign"
  input: "^block_4_depthwise_BN/gamma/Assign"
  input: "^block_4_depthwise_BN/moving_mean/Assign"
  input: "^block_4_depthwise_BN/moving_variance/Assign"
  input: "^block_4_expand/kernel/Assign"
  input: "^block_4_expand_BN/beta/Assign"
  input: "^block_4_expand_BN/gamma/Assign"
  input: "^block_4_expand_BN/moving_mean/Assign"
  input: "^block_4_expand_BN/moving_variance/Assign"
  input: "^block_4_project/kernel/Assign"
  input: "^block_4_project_BN/beta/Assign"
  input: "^block_4_project_BN/gamma/Assign"
  input: "^block_4_project_BN/moving_mean/Assign"
  input: "^block_4_project_BN/moving_variance/Assign"
  input: "^block_5_depthwise/depthwise_kernel/Assign"
  input: "^block_5_depthwise_BN/beta/Assign"
  input: "^block_5_depthwise_BN/gamma/Assign"
  input: "^block_5_depthwise_BN/moving_mean/Assign"
  input: "^block_5_depthwise_BN/moving_variance/Assign"
  input: "^block_5_expand/kernel/Assign"
  input: "^block_5_expand_BN/beta/Assign"
  input: "^block_5_expand_BN/gamma/Assign"
  input: "^block_5_expand_BN/moving_mean/Assign"
  input: "^block_5_expand_BN/moving_variance/Assign"
  input: "^block_5_project/kernel/Assign"
  input: "^block_5_project_BN/beta/Assign"
  input: "^block_5_project_BN/gamma/Assign"
  input: "^block_5_project_BN/moving_mean/Assign"
  input: "^block_5_project_BN/moving_variance/Assign"
  input: "^block_6_depthwise/depthwise_kernel/Assign"
  input: "^block_6_depthwise_BN/beta/Assign"
  input: "^block_6_depthwise_BN/gamma/Assign"
  input: "^block_6_depthwise_BN/moving_mean/Assign"
  input: "^block_6_depthwise_BN/moving_variance/Assign"
  input: "^block_6_expand/kernel/Assign"
  input: "^block_6_expand_BN/beta/Assign"
  input: "^block_6_expand_BN/gamma/Assign"
  input: "^block_6_expand_BN/moving_mean/Assign"
  input: "^block_6_expand_BN/moving_variance/Assign"
  input: "^block_6_project/kernel/Assign"
  input: "^block_6_project_BN/beta/Assign"
  input: "^block_6_project_BN/gamma/Assign"
  input: "^block_6_project_BN/moving_mean/Assign"
  input: "^block_6_project_BN/moving_variance/Assign"
  input: "^block_7_depthwise/depthwise_kernel/Assign"
  input: "^block_7_depthwise_BN/beta/Assign"
  input: "^block_7_depthwise_BN/gamma/Assign"
  input: "^block_7_depthwise_BN/moving_mean/Assign"
  input: "^block_7_depthwise_BN/moving_variance/Assign"
  input: "^block_7_expand/kernel/Assign"
  input: "^block_7_expand_BN/beta/Assign"
  input: "^block_7_expand_BN/gamma/Assign"
  input: "^block_7_expand_BN/moving_mean/Assign"
  input: "^block_7_expand_BN/moving_variance/Assign"
  input: "^block_7_project/kernel/Assign"
  input: "^block_7_project_BN/beta/Assign"
  input: "^block_7_project_BN/gamma/Assign"
  input: "^block_7_project_BN/moving_mean/Assign"
  input: "^block_7_project_BN/moving_variance/Assign"
  input: "^block_8_depthwise/depthwise_kernel/Assign"
  input: "^block_8_depthwise_BN/beta/Assign"
  input: "^block_8_depthwise_BN/gamma/Assign"
  input: "^block_8_depthwise_BN/moving_mean/Assign"
  input: "^block_8_depthwise_BN/moving_variance/Assign"
  input: "^block_8_expand/kernel/Assign"
  input: "^block_8_expand_BN/beta/Assign"
  input: "^block_8_expand_BN/gamma/Assign"
  input: "^block_8_expand_BN/moving_mean/Assign"
  input: "^block_8_expand_BN/moving_variance/Assign"
  input: "^block_8_project/kernel/Assign"
  input: "^block_8_project_BN/beta/Assign"
  input: "^block_8_project_BN/gamma/Assign"
  input: "^block_8_project_BN/moving_mean/Assign"
  input: "^block_8_project_BN/moving_variance/Assign"
  input: "^block_9_depthwise/depthwise_kernel/Assign"
  input: "^block_9_depthwise_BN/beta/Assign"
  input: "^block_9_depthwise_BN/gamma/Assign"
  input: "^block_9_depthwise_BN/moving_mean/Assign"
  input: "^block_9_depthwise_BN/moving_variance/Assign"
  input: "^block_9_expand/kernel/Assign"
  input: "^block_9_expand_BN/beta/Assign"
  input: "^block_9_expand_BN/gamma/Assign"
  input: "^block_9_expand_BN/moving_mean/Assign"
  input: "^block_9_expand_BN/moving_variance/Assign"
  input: "^block_9_project/kernel/Assign"
  input: "^block_9_project_BN/beta/Assign"
  input: "^block_9_project_BN/gamma/Assign"
  input: "^block_9_project_BN/moving_mean/Assign"
  input: "^block_9_project_BN/moving_variance/Assign"
  input: "^bn_Conv1/beta/Assign"
  input: "^bn_Conv1/gamma/Assign"
  input: "^bn_Conv1/moving_mean/Assign"
  input: "^bn_Conv1/moving_variance/Assign"
  input: "^expanded_conv_depthwise/depthwise_kernel/Assign"
  input: "^expanded_conv_depthwise_BN/beta/Assign"
  input: "^expanded_conv_depthwise_BN/gamma/Assign"
  input: "^expanded_conv_depthwise_BN/moving_mean/Assign"
  input: "^expanded_conv_depthwise_BN/moving_variance/Assign"
  input: "^expanded_conv_project/kernel/Assign"
  input: "^expanded_conv_project_BN/beta/Assign"
  input: "^expanded_conv_project_BN/gamma/Assign"
  input: "^expanded_conv_project_BN/moving_mean/Assign"
  input: "^expanded_conv_project_BN/moving_variance/Assign"
}
node {
  name: "average_pooling2d/AvgPool"
  op: "AvgPool"
  input: "out_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 7
        i: 7
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 7
        i: 7
        i: 1
      }
    }
  }
}
node {
  name: "flatten/Shape"
  op: "Shape"
  input: "average_pooling2d/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice"
  op: "StridedSlice"
  input: "flatten/Shape"
  input: "flatten/strided_slice/stack"
  input: "flatten/strided_slice/stack_1"
  input: "flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten/Reshape/shape"
  op: "Pack"
  input: "flatten/strided_slice"
  input: "flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten/Reshape"
  op: "Reshape"
  input: "average_pooling2d/AvgPool"
  input: "flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06527911871671677
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06527911871671677
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense/Relu"
  op: "Relu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/switch_t"
  op: "Identity"
  input: "dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/switch_f"
  op: "Identity"
  input: "dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/dropout/rate"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense/Relu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/Relu"
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/cond/dropout/random_uniform/max"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/cond/dropout/random_uniform/RandomUniform"
  input: "dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout/cond/dropout/random_uniform/mul"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/sub"
  op: "Sub"
  input: "dropout/cond/dropout/sub/x"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout/cond/dropout/truediv/x"
  input: "dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/cond/dropout/random_uniform"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/mul"
  op: "Mul"
  input: "dropout/cond/dropout/Shape/Switch:1"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/Cast"
  op: "Cast"
  input: "dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/mul"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/Identity"
  op: "Identity"
  input: "dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/Identity/Switch"
  op: "Switch"
  input: "dense/Relu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/Relu"
      }
    }
  }
}
node {
  name: "dropout/cond/Merge"
  op: "Merge"
  input: "dropout/cond/Identity"
  input: "dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21483446657657623
      }
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21483446657657623
      }
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "face_model/output_node/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "face_model/output_node/kernel/Initializer/random_uniform/max"
  input: "face_model/output_node/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "face_model/output_node/kernel/Initializer/random_uniform/RandomUniform"
  input: "face_model/output_node/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "face_model/output_node/kernel/Initializer/random_uniform"
  op: "Add"
  input: "face_model/output_node/kernel/Initializer/random_uniform/mul"
  input: "face_model/output_node/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "face_model/output_node/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "face_model/output_node/kernel"
    }
  }
}
node {
  name: "face_model/output_node/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "face_model/output_node/kernel"
}
node {
  name: "face_model/output_node/kernel/Assign"
  op: "AssignVariableOp"
  input: "face_model/output_node/kernel"
  input: "face_model/output_node/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "face_model/output_node/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "face_model/output_node/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "face_model/output_node/bias"
    }
  }
}
node {
  name: "face_model/output_node/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "face_model/output_node/bias"
}
node {
  name: "face_model/output_node/bias/Assign"
  op: "AssignVariableOp"
  input: "face_model/output_node/bias"
  input: "face_model/output_node/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "face_model/output_node/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "face_model/output_node/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/MatMul"
  op: "MatMul"
  input: "dropout/cond/Merge"
  input: "face_model/output_node/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "face_model/output_node/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "face_model/output_node/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "face_model/output_node/BiasAdd"
  op: "BiasAdd"
  input: "face_model/output_node/MatMul"
  input: "face_model/output_node/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "face_model/output_node/Softmax"
  op: "Softmax"
  input: "face_model/output_node/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: "Conv1/kernel"
        string_val: "Conv_1/kernel"
        string_val: "Conv_1_bn/beta"
        string_val: "Conv_1_bn/gamma"
        string_val: "Conv_1_bn/moving_mean"
        string_val: "Conv_1_bn/moving_variance"
        string_val: "block_10_depthwise/depthwise_kernel"
        string_val: "block_10_depthwise_BN/beta"
        string_val: "block_10_depthwise_BN/gamma"
        string_val: "block_10_depthwise_BN/moving_mean"
        string_val: "block_10_depthwise_BN/moving_variance"
        string_val: "block_10_expand/kernel"
        string_val: "block_10_expand_BN/beta"
        string_val: "block_10_expand_BN/gamma"
        string_val: "block_10_expand_BN/moving_mean"
        string_val: "block_10_expand_BN/moving_variance"
        string_val: "block_10_project/kernel"
        string_val: "block_10_project_BN/beta"
        string_val: "block_10_project_BN/gamma"
        string_val: "block_10_project_BN/moving_mean"
        string_val: "block_10_project_BN/moving_variance"
        string_val: "block_11_depthwise/depthwise_kernel"
        string_val: "block_11_depthwise_BN/beta"
        string_val: "block_11_depthwise_BN/gamma"
        string_val: "block_11_depthwise_BN/moving_mean"
        string_val: "block_11_depthwise_BN/moving_variance"
        string_val: "block_11_expand/kernel"
        string_val: "block_11_expand_BN/beta"
        string_val: "block_11_expand_BN/gamma"
        string_val: "block_11_expand_BN/moving_mean"
        string_val: "block_11_expand_BN/moving_variance"
        string_val: "block_11_project/kernel"
        string_val: "block_11_project_BN/beta"
        string_val: "block_11_project_BN/gamma"
        string_val: "block_11_project_BN/moving_mean"
        string_val: "block_11_project_BN/moving_variance"
        string_val: "block_12_depthwise/depthwise_kernel"
        string_val: "block_12_depthwise_BN/beta"
        string_val: "block_12_depthwise_BN/gamma"
        string_val: "block_12_depthwise_BN/moving_mean"
        string_val: "block_12_depthwise_BN/moving_variance"
        string_val: "block_12_expand/kernel"
        string_val: "block_12_expand_BN/beta"
        string_val: "block_12_expand_BN/gamma"
        string_val: "block_12_expand_BN/moving_mean"
        string_val: "block_12_expand_BN/moving_variance"
        string_val: "block_12_project/kernel"
        string_val: "block_12_project_BN/beta"
        string_val: "block_12_project_BN/gamma"
        string_val: "block_12_project_BN/moving_mean"
        string_val: "block_12_project_BN/moving_variance"
        string_val: "block_13_depthwise/depthwise_kernel"
        string_val: "block_13_depthwise_BN/beta"
        string_val: "block_13_depthwise_BN/gamma"
        string_val: "block_13_depthwise_BN/moving_mean"
        string_val: "block_13_depthwise_BN/moving_variance"
        string_val: "block_13_expand/kernel"
        string_val: "block_13_expand_BN/beta"
        string_val: "block_13_expand_BN/gamma"
        string_val: "block_13_expand_BN/moving_mean"
        string_val: "block_13_expand_BN/moving_variance"
        string_val: "block_13_project/kernel"
        string_val: "block_13_project_BN/beta"
        string_val: "block_13_project_BN/gamma"
        string_val: "block_13_project_BN/moving_mean"
        string_val: "block_13_project_BN/moving_variance"
        string_val: "block_14_depthwise/depthwise_kernel"
        string_val: "block_14_depthwise_BN/beta"
        string_val: "block_14_depthwise_BN/gamma"
        string_val: "block_14_depthwise_BN/moving_mean"
        string_val: "block_14_depthwise_BN/moving_variance"
        string_val: "block_14_expand/kernel"
        string_val: "block_14_expand_BN/beta"
        string_val: "block_14_expand_BN/gamma"
        string_val: "block_14_expand_BN/moving_mean"
        string_val: "block_14_expand_BN/moving_variance"
        string_val: "block_14_project/kernel"
        string_val: "block_14_project_BN/beta"
        string_val: "block_14_project_BN/gamma"
        string_val: "block_14_project_BN/moving_mean"
        string_val: "block_14_project_BN/moving_variance"
        string_val: "block_15_depthwise/depthwise_kernel"
        string_val: "block_15_depthwise_BN/beta"
        string_val: "block_15_depthwise_BN/gamma"
        string_val: "block_15_depthwise_BN/moving_mean"
        string_val: "block_15_depthwise_BN/moving_variance"
        string_val: "block_15_expand/kernel"
        string_val: "block_15_expand_BN/beta"
        string_val: "block_15_expand_BN/gamma"
        string_val: "block_15_expand_BN/moving_mean"
        string_val: "block_15_expand_BN/moving_variance"
        string_val: "block_15_project/kernel"
        string_val: "block_15_project_BN/beta"
        string_val: "block_15_project_BN/gamma"
        string_val: "block_15_project_BN/moving_mean"
        string_val: "block_15_project_BN/moving_variance"
        string_val: "block_16_depthwise/depthwise_kernel"
        string_val: "block_16_depthwise_BN/beta"
        string_val: "block_16_depthwise_BN/gamma"
        string_val: "block_16_depthwise_BN/moving_mean"
        string_val: "block_16_depthwise_BN/moving_variance"
        string_val: "block_16_expand/kernel"
        string_val: "block_16_expand_BN/beta"
        string_val: "block_16_expand_BN/gamma"
        string_val: "block_16_expand_BN/moving_mean"
        string_val: "block_16_expand_BN/moving_variance"
        string_val: "block_16_project/kernel"
        string_val: "block_16_project_BN/beta"
        string_val: "block_16_project_BN/gamma"
        string_val: "block_16_project_BN/moving_mean"
        string_val: "block_16_project_BN/moving_variance"
        string_val: "block_1_depthwise/depthwise_kernel"
        string_val: "block_1_depthwise_BN/beta"
        string_val: "block_1_depthwise_BN/gamma"
        string_val: "block_1_depthwise_BN/moving_mean"
        string_val: "block_1_depthwise_BN/moving_variance"
        string_val: "block_1_expand/kernel"
        string_val: "block_1_expand_BN/beta"
        string_val: "block_1_expand_BN/gamma"
        string_val: "block_1_expand_BN/moving_mean"
        string_val: "block_1_expand_BN/moving_variance"
        string_val: "block_1_project/kernel"
        string_val: "block_1_project_BN/beta"
        string_val: "block_1_project_BN/gamma"
        string_val: "block_1_project_BN/moving_mean"
        string_val: "block_1_project_BN/moving_variance"
        string_val: "block_2_depthwise/depthwise_kernel"
        string_val: "block_2_depthwise_BN/beta"
        string_val: "block_2_depthwise_BN/gamma"
        string_val: "block_2_depthwise_BN/moving_mean"
        string_val: "block_2_depthwise_BN/moving_variance"
        string_val: "block_2_expand/kernel"
        string_val: "block_2_expand_BN/beta"
        string_val: "block_2_expand_BN/gamma"
        string_val: "block_2_expand_BN/moving_mean"
        string_val: "block_2_expand_BN/moving_variance"
        string_val: "block_2_project/kernel"
        string_val: "block_2_project_BN/beta"
        string_val: "block_2_project_BN/gamma"
        string_val: "block_2_project_BN/moving_mean"
        string_val: "block_2_project_BN/moving_variance"
        string_val: "block_3_depthwise/depthwise_kernel"
        string_val: "block_3_depthwise_BN/beta"
        string_val: "block_3_depthwise_BN/gamma"
        string_val: "block_3_depthwise_BN/moving_mean"
        string_val: "block_3_depthwise_BN/moving_variance"
        string_val: "block_3_expand/kernel"
        string_val: "block_3_expand_BN/beta"
        string_val: "block_3_expand_BN/gamma"
        string_val: "block_3_expand_BN/moving_mean"
        string_val: "block_3_expand_BN/moving_variance"
        string_val: "block_3_project/kernel"
        string_val: "block_3_project_BN/beta"
        string_val: "block_3_project_BN/gamma"
        string_val: "block_3_project_BN/moving_mean"
        string_val: "block_3_project_BN/moving_variance"
        string_val: "block_4_depthwise/depthwise_kernel"
        string_val: "block_4_depthwise_BN/beta"
        string_val: "block_4_depthwise_BN/gamma"
        string_val: "block_4_depthwise_BN/moving_mean"
        string_val: "block_4_depthwise_BN/moving_variance"
        string_val: "block_4_expand/kernel"
        string_val: "block_4_expand_BN/beta"
        string_val: "block_4_expand_BN/gamma"
        string_val: "block_4_expand_BN/moving_mean"
        string_val: "block_4_expand_BN/moving_variance"
        string_val: "block_4_project/kernel"
        string_val: "block_4_project_BN/beta"
        string_val: "block_4_project_BN/gamma"
        string_val: "block_4_project_BN/moving_mean"
        string_val: "block_4_project_BN/moving_variance"
        string_val: "block_5_depthwise/depthwise_kernel"
        string_val: "block_5_depthwise_BN/beta"
        string_val: "block_5_depthwise_BN/gamma"
        string_val: "block_5_depthwise_BN/moving_mean"
        string_val: "block_5_depthwise_BN/moving_variance"
        string_val: "block_5_expand/kernel"
        string_val: "block_5_expand_BN/beta"
        string_val: "block_5_expand_BN/gamma"
        string_val: "block_5_expand_BN/moving_mean"
        string_val: "block_5_expand_BN/moving_variance"
        string_val: "block_5_project/kernel"
        string_val: "block_5_project_BN/beta"
        string_val: "block_5_project_BN/gamma"
        string_val: "block_5_project_BN/moving_mean"
        string_val: "block_5_project_BN/moving_variance"
        string_val: "block_6_depthwise/depthwise_kernel"
        string_val: "block_6_depthwise_BN/beta"
        string_val: "block_6_depthwise_BN/gamma"
        string_val: "block_6_depthwise_BN/moving_mean"
        string_val: "block_6_depthwise_BN/moving_variance"
        string_val: "block_6_expand/kernel"
        string_val: "block_6_expand_BN/beta"
        string_val: "block_6_expand_BN/gamma"
        string_val: "block_6_expand_BN/moving_mean"
        string_val: "block_6_expand_BN/moving_variance"
        string_val: "block_6_project/kernel"
        string_val: "block_6_project_BN/beta"
        string_val: "block_6_project_BN/gamma"
        string_val: "block_6_project_BN/moving_mean"
        string_val: "block_6_project_BN/moving_variance"
        string_val: "block_7_depthwise/depthwise_kernel"
        string_val: "block_7_depthwise_BN/beta"
        string_val: "block_7_depthwise_BN/gamma"
        string_val: "block_7_depthwise_BN/moving_mean"
        string_val: "block_7_depthwise_BN/moving_variance"
        string_val: "block_7_expand/kernel"
        string_val: "block_7_expand_BN/beta"
        string_val: "block_7_expand_BN/gamma"
        string_val: "block_7_expand_BN/moving_mean"
        string_val: "block_7_expand_BN/moving_variance"
        string_val: "block_7_project/kernel"
        string_val: "block_7_project_BN/beta"
        string_val: "block_7_project_BN/gamma"
        string_val: "block_7_project_BN/moving_mean"
        string_val: "block_7_project_BN/moving_variance"
        string_val: "block_8_depthwise/depthwise_kernel"
        string_val: "block_8_depthwise_BN/beta"
        string_val: "block_8_depthwise_BN/gamma"
        string_val: "block_8_depthwise_BN/moving_mean"
        string_val: "block_8_depthwise_BN/moving_variance"
        string_val: "block_8_expand/kernel"
        string_val: "block_8_expand_BN/beta"
        string_val: "block_8_expand_BN/gamma"
        string_val: "block_8_expand_BN/moving_mean"
        string_val: "block_8_expand_BN/moving_variance"
        string_val: "block_8_project/kernel"
        string_val: "block_8_project_BN/beta"
        string_val: "block_8_project_BN/gamma"
        string_val: "block_8_project_BN/moving_mean"
        string_val: "block_8_project_BN/moving_variance"
        string_val: "block_9_depthwise/depthwise_kernel"
        string_val: "block_9_depthwise_BN/beta"
        string_val: "block_9_depthwise_BN/gamma"
        string_val: "block_9_depthwise_BN/moving_mean"
        string_val: "block_9_depthwise_BN/moving_variance"
        string_val: "block_9_expand/kernel"
        string_val: "block_9_expand_BN/beta"
        string_val: "block_9_expand_BN/gamma"
        string_val: "block_9_expand_BN/moving_mean"
        string_val: "block_9_expand_BN/moving_variance"
        string_val: "block_9_project/kernel"
        string_val: "block_9_project_BN/beta"
        string_val: "block_9_project_BN/gamma"
        string_val: "block_9_project_BN/moving_mean"
        string_val: "block_9_project_BN/moving_variance"
        string_val: "bn_Conv1/beta"
        string_val: "bn_Conv1/gamma"
        string_val: "bn_Conv1/moving_mean"
        string_val: "bn_Conv1/moving_variance"
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "expanded_conv_depthwise/depthwise_kernel"
        string_val: "expanded_conv_depthwise_BN/beta"
        string_val: "expanded_conv_depthwise_BN/gamma"
        string_val: "expanded_conv_depthwise_BN/moving_mean"
        string_val: "expanded_conv_depthwise_BN/moving_variance"
        string_val: "expanded_conv_project/kernel"
        string_val: "expanded_conv_project_BN/beta"
        string_val: "expanded_conv_project_BN/gamma"
        string_val: "expanded_conv_project_BN/moving_mean"
        string_val: "expanded_conv_project_BN/moving_variance"
        string_val: "face_model/output_node/bias"
        string_val: "face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Conv1/kernel/Read/ReadVariableOp"
  input: "Conv_1/kernel/Read/ReadVariableOp"
  input: "Conv_1_bn/beta/Read/ReadVariableOp"
  input: "Conv_1_bn/gamma/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_mean/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_variance/Read/ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_expand/kernel/Read/ReadVariableOp"
  input: "block_10_expand_BN/beta/Read/ReadVariableOp"
  input: "block_10_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_project/kernel/Read/ReadVariableOp"
  input: "block_10_project_BN/beta/Read/ReadVariableOp"
  input: "block_10_project_BN/gamma/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_expand/kernel/Read/ReadVariableOp"
  input: "block_11_expand_BN/beta/Read/ReadVariableOp"
  input: "block_11_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_project/kernel/Read/ReadVariableOp"
  input: "block_11_project_BN/beta/Read/ReadVariableOp"
  input: "block_11_project_BN/gamma/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_expand/kernel/Read/ReadVariableOp"
  input: "block_12_expand_BN/beta/Read/ReadVariableOp"
  input: "block_12_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_project/kernel/Read/ReadVariableOp"
  input: "block_12_project_BN/beta/Read/ReadVariableOp"
  input: "block_12_project_BN/gamma/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_expand/kernel/Read/ReadVariableOp"
  input: "block_13_expand_BN/beta/Read/ReadVariableOp"
  input: "block_13_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_project/kernel/Read/ReadVariableOp"
  input: "block_13_project_BN/beta/Read/ReadVariableOp"
  input: "block_13_project_BN/gamma/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_expand/kernel/Read/ReadVariableOp"
  input: "block_14_expand_BN/beta/Read/ReadVariableOp"
  input: "block_14_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_project/kernel/Read/ReadVariableOp"
  input: "block_14_project_BN/beta/Read/ReadVariableOp"
  input: "block_14_project_BN/gamma/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_expand/kernel/Read/ReadVariableOp"
  input: "block_15_expand_BN/beta/Read/ReadVariableOp"
  input: "block_15_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_project/kernel/Read/ReadVariableOp"
  input: "block_15_project_BN/beta/Read/ReadVariableOp"
  input: "block_15_project_BN/gamma/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_expand/kernel/Read/ReadVariableOp"
  input: "block_16_expand_BN/beta/Read/ReadVariableOp"
  input: "block_16_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_project/kernel/Read/ReadVariableOp"
  input: "block_16_project_BN/beta/Read/ReadVariableOp"
  input: "block_16_project_BN/gamma/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_expand/kernel/Read/ReadVariableOp"
  input: "block_1_expand_BN/beta/Read/ReadVariableOp"
  input: "block_1_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_project/kernel/Read/ReadVariableOp"
  input: "block_1_project_BN/beta/Read/ReadVariableOp"
  input: "block_1_project_BN/gamma/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_expand/kernel/Read/ReadVariableOp"
  input: "block_2_expand_BN/beta/Read/ReadVariableOp"
  input: "block_2_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_project/kernel/Read/ReadVariableOp"
  input: "block_2_project_BN/beta/Read/ReadVariableOp"
  input: "block_2_project_BN/gamma/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_expand/kernel/Read/ReadVariableOp"
  input: "block_3_expand_BN/beta/Read/ReadVariableOp"
  input: "block_3_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_project/kernel/Read/ReadVariableOp"
  input: "block_3_project_BN/beta/Read/ReadVariableOp"
  input: "block_3_project_BN/gamma/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_expand/kernel/Read/ReadVariableOp"
  input: "block_4_expand_BN/beta/Read/ReadVariableOp"
  input: "block_4_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_project/kernel/Read/ReadVariableOp"
  input: "block_4_project_BN/beta/Read/ReadVariableOp"
  input: "block_4_project_BN/gamma/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_expand/kernel/Read/ReadVariableOp"
  input: "block_5_expand_BN/beta/Read/ReadVariableOp"
  input: "block_5_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_project/kernel/Read/ReadVariableOp"
  input: "block_5_project_BN/beta/Read/ReadVariableOp"
  input: "block_5_project_BN/gamma/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_expand/kernel/Read/ReadVariableOp"
  input: "block_6_expand_BN/beta/Read/ReadVariableOp"
  input: "block_6_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_project/kernel/Read/ReadVariableOp"
  input: "block_6_project_BN/beta/Read/ReadVariableOp"
  input: "block_6_project_BN/gamma/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_expand/kernel/Read/ReadVariableOp"
  input: "block_7_expand_BN/beta/Read/ReadVariableOp"
  input: "block_7_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_project/kernel/Read/ReadVariableOp"
  input: "block_7_project_BN/beta/Read/ReadVariableOp"
  input: "block_7_project_BN/gamma/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_expand/kernel/Read/ReadVariableOp"
  input: "block_8_expand_BN/beta/Read/ReadVariableOp"
  input: "block_8_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_project/kernel/Read/ReadVariableOp"
  input: "block_8_project_BN/beta/Read/ReadVariableOp"
  input: "block_8_project_BN/gamma/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_expand/kernel/Read/ReadVariableOp"
  input: "block_9_expand_BN/beta/Read/ReadVariableOp"
  input: "block_9_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_project/kernel/Read/ReadVariableOp"
  input: "block_9_project_BN/beta/Read/ReadVariableOp"
  input: "block_9_project_BN/gamma/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_variance/Read/ReadVariableOp"
  input: "bn_Conv1/beta/Read/ReadVariableOp"
  input: "bn_Conv1/gamma/Read/ReadVariableOp"
  input: "bn_Conv1/moving_mean/Read/ReadVariableOp"
  input: "bn_Conv1/moving_variance/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "expanded_conv_project/kernel/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance/Read/ReadVariableOp"
  input: "face_model/output_node/bias/Read/ReadVariableOp"
  input: "face_model/output_node/kernel/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: "Conv1/kernel"
        string_val: "Conv_1/kernel"
        string_val: "Conv_1_bn/beta"
        string_val: "Conv_1_bn/gamma"
        string_val: "Conv_1_bn/moving_mean"
        string_val: "Conv_1_bn/moving_variance"
        string_val: "block_10_depthwise/depthwise_kernel"
        string_val: "block_10_depthwise_BN/beta"
        string_val: "block_10_depthwise_BN/gamma"
        string_val: "block_10_depthwise_BN/moving_mean"
        string_val: "block_10_depthwise_BN/moving_variance"
        string_val: "block_10_expand/kernel"
        string_val: "block_10_expand_BN/beta"
        string_val: "block_10_expand_BN/gamma"
        string_val: "block_10_expand_BN/moving_mean"
        string_val: "block_10_expand_BN/moving_variance"
        string_val: "block_10_project/kernel"
        string_val: "block_10_project_BN/beta"
        string_val: "block_10_project_BN/gamma"
        string_val: "block_10_project_BN/moving_mean"
        string_val: "block_10_project_BN/moving_variance"
        string_val: "block_11_depthwise/depthwise_kernel"
        string_val: "block_11_depthwise_BN/beta"
        string_val: "block_11_depthwise_BN/gamma"
        string_val: "block_11_depthwise_BN/moving_mean"
        string_val: "block_11_depthwise_BN/moving_variance"
        string_val: "block_11_expand/kernel"
        string_val: "block_11_expand_BN/beta"
        string_val: "block_11_expand_BN/gamma"
        string_val: "block_11_expand_BN/moving_mean"
        string_val: "block_11_expand_BN/moving_variance"
        string_val: "block_11_project/kernel"
        string_val: "block_11_project_BN/beta"
        string_val: "block_11_project_BN/gamma"
        string_val: "block_11_project_BN/moving_mean"
        string_val: "block_11_project_BN/moving_variance"
        string_val: "block_12_depthwise/depthwise_kernel"
        string_val: "block_12_depthwise_BN/beta"
        string_val: "block_12_depthwise_BN/gamma"
        string_val: "block_12_depthwise_BN/moving_mean"
        string_val: "block_12_depthwise_BN/moving_variance"
        string_val: "block_12_expand/kernel"
        string_val: "block_12_expand_BN/beta"
        string_val: "block_12_expand_BN/gamma"
        string_val: "block_12_expand_BN/moving_mean"
        string_val: "block_12_expand_BN/moving_variance"
        string_val: "block_12_project/kernel"
        string_val: "block_12_project_BN/beta"
        string_val: "block_12_project_BN/gamma"
        string_val: "block_12_project_BN/moving_mean"
        string_val: "block_12_project_BN/moving_variance"
        string_val: "block_13_depthwise/depthwise_kernel"
        string_val: "block_13_depthwise_BN/beta"
        string_val: "block_13_depthwise_BN/gamma"
        string_val: "block_13_depthwise_BN/moving_mean"
        string_val: "block_13_depthwise_BN/moving_variance"
        string_val: "block_13_expand/kernel"
        string_val: "block_13_expand_BN/beta"
        string_val: "block_13_expand_BN/gamma"
        string_val: "block_13_expand_BN/moving_mean"
        string_val: "block_13_expand_BN/moving_variance"
        string_val: "block_13_project/kernel"
        string_val: "block_13_project_BN/beta"
        string_val: "block_13_project_BN/gamma"
        string_val: "block_13_project_BN/moving_mean"
        string_val: "block_13_project_BN/moving_variance"
        string_val: "block_14_depthwise/depthwise_kernel"
        string_val: "block_14_depthwise_BN/beta"
        string_val: "block_14_depthwise_BN/gamma"
        string_val: "block_14_depthwise_BN/moving_mean"
        string_val: "block_14_depthwise_BN/moving_variance"
        string_val: "block_14_expand/kernel"
        string_val: "block_14_expand_BN/beta"
        string_val: "block_14_expand_BN/gamma"
        string_val: "block_14_expand_BN/moving_mean"
        string_val: "block_14_expand_BN/moving_variance"
        string_val: "block_14_project/kernel"
        string_val: "block_14_project_BN/beta"
        string_val: "block_14_project_BN/gamma"
        string_val: "block_14_project_BN/moving_mean"
        string_val: "block_14_project_BN/moving_variance"
        string_val: "block_15_depthwise/depthwise_kernel"
        string_val: "block_15_depthwise_BN/beta"
        string_val: "block_15_depthwise_BN/gamma"
        string_val: "block_15_depthwise_BN/moving_mean"
        string_val: "block_15_depthwise_BN/moving_variance"
        string_val: "block_15_expand/kernel"
        string_val: "block_15_expand_BN/beta"
        string_val: "block_15_expand_BN/gamma"
        string_val: "block_15_expand_BN/moving_mean"
        string_val: "block_15_expand_BN/moving_variance"
        string_val: "block_15_project/kernel"
        string_val: "block_15_project_BN/beta"
        string_val: "block_15_project_BN/gamma"
        string_val: "block_15_project_BN/moving_mean"
        string_val: "block_15_project_BN/moving_variance"
        string_val: "block_16_depthwise/depthwise_kernel"
        string_val: "block_16_depthwise_BN/beta"
        string_val: "block_16_depthwise_BN/gamma"
        string_val: "block_16_depthwise_BN/moving_mean"
        string_val: "block_16_depthwise_BN/moving_variance"
        string_val: "block_16_expand/kernel"
        string_val: "block_16_expand_BN/beta"
        string_val: "block_16_expand_BN/gamma"
        string_val: "block_16_expand_BN/moving_mean"
        string_val: "block_16_expand_BN/moving_variance"
        string_val: "block_16_project/kernel"
        string_val: "block_16_project_BN/beta"
        string_val: "block_16_project_BN/gamma"
        string_val: "block_16_project_BN/moving_mean"
        string_val: "block_16_project_BN/moving_variance"
        string_val: "block_1_depthwise/depthwise_kernel"
        string_val: "block_1_depthwise_BN/beta"
        string_val: "block_1_depthwise_BN/gamma"
        string_val: "block_1_depthwise_BN/moving_mean"
        string_val: "block_1_depthwise_BN/moving_variance"
        string_val: "block_1_expand/kernel"
        string_val: "block_1_expand_BN/beta"
        string_val: "block_1_expand_BN/gamma"
        string_val: "block_1_expand_BN/moving_mean"
        string_val: "block_1_expand_BN/moving_variance"
        string_val: "block_1_project/kernel"
        string_val: "block_1_project_BN/beta"
        string_val: "block_1_project_BN/gamma"
        string_val: "block_1_project_BN/moving_mean"
        string_val: "block_1_project_BN/moving_variance"
        string_val: "block_2_depthwise/depthwise_kernel"
        string_val: "block_2_depthwise_BN/beta"
        string_val: "block_2_depthwise_BN/gamma"
        string_val: "block_2_depthwise_BN/moving_mean"
        string_val: "block_2_depthwise_BN/moving_variance"
        string_val: "block_2_expand/kernel"
        string_val: "block_2_expand_BN/beta"
        string_val: "block_2_expand_BN/gamma"
        string_val: "block_2_expand_BN/moving_mean"
        string_val: "block_2_expand_BN/moving_variance"
        string_val: "block_2_project/kernel"
        string_val: "block_2_project_BN/beta"
        string_val: "block_2_project_BN/gamma"
        string_val: "block_2_project_BN/moving_mean"
        string_val: "block_2_project_BN/moving_variance"
        string_val: "block_3_depthwise/depthwise_kernel"
        string_val: "block_3_depthwise_BN/beta"
        string_val: "block_3_depthwise_BN/gamma"
        string_val: "block_3_depthwise_BN/moving_mean"
        string_val: "block_3_depthwise_BN/moving_variance"
        string_val: "block_3_expand/kernel"
        string_val: "block_3_expand_BN/beta"
        string_val: "block_3_expand_BN/gamma"
        string_val: "block_3_expand_BN/moving_mean"
        string_val: "block_3_expand_BN/moving_variance"
        string_val: "block_3_project/kernel"
        string_val: "block_3_project_BN/beta"
        string_val: "block_3_project_BN/gamma"
        string_val: "block_3_project_BN/moving_mean"
        string_val: "block_3_project_BN/moving_variance"
        string_val: "block_4_depthwise/depthwise_kernel"
        string_val: "block_4_depthwise_BN/beta"
        string_val: "block_4_depthwise_BN/gamma"
        string_val: "block_4_depthwise_BN/moving_mean"
        string_val: "block_4_depthwise_BN/moving_variance"
        string_val: "block_4_expand/kernel"
        string_val: "block_4_expand_BN/beta"
        string_val: "block_4_expand_BN/gamma"
        string_val: "block_4_expand_BN/moving_mean"
        string_val: "block_4_expand_BN/moving_variance"
        string_val: "block_4_project/kernel"
        string_val: "block_4_project_BN/beta"
        string_val: "block_4_project_BN/gamma"
        string_val: "block_4_project_BN/moving_mean"
        string_val: "block_4_project_BN/moving_variance"
        string_val: "block_5_depthwise/depthwise_kernel"
        string_val: "block_5_depthwise_BN/beta"
        string_val: "block_5_depthwise_BN/gamma"
        string_val: "block_5_depthwise_BN/moving_mean"
        string_val: "block_5_depthwise_BN/moving_variance"
        string_val: "block_5_expand/kernel"
        string_val: "block_5_expand_BN/beta"
        string_val: "block_5_expand_BN/gamma"
        string_val: "block_5_expand_BN/moving_mean"
        string_val: "block_5_expand_BN/moving_variance"
        string_val: "block_5_project/kernel"
        string_val: "block_5_project_BN/beta"
        string_val: "block_5_project_BN/gamma"
        string_val: "block_5_project_BN/moving_mean"
        string_val: "block_5_project_BN/moving_variance"
        string_val: "block_6_depthwise/depthwise_kernel"
        string_val: "block_6_depthwise_BN/beta"
        string_val: "block_6_depthwise_BN/gamma"
        string_val: "block_6_depthwise_BN/moving_mean"
        string_val: "block_6_depthwise_BN/moving_variance"
        string_val: "block_6_expand/kernel"
        string_val: "block_6_expand_BN/beta"
        string_val: "block_6_expand_BN/gamma"
        string_val: "block_6_expand_BN/moving_mean"
        string_val: "block_6_expand_BN/moving_variance"
        string_val: "block_6_project/kernel"
        string_val: "block_6_project_BN/beta"
        string_val: "block_6_project_BN/gamma"
        string_val: "block_6_project_BN/moving_mean"
        string_val: "block_6_project_BN/moving_variance"
        string_val: "block_7_depthwise/depthwise_kernel"
        string_val: "block_7_depthwise_BN/beta"
        string_val: "block_7_depthwise_BN/gamma"
        string_val: "block_7_depthwise_BN/moving_mean"
        string_val: "block_7_depthwise_BN/moving_variance"
        string_val: "block_7_expand/kernel"
        string_val: "block_7_expand_BN/beta"
        string_val: "block_7_expand_BN/gamma"
        string_val: "block_7_expand_BN/moving_mean"
        string_val: "block_7_expand_BN/moving_variance"
        string_val: "block_7_project/kernel"
        string_val: "block_7_project_BN/beta"
        string_val: "block_7_project_BN/gamma"
        string_val: "block_7_project_BN/moving_mean"
        string_val: "block_7_project_BN/moving_variance"
        string_val: "block_8_depthwise/depthwise_kernel"
        string_val: "block_8_depthwise_BN/beta"
        string_val: "block_8_depthwise_BN/gamma"
        string_val: "block_8_depthwise_BN/moving_mean"
        string_val: "block_8_depthwise_BN/moving_variance"
        string_val: "block_8_expand/kernel"
        string_val: "block_8_expand_BN/beta"
        string_val: "block_8_expand_BN/gamma"
        string_val: "block_8_expand_BN/moving_mean"
        string_val: "block_8_expand_BN/moving_variance"
        string_val: "block_8_project/kernel"
        string_val: "block_8_project_BN/beta"
        string_val: "block_8_project_BN/gamma"
        string_val: "block_8_project_BN/moving_mean"
        string_val: "block_8_project_BN/moving_variance"
        string_val: "block_9_depthwise/depthwise_kernel"
        string_val: "block_9_depthwise_BN/beta"
        string_val: "block_9_depthwise_BN/gamma"
        string_val: "block_9_depthwise_BN/moving_mean"
        string_val: "block_9_depthwise_BN/moving_variance"
        string_val: "block_9_expand/kernel"
        string_val: "block_9_expand_BN/beta"
        string_val: "block_9_expand_BN/gamma"
        string_val: "block_9_expand_BN/moving_mean"
        string_val: "block_9_expand_BN/moving_variance"
        string_val: "block_9_project/kernel"
        string_val: "block_9_project_BN/beta"
        string_val: "block_9_project_BN/gamma"
        string_val: "block_9_project_BN/moving_mean"
        string_val: "block_9_project_BN/moving_variance"
        string_val: "bn_Conv1/beta"
        string_val: "bn_Conv1/gamma"
        string_val: "bn_Conv1/moving_mean"
        string_val: "bn_Conv1/moving_variance"
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "expanded_conv_depthwise/depthwise_kernel"
        string_val: "expanded_conv_depthwise_BN/beta"
        string_val: "expanded_conv_depthwise_BN/gamma"
        string_val: "expanded_conv_depthwise_BN/moving_mean"
        string_val: "expanded_conv_depthwise_BN/moving_variance"
        string_val: "expanded_conv_project/kernel"
        string_val: "expanded_conv_project_BN/beta"
        string_val: "expanded_conv_project_BN/gamma"
        string_val: "expanded_conv_project_BN/moving_mean"
        string_val: "expanded_conv_project_BN/moving_variance"
        string_val: "face_model/output_node/bias"
        string_val: "face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 264
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Conv1/kernel"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Conv_1/kernel"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "Conv_1_bn/beta"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "Conv_1_bn/gamma"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_mean"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "Conv_1_bn/moving_variance"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "block_10_depthwise/depthwise_kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/beta"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/gamma"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_mean"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "block_10_depthwise_BN/moving_variance"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "block_10_expand/kernel"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/beta"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/gamma"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_mean"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "block_10_expand_BN/moving_variance"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "block_10_project/kernel"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "block_10_project_BN/beta"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "block_10_project_BN/gamma"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_mean"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "block_10_project_BN/moving_variance"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "block_11_depthwise/depthwise_kernel"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/beta"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/gamma"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_mean"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "block_11_depthwise_BN/moving_variance"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "block_11_expand/kernel"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/beta"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/gamma"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_mean"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "block_11_expand_BN/moving_variance"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "block_11_project/kernel"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "block_11_project_BN/beta"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "block_11_project_BN/gamma"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_mean"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "block_11_project_BN/moving_variance"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "block_12_depthwise/depthwise_kernel"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/beta"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/gamma"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_mean"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "block_12_depthwise_BN/moving_variance"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "block_12_expand/kernel"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/beta"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/gamma"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_mean"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "block_12_expand_BN/moving_variance"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "block_12_project/kernel"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "block_12_project_BN/beta"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "block_12_project_BN/gamma"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_mean"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "block_12_project_BN/moving_variance"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "block_13_depthwise/depthwise_kernel"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/beta"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/gamma"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_mean"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "block_13_depthwise_BN/moving_variance"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "block_13_expand/kernel"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/beta"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/gamma"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_mean"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "block_13_expand_BN/moving_variance"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "block_13_project/kernel"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "block_13_project_BN/beta"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "block_13_project_BN/gamma"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_mean"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "block_13_project_BN/moving_variance"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "block_14_depthwise/depthwise_kernel"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/beta"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/gamma"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_mean"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "block_14_depthwise_BN/moving_variance"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "block_14_expand/kernel"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/beta"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/gamma"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_mean"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "block_14_expand_BN/moving_variance"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "block_14_project/kernel"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "block_14_project_BN/beta"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "block_14_project_BN/gamma"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_mean"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "block_14_project_BN/moving_variance"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "block_15_depthwise/depthwise_kernel"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/beta"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/gamma"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_mean"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "block_15_depthwise_BN/moving_variance"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "block_15_expand/kernel"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/beta"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/gamma"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_mean"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "block_15_expand_BN/moving_variance"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "block_15_project/kernel"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "block_15_project_BN/beta"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "block_15_project_BN/gamma"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_mean"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "block_15_project_BN/moving_variance"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "block_16_depthwise/depthwise_kernel"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/beta"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/gamma"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_mean"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "block_16_depthwise_BN/moving_variance"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "block_16_expand/kernel"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/beta"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/gamma"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_mean"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "block_16_expand_BN/moving_variance"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "block_16_project/kernel"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "block_16_project_BN/beta"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "block_16_project_BN/gamma"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_mean"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "block_16_project_BN/moving_variance"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "block_1_depthwise/depthwise_kernel"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/beta"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/gamma"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_mean"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "block_1_depthwise_BN/moving_variance"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "block_1_expand/kernel"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/beta"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/gamma"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_mean"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "block_1_expand_BN/moving_variance"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "block_1_project/kernel"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "block_1_project_BN/beta"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "block_1_project_BN/gamma"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_mean"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "block_1_project_BN/moving_variance"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "block_2_depthwise/depthwise_kernel"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/beta"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/gamma"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_mean"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "block_2_depthwise_BN/moving_variance"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "block_2_expand/kernel"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/beta"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/gamma"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_mean"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "block_2_expand_BN/moving_variance"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "block_2_project/kernel"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "block_2_project_BN/beta"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "block_2_project_BN/gamma"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_mean"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "block_2_project_BN/moving_variance"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "block_3_depthwise/depthwise_kernel"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/beta"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/gamma"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_mean"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "block_3_depthwise_BN/moving_variance"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "block_3_expand/kernel"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/beta"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/gamma"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_mean"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "block_3_expand_BN/moving_variance"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "block_3_project/kernel"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "block_3_project_BN/beta"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "block_3_project_BN/gamma"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_mean"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "block_3_project_BN/moving_variance"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "block_4_depthwise/depthwise_kernel"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/beta"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/gamma"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_mean"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "block_4_depthwise_BN/moving_variance"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "block_4_expand/kernel"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/beta"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/gamma"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_mean"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "block_4_expand_BN/moving_variance"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "block_4_project/kernel"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "block_4_project_BN/beta"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "block_4_project_BN/gamma"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_mean"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "block_4_project_BN/moving_variance"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "block_5_depthwise/depthwise_kernel"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/beta"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/gamma"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_mean"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "block_5_depthwise_BN/moving_variance"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "block_5_expand/kernel"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/beta"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/gamma"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_mean"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "block_5_expand_BN/moving_variance"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "block_5_project/kernel"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "block_5_project_BN/beta"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "block_5_project_BN/gamma"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_mean"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "block_5_project_BN/moving_variance"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "block_6_depthwise/depthwise_kernel"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/beta"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/gamma"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_mean"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "block_6_depthwise_BN/moving_variance"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "block_6_expand/kernel"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/beta"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/gamma"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_194"
  op: "Identity"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_mean"
  input: "save/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_195"
  op: "Identity"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "block_6_expand_BN/moving_variance"
  input: "save/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_196"
  op: "Identity"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "block_6_project/kernel"
  input: "save/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_197"
  op: "Identity"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "block_6_project_BN/beta"
  input: "save/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_198"
  op: "Identity"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "block_6_project_BN/gamma"
  input: "save/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_199"
  op: "Identity"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_mean"
  input: "save/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_200"
  op: "Identity"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "block_6_project_BN/moving_variance"
  input: "save/Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_201"
  op: "Identity"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "block_7_depthwise/depthwise_kernel"
  input: "save/Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_202"
  op: "Identity"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/beta"
  input: "save/Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_203"
  op: "Identity"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/gamma"
  input: "save/Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_204"
  op: "Identity"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_mean"
  input: "save/Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_205"
  op: "Identity"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "block_7_depthwise_BN/moving_variance"
  input: "save/Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_206"
  op: "Identity"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "block_7_expand/kernel"
  input: "save/Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_207"
  op: "Identity"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/beta"
  input: "save/Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_208"
  op: "Identity"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/gamma"
  input: "save/Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_209"
  op: "Identity"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_mean"
  input: "save/Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_210"
  op: "Identity"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "block_7_expand_BN/moving_variance"
  input: "save/Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_211"
  op: "Identity"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "block_7_project/kernel"
  input: "save/Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_212"
  op: "Identity"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "block_7_project_BN/beta"
  input: "save/Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_213"
  op: "Identity"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "block_7_project_BN/gamma"
  input: "save/Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_214"
  op: "Identity"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_mean"
  input: "save/Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_215"
  op: "Identity"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "block_7_project_BN/moving_variance"
  input: "save/Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_216"
  op: "Identity"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "block_8_depthwise/depthwise_kernel"
  input: "save/Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_217"
  op: "Identity"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/beta"
  input: "save/Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_218"
  op: "Identity"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/gamma"
  input: "save/Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_219"
  op: "Identity"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_mean"
  input: "save/Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_220"
  op: "Identity"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "block_8_depthwise_BN/moving_variance"
  input: "save/Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_221"
  op: "Identity"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "block_8_expand/kernel"
  input: "save/Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_222"
  op: "Identity"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/beta"
  input: "save/Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_223"
  op: "Identity"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/gamma"
  input: "save/Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_224"
  op: "Identity"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_mean"
  input: "save/Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_225"
  op: "Identity"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "block_8_expand_BN/moving_variance"
  input: "save/Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_226"
  op: "Identity"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "block_8_project/kernel"
  input: "save/Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_227"
  op: "Identity"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "block_8_project_BN/beta"
  input: "save/Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_228"
  op: "Identity"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "block_8_project_BN/gamma"
  input: "save/Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_229"
  op: "Identity"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_mean"
  input: "save/Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_230"
  op: "Identity"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "block_8_project_BN/moving_variance"
  input: "save/Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_231"
  op: "Identity"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "block_9_depthwise/depthwise_kernel"
  input: "save/Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_232"
  op: "Identity"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/beta"
  input: "save/Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_233"
  op: "Identity"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/gamma"
  input: "save/Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_234"
  op: "Identity"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_mean"
  input: "save/Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_235"
  op: "Identity"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "block_9_depthwise_BN/moving_variance"
  input: "save/Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_236"
  op: "Identity"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "block_9_expand/kernel"
  input: "save/Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_237"
  op: "Identity"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/beta"
  input: "save/Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_238"
  op: "Identity"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/gamma"
  input: "save/Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_239"
  op: "Identity"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_mean"
  input: "save/Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_240"
  op: "Identity"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "block_9_expand_BN/moving_variance"
  input: "save/Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_241"
  op: "Identity"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "block_9_project/kernel"
  input: "save/Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_242"
  op: "Identity"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "block_9_project_BN/beta"
  input: "save/Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_243"
  op: "Identity"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "block_9_project_BN/gamma"
  input: "save/Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_244"
  op: "Identity"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_mean"
  input: "save/Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_245"
  op: "Identity"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "block_9_project_BN/moving_variance"
  input: "save/Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_246"
  op: "Identity"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "bn_Conv1/beta"
  input: "save/Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_247"
  op: "Identity"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "bn_Conv1/gamma"
  input: "save/Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_248"
  op: "Identity"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_mean"
  input: "save/Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_249"
  op: "Identity"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "bn_Conv1/moving_variance"
  input: "save/Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_250"
  op: "Identity"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save/Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_251"
  op: "Identity"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save/Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_252"
  op: "Identity"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel"
  input: "save/Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_253"
  op: "Identity"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/beta"
  input: "save/Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_254"
  op: "Identity"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/gamma"
  input: "save/Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_255"
  op: "Identity"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean"
  input: "save/Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_256"
  op: "Identity"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance"
  input: "save/Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_257"
  op: "Identity"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "expanded_conv_project/kernel"
  input: "save/Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_258"
  op: "Identity"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/beta"
  input: "save/Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_259"
  op: "Identity"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/gamma"
  input: "save/Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_260"
  op: "Identity"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_mean"
  input: "save/Identity_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_261"
  op: "Identity"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "expanded_conv_project_BN/moving_variance"
  input: "save/Identity_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_262"
  op: "Identity"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_262"
  op: "AssignVariableOp"
  input: "face_model/output_node/bias"
  input: "save/Identity_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_263"
  op: "Identity"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_263"
  op: "AssignVariableOp"
  input: "face_model/output_node/kernel"
  input: "save/Identity_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_194"
  input: "^save/AssignVariableOp_195"
  input: "^save/AssignVariableOp_196"
  input: "^save/AssignVariableOp_197"
  input: "^save/AssignVariableOp_198"
  input: "^save/AssignVariableOp_199"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_200"
  input: "^save/AssignVariableOp_201"
  input: "^save/AssignVariableOp_202"
  input: "^save/AssignVariableOp_203"
  input: "^save/AssignVariableOp_204"
  input: "^save/AssignVariableOp_205"
  input: "^save/AssignVariableOp_206"
  input: "^save/AssignVariableOp_207"
  input: "^save/AssignVariableOp_208"
  input: "^save/AssignVariableOp_209"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_210"
  input: "^save/AssignVariableOp_211"
  input: "^save/AssignVariableOp_212"
  input: "^save/AssignVariableOp_213"
  input: "^save/AssignVariableOp_214"
  input: "^save/AssignVariableOp_215"
  input: "^save/AssignVariableOp_216"
  input: "^save/AssignVariableOp_217"
  input: "^save/AssignVariableOp_218"
  input: "^save/AssignVariableOp_219"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_220"
  input: "^save/AssignVariableOp_221"
  input: "^save/AssignVariableOp_222"
  input: "^save/AssignVariableOp_223"
  input: "^save/AssignVariableOp_224"
  input: "^save/AssignVariableOp_225"
  input: "^save/AssignVariableOp_226"
  input: "^save/AssignVariableOp_227"
  input: "^save/AssignVariableOp_228"
  input: "^save/AssignVariableOp_229"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_230"
  input: "^save/AssignVariableOp_231"
  input: "^save/AssignVariableOp_232"
  input: "^save/AssignVariableOp_233"
  input: "^save/AssignVariableOp_234"
  input: "^save/AssignVariableOp_235"
  input: "^save/AssignVariableOp_236"
  input: "^save/AssignVariableOp_237"
  input: "^save/AssignVariableOp_238"
  input: "^save/AssignVariableOp_239"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_240"
  input: "^save/AssignVariableOp_241"
  input: "^save/AssignVariableOp_242"
  input: "^save/AssignVariableOp_243"
  input: "^save/AssignVariableOp_244"
  input: "^save/AssignVariableOp_245"
  input: "^save/AssignVariableOp_246"
  input: "^save/AssignVariableOp_247"
  input: "^save/AssignVariableOp_248"
  input: "^save/AssignVariableOp_249"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_250"
  input: "^save/AssignVariableOp_251"
  input: "^save/AssignVariableOp_252"
  input: "^save/AssignVariableOp_253"
  input: "^save/AssignVariableOp_254"
  input: "^save/AssignVariableOp_255"
  input: "^save/AssignVariableOp_256"
  input: "^save/AssignVariableOp_257"
  input: "^save/AssignVariableOp_258"
  input: "^save/AssignVariableOp_259"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_260"
  input: "^save/AssignVariableOp_261"
  input: "^save/AssignVariableOp_262"
  input: "^save/AssignVariableOp_263"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
node {
  name: "face_model/output_node_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "metrics/acc/Greater"
  op: "Greater"
  input: "face_model/output_node/Softmax"
  input: "metrics/acc/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Cast_1"
  op: "Cast"
  input: "metrics/acc/Greater"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "face_model/output_node_target"
  input: "metrics/acc/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/acc/Cast_2"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/Mean"
  op: "Mean"
  input: "metrics/acc/Cast_2"
  input: "metrics/acc/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum"
  op: "Sum"
  input: "metrics/acc/Mean"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size"
  op: "Size"
  input: "metrics/acc/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_3"
  op: "Cast"
  input: "metrics/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/acc/Cast_3"
  input: "^metrics/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity"
  op: "Identity"
  input: "metrics/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/sub"
  op: "Sub"
  input: "loss/face_model/output_node_loss/sub/x"
  input: "loss/face_model/output_node_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/clip_by_value/Minimum"
  op: "Minimum"
  input: "face_model/output_node/Softmax"
  input: "loss/face_model/output_node_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/clip_by_value"
  op: "Maximum"
  input: "loss/face_model/output_node_loss/clip_by_value/Minimum"
  input: "loss/face_model/output_node_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/add"
  op: "AddV2"
  input: "loss/face_model/output_node_loss/clip_by_value"
  input: "loss/face_model/output_node_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Log"
  op: "Log"
  input: "loss/face_model/output_node_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/mul"
  op: "Mul"
  input: "face_model/output_node_target"
  input: "loss/face_model/output_node_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/sub_1"
  op: "Sub"
  input: "loss/face_model/output_node_loss/sub_1/x"
  input: "face_model/output_node_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/sub_2"
  op: "Sub"
  input: "loss/face_model/output_node_loss/sub_2/x"
  input: "loss/face_model/output_node_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/add_1"
  op: "AddV2"
  input: "loss/face_model/output_node_loss/sub_2"
  input: "loss/face_model/output_node_loss/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Log_1"
  op: "Log"
  input: "loss/face_model/output_node_loss/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/mul_1"
  op: "Mul"
  input: "loss/face_model/output_node_loss/sub_1"
  input: "loss/face_model/output_node_loss/Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/add_2"
  op: "AddV2"
  input: "loss/face_model/output_node_loss/mul"
  input: "loss/face_model/output_node_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Neg"
  op: "Neg"
  input: "loss/face_model/output_node_loss/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Mean"
  op: "Mean"
  input: "loss/face_model/output_node_loss/Neg"
  input: "loss/face_model/output_node_loss/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Mean"
  input: "^loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/face_model/output_node_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss/face_model/output_node_loss/weighted_loss/Cast/x"
  input: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/face_model/output_node_loss/Mean"
  input: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Sum"
  op: "Sum"
  input: "loss/face_model/output_node_loss/weighted_loss/Mul"
  input: "loss/face_model/output_node_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/num_elements"
  op: "Size"
  input: "loss/face_model/output_node_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/face_model/output_node_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/Sum_1"
  op: "Sum"
  input: "loss/face_model/output_node_loss/Sum"
  input: "loss/face_model/output_node_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/face_model/output_node_loss/value"
  op: "DivNoNan"
  input: "loss/face_model/output_node_loss/Sum_1"
  input: "loss/face_model/output_node_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/face_model/output_node_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_260"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "total"
  input: "Placeholder_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_260"
  op: "ReadVariableOp"
  input: "total"
  input: "^AssignVariableOp_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_261"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "count"
  input: "Placeholder_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_261"
  op: "ReadVariableOp"
  input: "count"
  input: "^AssignVariableOp_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_260"
  op: "VarIsInitializedOp"
  input: "face_model/output_node/kernel"
}
node {
  name: "VarIsInitializedOp_261"
  op: "VarIsInitializedOp"
  input: "face_model/output_node/bias"
}
node {
  name: "VarIsInitializedOp_262"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
}
node {
  name: "VarIsInitializedOp_263"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_264"
  op: "VarIsInitializedOp"
  input: "dense/bias"
}
node {
  name: "VarIsInitializedOp_265"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^count/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^face_model/output_node/bias/Assign"
  input: "^face_model/output_node/kernel/Assign"
  input: "^total/Assign"
}
node {
  name: "training/Adam/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Fill"
  op: "Fill"
  input: "training/Adam/gradients/gradients/Shape"
  input: "training/Adam/gradients/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/Fill"
  input: "loss/face_model/output_node_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/Adam/gradients/gradients/loss/mul_grad/Mul_1"
  input: "loss/face_model/output_node_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/div_no_nan"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Neg"
  op: "Neg"
  input: "loss/face_model/output_node_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Neg"
  input: "loss/face_model/output_node_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/div_no_nan_1"
  input: "loss/face_model/output_node_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/value_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_1_grad/Tile"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Tile"
  input: "loss/face_model/output_node_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss/face_model/output_node_loss/Mean"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Mul_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/add"
  op: "AddV2"
  input: "loss/face_model/output_node_loss/Mean/reduction_indices"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/add"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/range"
  op: "Range"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/range/start"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Size"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/range"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/mod"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/DynamicStitch"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/weighted_loss/Mul_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape_2"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Shape_3"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Prod_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Prod"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Tile"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Neg_grad/Neg"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Neg_grad/Neg"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Shape"
  op: "Shape"
  input: "face_model/output_node_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Reshape"
  input: "loss/face_model/output_node_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "face_model/output_node_target"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Reshape_1"
  input: "loss/face_model/output_node_loss/Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/face_model/output_node_loss/sub_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Mul_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/face_model/output_node_loss/add"
  input: "^training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_grad/Reshape_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/face_model/output_node_loss/add_1"
  input: "^training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_1_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/mul_1_grad/Reshape_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_1_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_grad/mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_grad/mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_1_grad/mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/Log_1_grad/mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/sub_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Shape_1"
  op: "Shape"
  input: "loss/face_model/output_node_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Neg"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/AddN"
  op: "AddN"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/sub_2_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/loss/face_model/output_node_loss/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/face_model/output_node_loss/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape_2"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/face_model/output_node_loss/clip_by_value/Minimum"
  input: "loss/face_model/output_node_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/gradients/AddN"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Select"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/zeros"
  input: "training/Adam/gradients/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Select_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "face_model/output_node/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape_2"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "face_model/output_node/Softmax"
  input: "loss/face_model/output_node_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Select"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/zeros"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Select_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Reshape"
  input: "face_model/output_node/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/mul"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/sub"
  op: "Sub"
  input: "training/Adam/gradients/gradients/loss/face_model/output_node_loss/clip_by_value/Minimum_grad/Reshape"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/mul_1"
  op: "Mul"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/sub"
  input: "face_model/output_node/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/mul_1"
  input: "face_model/output_node/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/face_model/output_node/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout/cond/Merge"
  input: "training/Adam/gradients/gradients/face_model/output_node/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/Adam/gradients/gradients/face_model/output_node/MatMul_grad/MatMul"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/face_model/output_node/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Shape"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/dropout/cond/Merge_grad/cond_grad:1"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Mul"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Sum"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/mul"
  input: "training/Adam/gradients/gradients/dropout/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Switch"
  op: "Switch"
  input: "dense/Relu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Identity"
  op: "Identity"
  input: "training/Adam/gradients/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Shape_1"
  op: "Shape"
  input: "training/Adam/gradients/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zeros/Const"
  op: "Const"
  input: "^training/Adam/gradients/gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zeros"
  op: "Fill"
  input: "training/Adam/gradients/gradients/Shape_1"
  input: "training/Adam/gradients/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/Adam/gradients/gradients/dropout/cond/Merge_grad/cond_grad"
  input: "training/Adam/gradients/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Shape"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Mul"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Sum"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/Shape/Switch:1"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Mul_1"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Sum_1"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Switch_1"
  op: "Switch"
  input: "dense/Relu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Identity_1"
  op: "Identity"
  input: "training/Adam/gradients/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zeros_1/Const"
  op: "Const"
  input: "^training/Adam/gradients/gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zeros_1"
  op: "Fill"
  input: "training/Adam/gradients/gradients/Shape_2"
  input: "training/Adam/gradients/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/Adam/gradients/gradients/zeros_1"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/AddN_1"
  op: "AddN"
  input: "training/Adam/gradients/gradients/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "training/Adam/gradients/gradients/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/AddN_1"
  input: "dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/gradients/dense/Relu_grad/ReluGrad"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "training/Adam/gradients/gradients/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/iter"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/iter"
    }
  }
}
node {
  name: "training/Adam/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/iter"
}
node {
  name: "training/Adam/iter/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/iter"
  input: "training/Adam/iter/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/Adam/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/beta_1"
    }
  }
}
node {
  name: "training/Adam/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_1"
}
node {
  name: "training/Adam/beta_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/beta_1"
  input: "training/Adam/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "training/Adam/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/beta_2"
    }
  }
}
node {
  name: "training/Adam/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_2"
}
node {
  name: "training/Adam/beta_2/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/beta_2"
  input: "training/Adam/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.999999873689376e-06
      }
    }
  }
}
node {
  name: "training/Adam/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/decay"
    }
  }
}
node {
  name: "training/Adam/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/decay"
}
node {
  name: "training/Adam/decay/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/decay"
  input: "training/Adam/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "training/Adam/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/learning_rate"
    }
  }
}
node {
  name: "training/Adam/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/learning_rate"
}
node {
  name: "training/Adam/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/learning_rate"
  input: "training/Adam/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/dense/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/dense/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense/kernel/m"
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense/kernel/m"
  input: "training/Adam/dense/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense/bias/m"
    }
  }
}
node {
  name: "training/Adam/dense/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "training/Adam/dense/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense/bias/m"
  input: "training/Adam/dense/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/face_model/output_node/kernel/m"
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/face_model/output_node/kernel/m"
  input: "training/Adam/face_model/output_node/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/face_model/output_node/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/face_model/output_node/bias/m"
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/face_model/output_node/bias/m"
  input: "training/Adam/face_model/output_node/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/face_model/output_node/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/dense/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/dense/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense/kernel/v"
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense/kernel/v"
  input: "training/Adam/dense/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense/bias/v"
    }
  }
}
node {
  name: "training/Adam/dense/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "training/Adam/dense/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense/bias/v"
  input: "training/Adam/dense/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/face_model/output_node/kernel/v"
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/face_model/output_node/kernel/v"
  input: "training/Adam/face_model/output_node/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/face_model/output_node/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/face_model/output_node/bias/v"
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/face_model/output_node/bias/v"
  input: "training/Adam/face_model/output_node/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/face_model/output_node/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/face_model/output_node/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast"
  op: "Cast"
  input: "training/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul"
  op: "Mul"
  input: "training/Adam/ReadVariableOp"
  input: "training/Adam/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/add"
  op: "AddV2"
  input: "training/Adam/add/x"
  input: "training/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "training/Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv"
  op: "RealDiv"
  input: "training/Adam/ReadVariableOp_1"
  input: "training/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity"
  op: "Identity"
  input: "training/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/add_1"
  op: "AddV2"
  input: "training/Adam/ReadVariableOp_2"
  input: "training/Adam/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast_1"
  op: "Cast"
  input: "training/Adam/add_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity_1"
  op: "Identity"
  input: "training/Adam/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity_2"
  op: "Identity"
  input: "training/Adam/Identity_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow"
  op: "Pow"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1"
  op: "Pow"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub"
  op: "Sub"
  input: "training/Adam/sub/x"
  input: "training/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt"
  op: "Sqrt"
  input: "training/Adam/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_1"
  op: "Sub"
  input: "training/Adam/sub_1/x"
  input: "training/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_1"
  op: "RealDiv"
  input: "training/Adam/Sqrt"
  input: "training/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1"
  op: "Mul"
  input: "training/Adam/Identity"
  input: "training/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_2"
  op: "Sub"
  input: "training/Adam/sub_2/x"
  input: "training/Adam/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_3"
  op: "Sub"
  input: "training/Adam/sub_3/x"
  input: "training/Adam/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Adam/update_dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/kernel"
  input: "training/Adam/dense/kernel/m"
  input: "training/Adam/dense/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/dense/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/bias"
  input: "training/Adam/dense/bias/m"
  input: "training/Adam/dense/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_face_model/output_node/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "face_model/output_node/kernel"
  input: "training/Adam/face_model/output_node/kernel/m"
  input: "training/Adam/face_model/output_node/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/face_model/output_node/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_face_model/output_node/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "face_model/output_node/bias"
  input: "training/Adam/face_model/output_node/bias/m"
  input: "training/Adam/face_model/output_node/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/face_model/output_node/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@face_model/output_node/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/Const"
  op: "Const"
  input: "^training/Adam/Adam/update_dense/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_face_model/output_node/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_face_model/output_node/kernel/ResourceApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "training/Adam/iter"
  input: "training/Adam/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  input: "^training/Adam/Adam/AssignAddVariableOp"
  input: "^training/Adam/Adam/update_dense/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_face_model/output_node/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_face_model/output_node/kernel/ResourceApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^loss/mul"
  input: "^training/Adam/Adam/AssignAddVariableOp"
}
node {
  name: "VarIsInitializedOp_266"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/kernel/v"
}
node {
  name: "VarIsInitializedOp_267"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/bias/v"
}
node {
  name: "VarIsInitializedOp_268"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/kernel/m"
}
node {
  name: "VarIsInitializedOp_269"
  op: "VarIsInitializedOp"
  input: "training/Adam/learning_rate"
}
node {
  name: "VarIsInitializedOp_270"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/kernel/v"
}
node {
  name: "VarIsInitializedOp_271"
  op: "VarIsInitializedOp"
  input: "training/Adam/decay"
}
node {
  name: "VarIsInitializedOp_272"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/bias/m"
}
node {
  name: "VarIsInitializedOp_273"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/bias/v"
}
node {
  name: "VarIsInitializedOp_274"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_1"
}
node {
  name: "VarIsInitializedOp_275"
  op: "VarIsInitializedOp"
  input: "training/Adam/face_model/output_node/bias/m"
}
node {
  name: "VarIsInitializedOp_276"
  op: "VarIsInitializedOp"
  input: "training/Adam/iter"
}
node {
  name: "VarIsInitializedOp_277"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense/kernel/m"
}
node {
  name: "VarIsInitializedOp_278"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_2"
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^training/Adam/beta_1/Assign"
  input: "^training/Adam/beta_2/Assign"
  input: "^training/Adam/decay/Assign"
  input: "^training/Adam/dense/bias/m/Assign"
  input: "^training/Adam/dense/bias/v/Assign"
  input: "^training/Adam/dense/kernel/m/Assign"
  input: "^training/Adam/dense/kernel/v/Assign"
  input: "^training/Adam/face_model/output_node/bias/m/Assign"
  input: "^training/Adam/face_model/output_node/bias/v/Assign"
  input: "^training/Adam/face_model/output_node/kernel/m/Assign"
  input: "^training/Adam/face_model/output_node/kernel/v/Assign"
  input: "^training/Adam/iter/Assign"
  input: "^training/Adam/learning_rate/Assign"
}
node {
  name: "evaluation/group_deps"
  op: "NoOp"
  input: "^loss/mul"
}
node {
  name: "predict/group_deps"
  op: "NoOp"
  input: "^face_model/output_node/Softmax"
}
node {
  name: "PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-7955"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_7954"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-7965"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_7964"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_2"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-7975"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_7974"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_3"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-7986"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_7985"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_4"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-7997"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_7996"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_5"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8030"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8029"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_6"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8092"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8091"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_7"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8134"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8133"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_8"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8145"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8144"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_9"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8178"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8177"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_10"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8240"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8239"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_11"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8280"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8279"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_12"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8291"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8290"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_13"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8324"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8323"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_14"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8386"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8385"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_15"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8426"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8425"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_16"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8437"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8436"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_17"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8470"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8469"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_18"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8532"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8531"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_19"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8571"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8570"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_20"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8581"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8580"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_21"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8594"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8593"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_22"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8605"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8604"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_23"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8638"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8637"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_24"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8700"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8699"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_25"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8740"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8739"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_26"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8751"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8750"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_27"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8784"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8783"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_28"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8846"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8845"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_29"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8886"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8885"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_30"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8897"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8896"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_31"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8930"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8929"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_32"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-8992"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_8991"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_33"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9034"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9033"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_34"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9045"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9044"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_35"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9078"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9077"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_36"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9140"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9139"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_37"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9180"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9179"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_38"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9191"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9190"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_39"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9224"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9223"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_40"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9286"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9285"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_41"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9326"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9325"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_42"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9337"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9336"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_43"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9370"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9369"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_44"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9432"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9431"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_45"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9471"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9470"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_46"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9481"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9480"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_47"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9494"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9493"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_48"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9505"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9504"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_49"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9538"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9537"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_50"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9600"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9599"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_51"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9640"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9639"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_52"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9651"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9650"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_53"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9684"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9683"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_54"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9746"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9745"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_55"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9786"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9785"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_56"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9797"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9796"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_57"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9830"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9829"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_58"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9892"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9891"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_59"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9934"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9933"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_60"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9945"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9944"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_61"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-9978"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_9977"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_62"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10040"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10039"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_63"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10080"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10079"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_64"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10091"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10090"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_65"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10124"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10123"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_66"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10186"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10185"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_67"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10226"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10225"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_68"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10237"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10236"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_69"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10270"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10269"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_70"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10332"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10331"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_71"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10374"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10373"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_72"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10385"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10384"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_73"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10418"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10417"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_74"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10480"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10479"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_75"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10520"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10519"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_76"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10531"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10530"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_77"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10564"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10563"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_78"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10626"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10625"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_79"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10666"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10665"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_80"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10677"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10676"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_81"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10710"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10709"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_82"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10772"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10771"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_83"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10811"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10810"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_84"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10821"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10820"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_85"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10834"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10833"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_86"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10845"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10844"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_87"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10878"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10877"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_88"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10940"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10939"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_89"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10980"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10979"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_90"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-10991"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_10990"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_91"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11024"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11023"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_92"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11086"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11085"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_93"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11126"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11125"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_94"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11137"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11136"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_95"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11170"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11169"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_96"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11232"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11231"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_97"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11274"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11273"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_98"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11285"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11284"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_99"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11318"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11317"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_100"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11380"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11379"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_101"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11420"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11419"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_102"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11431"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11430"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_103"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11464"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11463"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_104"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11526"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11525"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_105"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11566"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11565"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_106"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11577"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11576"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_107"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11610"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11609"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_108"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11672"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11671"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_109"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11714"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11713"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_110"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11725"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11724"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_111"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11758"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11757"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_112"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11820"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11819"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_113"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11860"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11859"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_114"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11871"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11870"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_115"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11904"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11903"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_116"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-11966"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_11965"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_117"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12006"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12005"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_118"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12017"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12016"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_119"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12050"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12049"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_120"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12112"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12111"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_121"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12154"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12153"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_122"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12165"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12164"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_123"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12198"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12197"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_124"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12260"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12259"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_125"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12300"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12299"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_126"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12311"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12310"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_127"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12344"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12343"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_128"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12406"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12405"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_129"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12446"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12445"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_130"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12457"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12456"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_131"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12490"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12489"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_132"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12552"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12551"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_133"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12594"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12593"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_134"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12605"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12604"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_135"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12638"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12637"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_136"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12700"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12699"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_137"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12740"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12739"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_138"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12751"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12750"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_139"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12784"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12783"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_140"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12846"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12845"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_141"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12886"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12885"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_142"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12897"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12896"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_143"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12930"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12929"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_144"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-12992"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_12991"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_145"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13034"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13033"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_146"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13045"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13044"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_147"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13078"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13077"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_148"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13140"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13139"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_149"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13180"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13179"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_150"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13191"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13190"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_151"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13224"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13223"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_152"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13286"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13285"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_153"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13326"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13325"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_154"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13337"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13336"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_155"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13370"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13369"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_156"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13432"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13431"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_157"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13474"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13473"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_158"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13485"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13484"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_159"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13518"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13517"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_160"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13580"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13579"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_161"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13620"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13619"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_162"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13631"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13630"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_163"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13664"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13663"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_164"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13726"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13725"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_165"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13766"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13765"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_166"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13777"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13776"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_167"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13810"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13809"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_168"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13872"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13871"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_169"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13911"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13910"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_170"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13921"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13920"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_171"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13934"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13933"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_172"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13945"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13944"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_173"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-13978"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_13977"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_174"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14040"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14039"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_175"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14080"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14079"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_176"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14091"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14090"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_177"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14124"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14123"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_178"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14186"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14185"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_179"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14226"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14225"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_180"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14237"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14236"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_181"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14270"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14269"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_182"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14332"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14331"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_183"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14374"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14373"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_184"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14385"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14384"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_185"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14418"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14417"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_186"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14480"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14479"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_187"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14520"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14519"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_188"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14531"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14530"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_189"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14564"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14563"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_190"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14626"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14625"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_191"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14666"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14665"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_192"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14677"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14676"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_193"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14710"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14709"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_194"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14772"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14771"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_195"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14814"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14813"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_196"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14825"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14824"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_197"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14858"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14857"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_198"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14920"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14919"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_199"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14960"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14959"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_200"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-14971"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_14970"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_201"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15004"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15003"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_202"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15066"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15065"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_203"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15106"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15105"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_204"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15117"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15116"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_205"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15150"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15149"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_206"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15212"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15211"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_207"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15254"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15253"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_208"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15265"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15264"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_209"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15298"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15297"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_210"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15360"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15359"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_211"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15400"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15399"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_212"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15411"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15410"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_213"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15444"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15443"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_214"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15506"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15505"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_215"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15546"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15545"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_216"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15557"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15556"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_217"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15590"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15589"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_218"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15652"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15651"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_219"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15690"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15689"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_220"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15700"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15699"
      }
    }
  }
}
node {
  name: "Conv1_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15788"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15787"
      }
    }
  }
}
node {
  name: "Conv1_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15798"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15797"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15883"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15882"
      }
    }
  }
}
node {
  name: "expanded_conv_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-15893"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_15892"
      }
    }
  }
}
node {
  name: "block_1_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16053"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16052"
      }
    }
  }
}
node {
  name: "block_1_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16063"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16062"
      }
    }
  }
}
node {
  name: "block_1_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16149"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16148"
      }
    }
  }
}
node {
  name: "block_1_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16159"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16158"
      }
    }
  }
}
node {
  name: "block_2_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16319"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16318"
      }
    }
  }
}
node {
  name: "block_2_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16329"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16328"
      }
    }
  }
}
node {
  name: "block_2_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16414"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16413"
      }
    }
  }
}
node {
  name: "block_2_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16424"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16423"
      }
    }
  }
}
node {
  name: "block_2_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16510"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16509"
      }
    }
  }
}
node {
  name: "block_2_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16521"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16520"
      }
    }
  }
}
node {
  name: "block_3_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16606"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16605"
      }
    }
  }
}
node {
  name: "block_3_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16616"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16615"
      }
    }
  }
}
node {
  name: "block_3_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16702"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16701"
      }
    }
  }
}
node {
  name: "block_3_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16712"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16711"
      }
    }
  }
}
node {
  name: "block_4_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16872"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16871"
      }
    }
  }
}
node {
  name: "block_4_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16882"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16881"
      }
    }
  }
}
node {
  name: "block_4_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16967"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16966"
      }
    }
  }
}
node {
  name: "block_4_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-16977"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_16976"
      }
    }
  }
}
node {
  name: "block_4_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17063"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17062"
      }
    }
  }
}
node {
  name: "block_4_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17074"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17073"
      }
    }
  }
}
node {
  name: "block_5_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17159"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17158"
      }
    }
  }
}
node {
  name: "block_5_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17169"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17168"
      }
    }
  }
}
node {
  name: "block_5_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17254"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17253"
      }
    }
  }
}
node {
  name: "block_5_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17264"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17263"
      }
    }
  }
}
node {
  name: "block_5_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17350"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17349"
      }
    }
  }
}
node {
  name: "block_5_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17361"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17360"
      }
    }
  }
}
node {
  name: "block_6_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17446"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17445"
      }
    }
  }
}
node {
  name: "block_6_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17456"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17455"
      }
    }
  }
}
node {
  name: "block_6_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17542"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17541"
      }
    }
  }
}
node {
  name: "block_6_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17552"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17551"
      }
    }
  }
}
node {
  name: "block_7_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17712"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17711"
      }
    }
  }
}
node {
  name: "block_7_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17722"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17721"
      }
    }
  }
}
node {
  name: "block_7_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17807"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17806"
      }
    }
  }
}
node {
  name: "block_7_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17817"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17816"
      }
    }
  }
}
node {
  name: "block_7_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17903"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17902"
      }
    }
  }
}
node {
  name: "block_7_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17914"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17913"
      }
    }
  }
}
node {
  name: "block_8_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-17999"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_17998"
      }
    }
  }
}
node {
  name: "block_8_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18009"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18008"
      }
    }
  }
}
node {
  name: "block_8_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18094"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18093"
      }
    }
  }
}
node {
  name: "block_8_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18104"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18103"
      }
    }
  }
}
node {
  name: "block_8_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18190"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18189"
      }
    }
  }
}
node {
  name: "block_8_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18201"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18200"
      }
    }
  }
}
node {
  name: "block_9_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18286"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18285"
      }
    }
  }
}
node {
  name: "block_9_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18296"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18295"
      }
    }
  }
}
node {
  name: "block_9_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18381"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18380"
      }
    }
  }
}
node {
  name: "block_9_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18391"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18390"
      }
    }
  }
}
node {
  name: "block_9_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18477"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18476"
      }
    }
  }
}
node {
  name: "block_9_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18488"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18487"
      }
    }
  }
}
node {
  name: "block_10_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18573"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18572"
      }
    }
  }
}
node {
  name: "block_10_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18583"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18582"
      }
    }
  }
}
node {
  name: "block_10_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18668"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18667"
      }
    }
  }
}
node {
  name: "block_10_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18678"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18677"
      }
    }
  }
}
node {
  name: "block_11_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18838"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18837"
      }
    }
  }
}
node {
  name: "block_11_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18848"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18847"
      }
    }
  }
}
node {
  name: "block_11_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18933"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18932"
      }
    }
  }
}
node {
  name: "block_11_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-18943"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_18942"
      }
    }
  }
}
node {
  name: "block_11_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19029"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19028"
      }
    }
  }
}
node {
  name: "block_11_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19040"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19039"
      }
    }
  }
}
node {
  name: "block_12_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19125"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19124"
      }
    }
  }
}
node {
  name: "block_12_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19135"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19134"
      }
    }
  }
}
node {
  name: "block_12_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19220"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19219"
      }
    }
  }
}
node {
  name: "block_12_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19230"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19229"
      }
    }
  }
}
node {
  name: "block_12_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19316"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19315"
      }
    }
  }
}
node {
  name: "block_12_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19327"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19326"
      }
    }
  }
}
node {
  name: "block_13_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19412"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19411"
      }
    }
  }
}
node {
  name: "block_13_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19422"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19421"
      }
    }
  }
}
node {
  name: "block_13_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19508"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19507"
      }
    }
  }
}
node {
  name: "block_13_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19518"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19517"
      }
    }
  }
}
node {
  name: "block_14_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19678"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19677"
      }
    }
  }
}
node {
  name: "block_14_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19688"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19687"
      }
    }
  }
}
node {
  name: "block_14_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19773"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19772"
      }
    }
  }
}
node {
  name: "block_14_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19783"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19782"
      }
    }
  }
}
node {
  name: "block_14_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19869"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19868"
      }
    }
  }
}
node {
  name: "block_14_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19880"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19879"
      }
    }
  }
}
node {
  name: "block_15_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19965"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19964"
      }
    }
  }
}
node {
  name: "block_15_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-19975"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_19974"
      }
    }
  }
}
node {
  name: "block_15_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20060"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20059"
      }
    }
  }
}
node {
  name: "block_15_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20070"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20069"
      }
    }
  }
}
node {
  name: "block_15_add/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20156"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20155"
      }
    }
  }
}
node {
  name: "block_15_add/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20167"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20166"
      }
    }
  }
}
node {
  name: "block_16_expand_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20252"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20251"
      }
    }
  }
}
node {
  name: "block_16_expand_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20262"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20261"
      }
    }
  }
}
node {
  name: "block_16_depthwise_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20347"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20346"
      }
    }
  }
}
node {
  name: "block_16_depthwise_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20357"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20356"
      }
    }
  }
}
node {
  name: "out_relu/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20517"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20516"
      }
    }
  }
}
node {
  name: "out_relu/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20527"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20526"
      }
    }
  }
}
node {
  name: "flatten/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20545"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20544"
      }
    }
  }
}
node {
  name: "flatten/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20555"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20554"
      }
    }
  }
}
node {
  name: "dense/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20571"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20570"
      }
    }
  }
}
node {
  name: "dense/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20583"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20582"
      }
    }
  }
}
node {
  name: "dropout/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20610"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20609"
      }
    }
  }
}
node {
  name: "dropout/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20625"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20624"
      }
    }
  }
}
node {
  name: "face_model/output_node/PartitionedFunctionCall"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20647"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20646"
      }
    }
  }
}
node {
  name: "face_model/output_node/PartitionedFunctionCall_1"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20659"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20658"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_221"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-20667"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_20666"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_222"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-21795"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_21794"
      }
    }
  }
}
node {
  name: "PartitionedFunctionCall_223"
  op: "PartitionedCall"
  attr {
    key: "Tin"
    value {
      list {
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-22766"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: "R\005R\003\230\001\001"
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_initialize_variables_22765"
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "StringJoin/inputs_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_24e99953bfec4c2eaf822848ce0e0a8a/part"
      }
    }
  }
}
node {
  name: "StringJoin"
  op: "StringJoin"
  input: "Const_1"
  input: "StringJoin/inputs_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "num_shards"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ShardedFilename"
  op: "ShardedFilename"
  input: "StringJoin"
  input: "ShardedFilename/shard"
  input: "num_shards"
  device: "/device:CPU:0"
}
node {
  name: "SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 279
          }
        }
        string_val: "layer_with_weights-0/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-2/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-4/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-6/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-8/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-10/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-12/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-14/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-16/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-18/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-20/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-22/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-24/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-26/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-28/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-30/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-32/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-34/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-36/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-38/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-40/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-42/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-44/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-46/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-48/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-50/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-52/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-54/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-56/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-58/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-60/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-62/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-64/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-66/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-68/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-70/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-72/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-74/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-76/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-78/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-80/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-82/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-84/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-86/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-88/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-90/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-92/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-94/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-96/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-98/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-100/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-102/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/bias/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/bias/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/iter/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/beta_1/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/beta_2/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/decay/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/learning_rate/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "keras_api/metrics/0/total/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "keras_api/metrics/0/count/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/kernel/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/bias/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/kernel/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/bias/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/kernel/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/bias/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/kernel/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/bias/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
      }
    }
  }
}
node {
  name: "SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 279
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "SaveV2"
  op: "SaveV2"
  input: "ShardedFilename"
  input: "SaveV2/tensor_names"
  input: "SaveV2/shape_and_slices"
  input: "Conv1/kernel/Read/ReadVariableOp"
  input: "bn_Conv1/gamma/Read/ReadVariableOp"
  input: "bn_Conv1/beta/Read/ReadVariableOp"
  input: "bn_Conv1/moving_mean/Read/ReadVariableOp"
  input: "bn_Conv1/moving_variance/Read/ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "expanded_conv_project/kernel/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_expand/kernel/Read/ReadVariableOp"
  input: "block_1_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_1_expand_BN/beta/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_project/kernel/Read/ReadVariableOp"
  input: "block_1_project_BN/gamma/Read/ReadVariableOp"
  input: "block_1_project_BN/beta/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_expand/kernel/Read/ReadVariableOp"
  input: "block_2_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_2_expand_BN/beta/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_project/kernel/Read/ReadVariableOp"
  input: "block_2_project_BN/gamma/Read/ReadVariableOp"
  input: "block_2_project_BN/beta/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_expand/kernel/Read/ReadVariableOp"
  input: "block_3_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_3_expand_BN/beta/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_project/kernel/Read/ReadVariableOp"
  input: "block_3_project_BN/gamma/Read/ReadVariableOp"
  input: "block_3_project_BN/beta/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_expand/kernel/Read/ReadVariableOp"
  input: "block_4_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_4_expand_BN/beta/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_project/kernel/Read/ReadVariableOp"
  input: "block_4_project_BN/gamma/Read/ReadVariableOp"
  input: "block_4_project_BN/beta/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_expand/kernel/Read/ReadVariableOp"
  input: "block_5_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_5_expand_BN/beta/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_project/kernel/Read/ReadVariableOp"
  input: "block_5_project_BN/gamma/Read/ReadVariableOp"
  input: "block_5_project_BN/beta/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_expand/kernel/Read/ReadVariableOp"
  input: "block_6_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_6_expand_BN/beta/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_project/kernel/Read/ReadVariableOp"
  input: "block_6_project_BN/gamma/Read/ReadVariableOp"
  input: "block_6_project_BN/beta/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_expand/kernel/Read/ReadVariableOp"
  input: "block_7_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_7_expand_BN/beta/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_project/kernel/Read/ReadVariableOp"
  input: "block_7_project_BN/gamma/Read/ReadVariableOp"
  input: "block_7_project_BN/beta/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_expand/kernel/Read/ReadVariableOp"
  input: "block_8_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_8_expand_BN/beta/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_project/kernel/Read/ReadVariableOp"
  input: "block_8_project_BN/gamma/Read/ReadVariableOp"
  input: "block_8_project_BN/beta/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_expand/kernel/Read/ReadVariableOp"
  input: "block_9_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_9_expand_BN/beta/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_project/kernel/Read/ReadVariableOp"
  input: "block_9_project_BN/gamma/Read/ReadVariableOp"
  input: "block_9_project_BN/beta/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_expand/kernel/Read/ReadVariableOp"
  input: "block_10_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_10_expand_BN/beta/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_project/kernel/Read/ReadVariableOp"
  input: "block_10_project_BN/gamma/Read/ReadVariableOp"
  input: "block_10_project_BN/beta/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_expand/kernel/Read/ReadVariableOp"
  input: "block_11_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_11_expand_BN/beta/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_project/kernel/Read/ReadVariableOp"
  input: "block_11_project_BN/gamma/Read/ReadVariableOp"
  input: "block_11_project_BN/beta/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_expand/kernel/Read/ReadVariableOp"
  input: "block_12_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_12_expand_BN/beta/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_project/kernel/Read/ReadVariableOp"
  input: "block_12_project_BN/gamma/Read/ReadVariableOp"
  input: "block_12_project_BN/beta/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_expand/kernel/Read/ReadVariableOp"
  input: "block_13_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_13_expand_BN/beta/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_project/kernel/Read/ReadVariableOp"
  input: "block_13_project_BN/gamma/Read/ReadVariableOp"
  input: "block_13_project_BN/beta/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_expand/kernel/Read/ReadVariableOp"
  input: "block_14_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_14_expand_BN/beta/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_project/kernel/Read/ReadVariableOp"
  input: "block_14_project_BN/gamma/Read/ReadVariableOp"
  input: "block_14_project_BN/beta/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_expand/kernel/Read/ReadVariableOp"
  input: "block_15_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_15_expand_BN/beta/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_project/kernel/Read/ReadVariableOp"
  input: "block_15_project_BN/gamma/Read/ReadVariableOp"
  input: "block_15_project_BN/beta/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_expand/kernel/Read/ReadVariableOp"
  input: "block_16_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_16_expand_BN/beta/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_project/kernel/Read/ReadVariableOp"
  input: "block_16_project_BN/gamma/Read/ReadVariableOp"
  input: "block_16_project_BN/beta/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_variance/Read/ReadVariableOp"
  input: "Conv_1/kernel/Read/ReadVariableOp"
  input: "Conv_1_bn/gamma/Read/ReadVariableOp"
  input: "Conv_1_bn/beta/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_mean/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_variance/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "face_model/output_node/kernel/Read/ReadVariableOp"
  input: "face_model/output_node/bias/Read/ReadVariableOp"
  input: "training/Adam/iter/Read/ReadVariableOp"
  input: "training/Adam/beta_1/Read/ReadVariableOp"
  input: "training/Adam/beta_2/Read/ReadVariableOp"
  input: "training/Adam/decay/Read/ReadVariableOp"
  input: "training/Adam/learning_rate/Read/ReadVariableOp"
  input: "total/Read/ReadVariableOp"
  input: "count/Read/ReadVariableOp"
  input: "training/Adam/dense/kernel/m/Read/ReadVariableOp"
  input: "training/Adam/dense/bias/m/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/kernel/m/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/bias/m/Read/ReadVariableOp"
  input: "training/Adam/dense/kernel/v/Read/ReadVariableOp"
  input: "training/Adam/dense/bias/v/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/kernel/v/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/bias/v/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ShardedFilename_1"
  op: "ShardedFilename"
  input: "StringJoin"
  input: "ShardedFilename_1/shard"
  input: "num_shards"
  device: "/device:CPU:0"
}
node {
  name: "SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "_CHECKPOINTABLE_OBJECT_GRAPH"
      }
    }
  }
}
node {
  name: "SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "SaveV2_1"
  op: "SaveV2"
  input: "ShardedFilename_1"
  input: "SaveV2_1/tensor_names"
  input: "SaveV2_1/shape_and_slices"
  input: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "ShardedFilename"
  input: "ShardedFilename_1"
  input: "^SaveV2"
  input: "^SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "MergeV2Checkpoints/checkpoint_prefixes"
  input: "Const_1"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "Const_1"
  input: "^MergeV2Checkpoints"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "StringJoin_1/inputs_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_93136d1ed9704191bf91bcb27fcbcc6f/part"
      }
    }
  }
}
node {
  name: "StringJoin_1"
  op: "StringJoin"
  input: "Const_3"
  input: "StringJoin_1/inputs_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "num_shards_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ShardedFilename_2/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ShardedFilename_2"
  op: "ShardedFilename"
  input: "StringJoin_1"
  input: "ShardedFilename_2/shard"
  input: "num_shards_1"
  device: "/device:CPU:0"
}
node {
  name: "SaveV2_2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 277
          }
        }
        string_val: "layer_with_weights-0/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-1/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-2/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-3/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-4/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-5/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-6/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-7/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-8/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-9/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-10/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-11/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-12/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-13/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-14/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-15/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-16/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-17/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-18/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-19/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-20/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-21/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-22/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-23/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-24/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-25/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-26/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-27/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-28/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-29/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-30/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-31/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-32/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-33/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-34/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-35/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-36/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-37/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-38/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-39/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-40/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-41/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-42/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-43/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-44/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-45/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-46/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-47/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-48/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-49/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-50/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-51/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-52/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-53/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-54/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-55/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-56/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-57/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-58/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-59/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-60/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-61/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-62/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-63/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-64/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-65/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-66/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-67/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-68/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-69/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-70/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-71/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-72/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-73/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-74/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-75/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-76/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-77/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-78/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-79/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-80/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-81/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-82/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-83/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-84/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-85/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-86/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-87/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-88/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-89/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-90/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-91/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-92/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-93/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-94/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-95/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-96/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-97/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-98/depthwise_kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-99/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-100/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-101/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-102/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/gamma/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/beta/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/moving_mean/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-103/moving_variance/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/bias/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/kernel/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/bias/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/iter/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/beta_1/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/beta_2/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/decay/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "optimizer/learning_rate/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/kernel/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/bias/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/kernel/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/bias/.OPTIMIZER_SLOT/optimizer/m/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/kernel/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-104/bias/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/kernel/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
        string_val: "layer_with_weights-105/bias/.OPTIMIZER_SLOT/optimizer/v/.ATTRIBUTES/VARIABLE_VALUE"
      }
    }
  }
}
node {
  name: "SaveV2_2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 277
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "SaveV2_2"
  op: "SaveV2"
  input: "ShardedFilename_2"
  input: "SaveV2_2/tensor_names"
  input: "SaveV2_2/shape_and_slices"
  input: "Conv1/kernel/Read/ReadVariableOp"
  input: "bn_Conv1/gamma/Read/ReadVariableOp"
  input: "bn_Conv1/beta/Read/ReadVariableOp"
  input: "bn_Conv1/moving_mean/Read/ReadVariableOp"
  input: "bn_Conv1/moving_variance/Read/ReadVariableOp"
  input: "expanded_conv_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "expanded_conv_project/kernel/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/gamma/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/beta/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_mean/Read/ReadVariableOp"
  input: "expanded_conv_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_expand/kernel/Read/ReadVariableOp"
  input: "block_1_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_1_expand_BN/beta/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_1_project/kernel/Read/ReadVariableOp"
  input: "block_1_project_BN/gamma/Read/ReadVariableOp"
  input: "block_1_project_BN/beta/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_1_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_expand/kernel/Read/ReadVariableOp"
  input: "block_2_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_2_expand_BN/beta/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_2_project/kernel/Read/ReadVariableOp"
  input: "block_2_project_BN/gamma/Read/ReadVariableOp"
  input: "block_2_project_BN/beta/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_2_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_expand/kernel/Read/ReadVariableOp"
  input: "block_3_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_3_expand_BN/beta/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_3_project/kernel/Read/ReadVariableOp"
  input: "block_3_project_BN/gamma/Read/ReadVariableOp"
  input: "block_3_project_BN/beta/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_3_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_expand/kernel/Read/ReadVariableOp"
  input: "block_4_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_4_expand_BN/beta/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_4_project/kernel/Read/ReadVariableOp"
  input: "block_4_project_BN/gamma/Read/ReadVariableOp"
  input: "block_4_project_BN/beta/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_4_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_expand/kernel/Read/ReadVariableOp"
  input: "block_5_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_5_expand_BN/beta/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_5_project/kernel/Read/ReadVariableOp"
  input: "block_5_project_BN/gamma/Read/ReadVariableOp"
  input: "block_5_project_BN/beta/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_5_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_expand/kernel/Read/ReadVariableOp"
  input: "block_6_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_6_expand_BN/beta/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_6_project/kernel/Read/ReadVariableOp"
  input: "block_6_project_BN/gamma/Read/ReadVariableOp"
  input: "block_6_project_BN/beta/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_6_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_expand/kernel/Read/ReadVariableOp"
  input: "block_7_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_7_expand_BN/beta/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_7_project/kernel/Read/ReadVariableOp"
  input: "block_7_project_BN/gamma/Read/ReadVariableOp"
  input: "block_7_project_BN/beta/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_7_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_expand/kernel/Read/ReadVariableOp"
  input: "block_8_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_8_expand_BN/beta/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_8_project/kernel/Read/ReadVariableOp"
  input: "block_8_project_BN/gamma/Read/ReadVariableOp"
  input: "block_8_project_BN/beta/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_8_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_expand/kernel/Read/ReadVariableOp"
  input: "block_9_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_9_expand_BN/beta/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_9_project/kernel/Read/ReadVariableOp"
  input: "block_9_project_BN/gamma/Read/ReadVariableOp"
  input: "block_9_project_BN/beta/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_9_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_expand/kernel/Read/ReadVariableOp"
  input: "block_10_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_10_expand_BN/beta/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_10_project/kernel/Read/ReadVariableOp"
  input: "block_10_project_BN/gamma/Read/ReadVariableOp"
  input: "block_10_project_BN/beta/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_10_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_expand/kernel/Read/ReadVariableOp"
  input: "block_11_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_11_expand_BN/beta/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_11_project/kernel/Read/ReadVariableOp"
  input: "block_11_project_BN/gamma/Read/ReadVariableOp"
  input: "block_11_project_BN/beta/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_11_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_expand/kernel/Read/ReadVariableOp"
  input: "block_12_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_12_expand_BN/beta/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_12_project/kernel/Read/ReadVariableOp"
  input: "block_12_project_BN/gamma/Read/ReadVariableOp"
  input: "block_12_project_BN/beta/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_12_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_expand/kernel/Read/ReadVariableOp"
  input: "block_13_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_13_expand_BN/beta/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_13_project/kernel/Read/ReadVariableOp"
  input: "block_13_project_BN/gamma/Read/ReadVariableOp"
  input: "block_13_project_BN/beta/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_13_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_expand/kernel/Read/ReadVariableOp"
  input: "block_14_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_14_expand_BN/beta/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_14_project/kernel/Read/ReadVariableOp"
  input: "block_14_project_BN/gamma/Read/ReadVariableOp"
  input: "block_14_project_BN/beta/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_14_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_expand/kernel/Read/ReadVariableOp"
  input: "block_15_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_15_expand_BN/beta/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_15_project/kernel/Read/ReadVariableOp"
  input: "block_15_project_BN/gamma/Read/ReadVariableOp"
  input: "block_15_project_BN/beta/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_15_project_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_expand/kernel/Read/ReadVariableOp"
  input: "block_16_expand_BN/gamma/Read/ReadVariableOp"
  input: "block_16_expand_BN/beta/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_expand_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_depthwise/depthwise_kernel/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/gamma/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/beta/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_depthwise_BN/moving_variance/Read/ReadVariableOp"
  input: "block_16_project/kernel/Read/ReadVariableOp"
  input: "block_16_project_BN/gamma/Read/ReadVariableOp"
  input: "block_16_project_BN/beta/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_mean/Read/ReadVariableOp"
  input: "block_16_project_BN/moving_variance/Read/ReadVariableOp"
  input: "Conv_1/kernel/Read/ReadVariableOp"
  input: "Conv_1_bn/gamma/Read/ReadVariableOp"
  input: "Conv_1_bn/beta/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_mean/Read/ReadVariableOp"
  input: "Conv_1_bn/moving_variance/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "face_model/output_node/kernel/Read/ReadVariableOp"
  input: "face_model/output_node/bias/Read/ReadVariableOp"
  input: "training/Adam/iter/Read/ReadVariableOp"
  input: "training/Adam/beta_1/Read/ReadVariableOp"
  input: "training/Adam/beta_2/Read/ReadVariableOp"
  input: "training/Adam/decay/Read/ReadVariableOp"
  input: "training/Adam/learning_rate/Read/ReadVariableOp"
  input: "training/Adam/dense/kernel/m/Read/ReadVariableOp"
  input: "training/Adam/dense/bias/m/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/kernel/m/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/bias/m/Read/ReadVariableOp"
  input: "training/Adam/dense/kernel/v/Read/ReadVariableOp"
  input: "training/Adam/dense/bias/v/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/kernel/v/Read/ReadVariableOp"
  input: "training/Adam/face_model/output_node/bias/v/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "ShardedFilename_3/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ShardedFilename_3"
  op: "ShardedFilename"
  input: "StringJoin_1"
  input: "ShardedFilename_3/shard"
  input: "num_shards_1"
  device: "/device:CPU:0"
}
node {
  name: "SaveV2_3/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "_CHECKPOINTABLE_OBJECT_GRAPH"
      }
    }
  }
}
node {
  name: "SaveV2_3/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "SaveV2_3"
  op: "SaveV2"
  input: "ShardedFilename_3"
  input: "SaveV2_3/tensor_names"
  input: "SaveV2_3/shape_and_slices"
  input: "Const_2"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "MergeV2Checkpoints_1/checkpoint_prefixes"
  op: "Pack"
  input: "ShardedFilename_2"
  input: "ShardedFilename_3"
  input: "^SaveV2_2"
  input: "^SaveV2_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MergeV2Checkpoints_1"
  op: "MergeV2Checkpoints"
  input: "MergeV2Checkpoints_1/checkpoint_prefixes"
  input: "Const_3"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "Const_3"
  input: "^MergeV2Checkpoints_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
library {
  function {
    signature {
      name: "__inference_initialize_variables_10185"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12750"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18380"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13871"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13431"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15116"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16871"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16605"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14919"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12929"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10990"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20554"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13325"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14384"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10771"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8699"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18103"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10519"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11576"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13920"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13484"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9745"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20544"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8739"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13765"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13663"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16520"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14373"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18476"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16052"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8385"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10810"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9639"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18189"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19782"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_22765"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10225"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9537"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8091"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10236"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10820"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11463"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15399"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12783"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15211"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13336"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13473"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17711"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13077"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15105"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19507"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10844"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12604"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20570"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8593"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16158"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8580"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17445"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11136"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19879"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12111"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10709"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11724"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13139"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8783"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10676"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15410"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8637"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20582"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19039"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13933"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19326"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12456"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20516"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12310"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_7954"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14090"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9599"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18582"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18200"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15651"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8845"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8896"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19124"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17263"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9493"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9785"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15003"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9223"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9650"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18295"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20526"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8133"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12153"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14824"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14269"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14331"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15253"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18093"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12991"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13285"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14039"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16701"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19868"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18667"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12739"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9190"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14857"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10269"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17816"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9796"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17062"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8177"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16413"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17455"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15882"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19028"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14709"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11870"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17349"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17551"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12016"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18487"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19134"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9077"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19772"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14236"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13910"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16976"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8531"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20155"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14079"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14123"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18285"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12551"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10563"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12197"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19229"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20658"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17158"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15065"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_7974"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8239"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9480"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18390"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12699"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14225"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11819"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12489"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11169"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15556"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16423"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8885"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11273"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_21794"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18837"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18942"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18008"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13517"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9431"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16148"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19315"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13977"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9683"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11565"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10877"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14417"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11430"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20059"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14185"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10979"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11284"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9033"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14771"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14625"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9891"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17998"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17902"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10833"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20261"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17806"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13369"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12593"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15787"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11525"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11379"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8290"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16966"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19219"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13223"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14665"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12845"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8425"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10079"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11125"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13179"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12637"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13776"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18932"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11419"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11671"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13190"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13809"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9933"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19517"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18677"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10384"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11085"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12885"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20069"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13630"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20346"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19964"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12164"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12405"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12445"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8991"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9044"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8323"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9470"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9504"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16509"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10530"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17913"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17541"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11757"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11317"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8279"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20646"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9829"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15264"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10625"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_7964"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13044"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17168"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19421"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8029"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12259"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12343"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19677"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20609"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16062"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13619"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11023"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8570"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19974"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10090"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9179"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16615"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9139"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15149"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16318"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17073"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20356"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14970"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19411"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12299"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14959"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11231"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14519"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8469"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11713"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10479"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12049"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13944"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10039"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10417"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15797"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10665"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8750"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14530"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11609"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_7985"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9944"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11965"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15505"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8436"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15892"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20624"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14813"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14479"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18572"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16328"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17360"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9285"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15359"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17253"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9977"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15443"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20251"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12005"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16881"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_19687"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10331"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_16711"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_12896"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20666"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8604"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14676"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10373"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15297"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_17721"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_7996"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15589"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10939"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9369"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_10123"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11903"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15545"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9336"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8144"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_11859"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13033"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_18847"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_20166"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_14563"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_9325"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13725"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_8929"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15689"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_15699"
    }
  }
  function {
    signature {
      name: "__inference_initialize_variables_13579"
    }
  }
}
versions {
  producer: 134
  min_consumer: 12
}
